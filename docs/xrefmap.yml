### YamlMime:XRefMap
sorted: true
references:
- uid: LibSodium
  name: LibSodium
  href: api/LibSodium.html
  commentId: N:LibSodium
  fullName: LibSodium
  nameWithType: LibSodium
- uid: LibSodium.Aegis128L
  name: Aegis128L
  href: api/LibSodium.Aegis128L.html
  commentId: T:LibSodium.Aegis128L
  fullName: LibSodium.Aegis128L
  nameWithType: Aegis128L
- uid: LibSodium.Aegis128L.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.Aegis128L.html#LibSodium_Aegis128L_Decrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.Aegis128L.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.Aegis128L.Decrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.Aegis128L.Decrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: Aegis128L.Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: Aegis128L.Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.Aegis128L.Decrypt*
  name: Decrypt
  href: api/LibSodium.Aegis128L.html#LibSodium_Aegis128L_Decrypt_
  commentId: Overload:LibSodium.Aegis128L.Decrypt
  isSpec: "True"
  fullName: LibSodium.Aegis128L.Decrypt
  nameWithType: Aegis128L.Decrypt
- uid: LibSodium.Aegis128L.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.Aegis128L.html#LibSodium_Aegis128L_Encrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.Aegis128L.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.Aegis128L.Encrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.Aegis128L.Encrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: Aegis128L.Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: Aegis128L.Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.Aegis128L.Encrypt*
  name: Encrypt
  href: api/LibSodium.Aegis128L.html#LibSodium_Aegis128L_Encrypt_
  commentId: Overload:LibSodium.Aegis128L.Encrypt
  isSpec: "True"
  fullName: LibSodium.Aegis128L.Encrypt
  nameWithType: Aegis128L.Encrypt
- uid: LibSodium.Aegis128L.KeyLen
  name: KeyLen
  href: api/LibSodium.Aegis128L.html#LibSodium_Aegis128L_KeyLen
  commentId: P:LibSodium.Aegis128L.KeyLen
  fullName: LibSodium.Aegis128L.KeyLen
  nameWithType: Aegis128L.KeyLen
- uid: LibSodium.Aegis128L.KeyLen*
  name: KeyLen
  href: api/LibSodium.Aegis128L.html#LibSodium_Aegis128L_KeyLen_
  commentId: Overload:LibSodium.Aegis128L.KeyLen
  isSpec: "True"
  fullName: LibSodium.Aegis128L.KeyLen
  nameWithType: Aegis128L.KeyLen
- uid: LibSodium.Aegis128L.MacLen
  name: MacLen
  href: api/LibSodium.Aegis128L.html#LibSodium_Aegis128L_MacLen
  commentId: P:LibSodium.Aegis128L.MacLen
  fullName: LibSodium.Aegis128L.MacLen
  nameWithType: Aegis128L.MacLen
- uid: LibSodium.Aegis128L.MacLen*
  name: MacLen
  href: api/LibSodium.Aegis128L.html#LibSodium_Aegis128L_MacLen_
  commentId: Overload:LibSodium.Aegis128L.MacLen
  isSpec: "True"
  fullName: LibSodium.Aegis128L.MacLen
  nameWithType: Aegis128L.MacLen
- uid: LibSodium.Aegis128L.NonceLen
  name: NonceLen
  href: api/LibSodium.Aegis128L.html#LibSodium_Aegis128L_NonceLen
  commentId: P:LibSodium.Aegis128L.NonceLen
  fullName: LibSodium.Aegis128L.NonceLen
  nameWithType: Aegis128L.NonceLen
- uid: LibSodium.Aegis128L.NonceLen*
  name: NonceLen
  href: api/LibSodium.Aegis128L.html#LibSodium_Aegis128L_NonceLen_
  commentId: Overload:LibSodium.Aegis128L.NonceLen
  isSpec: "True"
  fullName: LibSodium.Aegis128L.NonceLen
  nameWithType: Aegis128L.NonceLen
- uid: LibSodium.Aegis256
  name: Aegis256
  href: api/LibSodium.Aegis256.html
  commentId: T:LibSodium.Aegis256
  fullName: LibSodium.Aegis256
  nameWithType: Aegis256
- uid: LibSodium.Aegis256.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.Aegis256.html#LibSodium_Aegis256_Decrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.Aegis256.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.Aegis256.Decrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.Aegis256.Decrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: Aegis256.Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: Aegis256.Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.Aegis256.Decrypt*
  name: Decrypt
  href: api/LibSodium.Aegis256.html#LibSodium_Aegis256_Decrypt_
  commentId: Overload:LibSodium.Aegis256.Decrypt
  isSpec: "True"
  fullName: LibSodium.Aegis256.Decrypt
  nameWithType: Aegis256.Decrypt
- uid: LibSodium.Aegis256.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.Aegis256.html#LibSodium_Aegis256_Encrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.Aegis256.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.Aegis256.Encrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.Aegis256.Encrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: Aegis256.Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: Aegis256.Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.Aegis256.Encrypt*
  name: Encrypt
  href: api/LibSodium.Aegis256.html#LibSodium_Aegis256_Encrypt_
  commentId: Overload:LibSodium.Aegis256.Encrypt
  isSpec: "True"
  fullName: LibSodium.Aegis256.Encrypt
  nameWithType: Aegis256.Encrypt
- uid: LibSodium.Aegis256.KeyLen
  name: KeyLen
  href: api/LibSodium.Aegis256.html#LibSodium_Aegis256_KeyLen
  commentId: P:LibSodium.Aegis256.KeyLen
  fullName: LibSodium.Aegis256.KeyLen
  nameWithType: Aegis256.KeyLen
- uid: LibSodium.Aegis256.KeyLen*
  name: KeyLen
  href: api/LibSodium.Aegis256.html#LibSodium_Aegis256_KeyLen_
  commentId: Overload:LibSodium.Aegis256.KeyLen
  isSpec: "True"
  fullName: LibSodium.Aegis256.KeyLen
  nameWithType: Aegis256.KeyLen
- uid: LibSodium.Aegis256.MacLen
  name: MacLen
  href: api/LibSodium.Aegis256.html#LibSodium_Aegis256_MacLen
  commentId: P:LibSodium.Aegis256.MacLen
  fullName: LibSodium.Aegis256.MacLen
  nameWithType: Aegis256.MacLen
- uid: LibSodium.Aegis256.MacLen*
  name: MacLen
  href: api/LibSodium.Aegis256.html#LibSodium_Aegis256_MacLen_
  commentId: Overload:LibSodium.Aegis256.MacLen
  isSpec: "True"
  fullName: LibSodium.Aegis256.MacLen
  nameWithType: Aegis256.MacLen
- uid: LibSodium.Aegis256.NonceLen
  name: NonceLen
  href: api/LibSodium.Aegis256.html#LibSodium_Aegis256_NonceLen
  commentId: P:LibSodium.Aegis256.NonceLen
  fullName: LibSodium.Aegis256.NonceLen
  nameWithType: Aegis256.NonceLen
- uid: LibSodium.Aegis256.NonceLen*
  name: NonceLen
  href: api/LibSodium.Aegis256.html#LibSodium_Aegis256_NonceLen_
  commentId: Overload:LibSodium.Aegis256.NonceLen
  isSpec: "True"
  fullName: LibSodium.Aegis256.NonceLen
  nameWithType: Aegis256.NonceLen
- uid: LibSodium.Aes256Gcm
  name: Aes256Gcm
  href: api/LibSodium.Aes256Gcm.html
  commentId: T:LibSodium.Aes256Gcm
  fullName: LibSodium.Aes256Gcm
  nameWithType: Aes256Gcm
- uid: LibSodium.Aes256Gcm.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.Aes256Gcm.html#LibSodium_Aes256Gcm_Decrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.Aes256Gcm.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.Aes256Gcm.Decrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.Aes256Gcm.Decrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: Aes256Gcm.Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: Aes256Gcm.Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.Aes256Gcm.Decrypt*
  name: Decrypt
  href: api/LibSodium.Aes256Gcm.html#LibSodium_Aes256Gcm_Decrypt_
  commentId: Overload:LibSodium.Aes256Gcm.Decrypt
  isSpec: "True"
  fullName: LibSodium.Aes256Gcm.Decrypt
  nameWithType: Aes256Gcm.Decrypt
- uid: LibSodium.Aes256Gcm.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.Aes256Gcm.html#LibSodium_Aes256Gcm_Encrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.Aes256Gcm.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.Aes256Gcm.Encrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.Aes256Gcm.Encrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: Aes256Gcm.Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: Aes256Gcm.Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.Aes256Gcm.Encrypt*
  name: Encrypt
  href: api/LibSodium.Aes256Gcm.html#LibSodium_Aes256Gcm_Encrypt_
  commentId: Overload:LibSodium.Aes256Gcm.Encrypt
  isSpec: "True"
  fullName: LibSodium.Aes256Gcm.Encrypt
  nameWithType: Aes256Gcm.Encrypt
- uid: LibSodium.Aes256Gcm.KeyLen
  name: KeyLen
  href: api/LibSodium.Aes256Gcm.html#LibSodium_Aes256Gcm_KeyLen
  commentId: P:LibSodium.Aes256Gcm.KeyLen
  fullName: LibSodium.Aes256Gcm.KeyLen
  nameWithType: Aes256Gcm.KeyLen
- uid: LibSodium.Aes256Gcm.KeyLen*
  name: KeyLen
  href: api/LibSodium.Aes256Gcm.html#LibSodium_Aes256Gcm_KeyLen_
  commentId: Overload:LibSodium.Aes256Gcm.KeyLen
  isSpec: "True"
  fullName: LibSodium.Aes256Gcm.KeyLen
  nameWithType: Aes256Gcm.KeyLen
- uid: LibSodium.Aes256Gcm.MacLen
  name: MacLen
  href: api/LibSodium.Aes256Gcm.html#LibSodium_Aes256Gcm_MacLen
  commentId: P:LibSodium.Aes256Gcm.MacLen
  fullName: LibSodium.Aes256Gcm.MacLen
  nameWithType: Aes256Gcm.MacLen
- uid: LibSodium.Aes256Gcm.MacLen*
  name: MacLen
  href: api/LibSodium.Aes256Gcm.html#LibSodium_Aes256Gcm_MacLen_
  commentId: Overload:LibSodium.Aes256Gcm.MacLen
  isSpec: "True"
  fullName: LibSodium.Aes256Gcm.MacLen
  nameWithType: Aes256Gcm.MacLen
- uid: LibSodium.Aes256Gcm.NonceLen
  name: NonceLen
  href: api/LibSodium.Aes256Gcm.html#LibSodium_Aes256Gcm_NonceLen
  commentId: P:LibSodium.Aes256Gcm.NonceLen
  fullName: LibSodium.Aes256Gcm.NonceLen
  nameWithType: Aes256Gcm.NonceLen
- uid: LibSodium.Aes256Gcm.NonceLen*
  name: NonceLen
  href: api/LibSodium.Aes256Gcm.html#LibSodium_Aes256Gcm_NonceLen_
  commentId: Overload:LibSodium.Aes256Gcm.NonceLen
  isSpec: "True"
  fullName: LibSodium.Aes256Gcm.NonceLen
  nameWithType: Aes256Gcm.NonceLen
- uid: LibSodium.Base64Encoding
  name: Base64Encoding
  href: api/LibSodium.Base64Encoding.html
  commentId: T:LibSodium.Base64Encoding
  fullName: LibSodium.Base64Encoding
  nameWithType: Base64Encoding
- uid: LibSodium.Base64Encoding.Base64ToBin(System.ReadOnlySpan{System.Char},System.Span{System.Byte},LibSodium.Base64Variant,System.String)
  name: Base64ToBin(ReadOnlySpan<char>, Span<byte>, Base64Variant, string?)
  href: api/LibSodium.Base64Encoding.html#LibSodium_Base64Encoding_Base64ToBin_System_ReadOnlySpan_System_Char__System_Span_System_Byte__LibSodium_Base64Variant_System_String_
  commentId: M:LibSodium.Base64Encoding.Base64ToBin(System.ReadOnlySpan{System.Char},System.Span{System.Byte},LibSodium.Base64Variant,System.String)
  name.vb: Base64ToBin(ReadOnlySpan(Of Char), Span(Of Byte), Base64Variant, String)
  fullName: LibSodium.Base64Encoding.Base64ToBin(System.ReadOnlySpan<char>, System.Span<byte>, LibSodium.Base64Variant, string?)
  fullName.vb: LibSodium.Base64Encoding.Base64ToBin(System.ReadOnlySpan(Of Char), System.Span(Of Byte), LibSodium.Base64Variant, String)
  nameWithType: Base64Encoding.Base64ToBin(ReadOnlySpan<char>, Span<byte>, Base64Variant, string?)
  nameWithType.vb: Base64Encoding.Base64ToBin(ReadOnlySpan(Of Char), Span(Of Byte), Base64Variant, String)
- uid: LibSodium.Base64Encoding.Base64ToBin(System.String,System.Span{System.Byte},LibSodium.Base64Variant,System.String)
  name: Base64ToBin(string, Span<byte>, Base64Variant, string?)
  href: api/LibSodium.Base64Encoding.html#LibSodium_Base64Encoding_Base64ToBin_System_String_System_Span_System_Byte__LibSodium_Base64Variant_System_String_
  commentId: M:LibSodium.Base64Encoding.Base64ToBin(System.String,System.Span{System.Byte},LibSodium.Base64Variant,System.String)
  name.vb: Base64ToBin(String, Span(Of Byte), Base64Variant, String)
  fullName: LibSodium.Base64Encoding.Base64ToBin(string, System.Span<byte>, LibSodium.Base64Variant, string?)
  fullName.vb: LibSodium.Base64Encoding.Base64ToBin(String, System.Span(Of Byte), LibSodium.Base64Variant, String)
  nameWithType: Base64Encoding.Base64ToBin(string, Span<byte>, Base64Variant, string?)
  nameWithType.vb: Base64Encoding.Base64ToBin(String, Span(Of Byte), Base64Variant, String)
- uid: LibSodium.Base64Encoding.Base64ToBin*
  name: Base64ToBin
  href: api/LibSodium.Base64Encoding.html#LibSodium_Base64Encoding_Base64ToBin_
  commentId: Overload:LibSodium.Base64Encoding.Base64ToBin
  isSpec: "True"
  fullName: LibSodium.Base64Encoding.Base64ToBin
  nameWithType: Base64Encoding.Base64ToBin
- uid: LibSodium.Base64Encoding.BinToBase64(System.ReadOnlySpan{System.Byte},LibSodium.Base64Variant)
  name: BinToBase64(ReadOnlySpan<byte>, Base64Variant)
  href: api/LibSodium.Base64Encoding.html#LibSodium_Base64Encoding_BinToBase64_System_ReadOnlySpan_System_Byte__LibSodium_Base64Variant_
  commentId: M:LibSodium.Base64Encoding.BinToBase64(System.ReadOnlySpan{System.Byte},LibSodium.Base64Variant)
  name.vb: BinToBase64(ReadOnlySpan(Of Byte), Base64Variant)
  fullName: LibSodium.Base64Encoding.BinToBase64(System.ReadOnlySpan<byte>, LibSodium.Base64Variant)
  fullName.vb: LibSodium.Base64Encoding.BinToBase64(System.ReadOnlySpan(Of Byte), LibSodium.Base64Variant)
  nameWithType: Base64Encoding.BinToBase64(ReadOnlySpan<byte>, Base64Variant)
  nameWithType.vb: Base64Encoding.BinToBase64(ReadOnlySpan(Of Byte), Base64Variant)
- uid: LibSodium.Base64Encoding.BinToBase64(System.ReadOnlySpan{System.Byte},System.Span{System.Char},LibSodium.Base64Variant)
  name: BinToBase64(ReadOnlySpan<byte>, Span<char>, Base64Variant)
  href: api/LibSodium.Base64Encoding.html#LibSodium_Base64Encoding_BinToBase64_System_ReadOnlySpan_System_Byte__System_Span_System_Char__LibSodium_Base64Variant_
  commentId: M:LibSodium.Base64Encoding.BinToBase64(System.ReadOnlySpan{System.Byte},System.Span{System.Char},LibSodium.Base64Variant)
  name.vb: BinToBase64(ReadOnlySpan(Of Byte), Span(Of Char), Base64Variant)
  fullName: LibSodium.Base64Encoding.BinToBase64(System.ReadOnlySpan<byte>, System.Span<char>, LibSodium.Base64Variant)
  fullName.vb: LibSodium.Base64Encoding.BinToBase64(System.ReadOnlySpan(Of Byte), System.Span(Of Char), LibSodium.Base64Variant)
  nameWithType: Base64Encoding.BinToBase64(ReadOnlySpan<byte>, Span<char>, Base64Variant)
  nameWithType.vb: Base64Encoding.BinToBase64(ReadOnlySpan(Of Byte), Span(Of Char), Base64Variant)
- uid: LibSodium.Base64Encoding.BinToBase64*
  name: BinToBase64
  href: api/LibSodium.Base64Encoding.html#LibSodium_Base64Encoding_BinToBase64_
  commentId: Overload:LibSodium.Base64Encoding.BinToBase64
  isSpec: "True"
  fullName: LibSodium.Base64Encoding.BinToBase64
  nameWithType: Base64Encoding.BinToBase64
- uid: LibSodium.Base64Encoding.GetBase64DecodedMaxLen(System.Int32)
  name: GetBase64DecodedMaxLen(int)
  href: api/LibSodium.Base64Encoding.html#LibSodium_Base64Encoding_GetBase64DecodedMaxLen_System_Int32_
  commentId: M:LibSodium.Base64Encoding.GetBase64DecodedMaxLen(System.Int32)
  name.vb: GetBase64DecodedMaxLen(Integer)
  fullName: LibSodium.Base64Encoding.GetBase64DecodedMaxLen(int)
  fullName.vb: LibSodium.Base64Encoding.GetBase64DecodedMaxLen(Integer)
  nameWithType: Base64Encoding.GetBase64DecodedMaxLen(int)
  nameWithType.vb: Base64Encoding.GetBase64DecodedMaxLen(Integer)
- uid: LibSodium.Base64Encoding.GetBase64DecodedMaxLen*
  name: GetBase64DecodedMaxLen
  href: api/LibSodium.Base64Encoding.html#LibSodium_Base64Encoding_GetBase64DecodedMaxLen_
  commentId: Overload:LibSodium.Base64Encoding.GetBase64DecodedMaxLen
  isSpec: "True"
  fullName: LibSodium.Base64Encoding.GetBase64DecodedMaxLen
  nameWithType: Base64Encoding.GetBase64DecodedMaxLen
- uid: LibSodium.Base64Encoding.GetBase64EncodedLen(System.Int32,LibSodium.Base64Variant,System.Boolean)
  name: GetBase64EncodedLen(int, Base64Variant, bool)
  href: api/LibSodium.Base64Encoding.html#LibSodium_Base64Encoding_GetBase64EncodedLen_System_Int32_LibSodium_Base64Variant_System_Boolean_
  commentId: M:LibSodium.Base64Encoding.GetBase64EncodedLen(System.Int32,LibSodium.Base64Variant,System.Boolean)
  name.vb: GetBase64EncodedLen(Integer, Base64Variant, Boolean)
  fullName: LibSodium.Base64Encoding.GetBase64EncodedLen(int, LibSodium.Base64Variant, bool)
  fullName.vb: LibSodium.Base64Encoding.GetBase64EncodedLen(Integer, LibSodium.Base64Variant, Boolean)
  nameWithType: Base64Encoding.GetBase64EncodedLen(int, Base64Variant, bool)
  nameWithType.vb: Base64Encoding.GetBase64EncodedLen(Integer, Base64Variant, Boolean)
- uid: LibSodium.Base64Encoding.GetBase64EncodedLen*
  name: GetBase64EncodedLen
  href: api/LibSodium.Base64Encoding.html#LibSodium_Base64Encoding_GetBase64EncodedLen_
  commentId: Overload:LibSodium.Base64Encoding.GetBase64EncodedLen
  isSpec: "True"
  fullName: LibSodium.Base64Encoding.GetBase64EncodedLen
  nameWithType: Base64Encoding.GetBase64EncodedLen
- uid: LibSodium.Base64Variant
  name: Base64Variant
  href: api/LibSodium.Base64Variant.html
  commentId: T:LibSodium.Base64Variant
  fullName: LibSodium.Base64Variant
  nameWithType: Base64Variant
- uid: LibSodium.Base64Variant.Original
  name: Original
  href: api/LibSodium.Base64Variant.html#LibSodium_Base64Variant_Original
  commentId: F:LibSodium.Base64Variant.Original
  fullName: LibSodium.Base64Variant.Original
  nameWithType: Base64Variant.Original
- uid: LibSodium.Base64Variant.OriginalNoPadding
  name: OriginalNoPadding
  href: api/LibSodium.Base64Variant.html#LibSodium_Base64Variant_OriginalNoPadding
  commentId: F:LibSodium.Base64Variant.OriginalNoPadding
  fullName: LibSodium.Base64Variant.OriginalNoPadding
  nameWithType: Base64Variant.OriginalNoPadding
- uid: LibSodium.Base64Variant.UrlSafe
  name: UrlSafe
  href: api/LibSodium.Base64Variant.html#LibSodium_Base64Variant_UrlSafe
  commentId: F:LibSodium.Base64Variant.UrlSafe
  fullName: LibSodium.Base64Variant.UrlSafe
  nameWithType: Base64Variant.UrlSafe
- uid: LibSodium.Base64Variant.UrlSafeNoPadding
  name: UrlSafeNoPadding
  href: api/LibSodium.Base64Variant.html#LibSodium_Base64Variant_UrlSafeNoPadding
  commentId: F:LibSodium.Base64Variant.UrlSafeNoPadding
  fullName: LibSodium.Base64Variant.UrlSafeNoPadding
  nameWithType: Base64Variant.UrlSafeNoPadding
- uid: LibSodium.ChaCha20Poly1305
  name: ChaCha20Poly1305
  href: api/LibSodium.ChaCha20Poly1305.html
  commentId: T:LibSodium.ChaCha20Poly1305
  fullName: LibSodium.ChaCha20Poly1305
  nameWithType: ChaCha20Poly1305
- uid: LibSodium.ChaCha20Poly1305.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.ChaCha20Poly1305.html#LibSodium_ChaCha20Poly1305_Decrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.ChaCha20Poly1305.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.ChaCha20Poly1305.Decrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.ChaCha20Poly1305.Decrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: ChaCha20Poly1305.Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: ChaCha20Poly1305.Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.ChaCha20Poly1305.Decrypt*
  name: Decrypt
  href: api/LibSodium.ChaCha20Poly1305.html#LibSodium_ChaCha20Poly1305_Decrypt_
  commentId: Overload:LibSodium.ChaCha20Poly1305.Decrypt
  isSpec: "True"
  fullName: LibSodium.ChaCha20Poly1305.Decrypt
  nameWithType: ChaCha20Poly1305.Decrypt
- uid: LibSodium.ChaCha20Poly1305.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.ChaCha20Poly1305.html#LibSodium_ChaCha20Poly1305_Encrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.ChaCha20Poly1305.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.ChaCha20Poly1305.Encrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.ChaCha20Poly1305.Encrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: ChaCha20Poly1305.Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: ChaCha20Poly1305.Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.ChaCha20Poly1305.Encrypt*
  name: Encrypt
  href: api/LibSodium.ChaCha20Poly1305.html#LibSodium_ChaCha20Poly1305_Encrypt_
  commentId: Overload:LibSodium.ChaCha20Poly1305.Encrypt
  isSpec: "True"
  fullName: LibSodium.ChaCha20Poly1305.Encrypt
  nameWithType: ChaCha20Poly1305.Encrypt
- uid: LibSodium.ChaCha20Poly1305.KeyLen
  name: KeyLen
  href: api/LibSodium.ChaCha20Poly1305.html#LibSodium_ChaCha20Poly1305_KeyLen
  commentId: P:LibSodium.ChaCha20Poly1305.KeyLen
  fullName: LibSodium.ChaCha20Poly1305.KeyLen
  nameWithType: ChaCha20Poly1305.KeyLen
- uid: LibSodium.ChaCha20Poly1305.KeyLen*
  name: KeyLen
  href: api/LibSodium.ChaCha20Poly1305.html#LibSodium_ChaCha20Poly1305_KeyLen_
  commentId: Overload:LibSodium.ChaCha20Poly1305.KeyLen
  isSpec: "True"
  fullName: LibSodium.ChaCha20Poly1305.KeyLen
  nameWithType: ChaCha20Poly1305.KeyLen
- uid: LibSodium.ChaCha20Poly1305.MacLen
  name: MacLen
  href: api/LibSodium.ChaCha20Poly1305.html#LibSodium_ChaCha20Poly1305_MacLen
  commentId: P:LibSodium.ChaCha20Poly1305.MacLen
  fullName: LibSodium.ChaCha20Poly1305.MacLen
  nameWithType: ChaCha20Poly1305.MacLen
- uid: LibSodium.ChaCha20Poly1305.MacLen*
  name: MacLen
  href: api/LibSodium.ChaCha20Poly1305.html#LibSodium_ChaCha20Poly1305_MacLen_
  commentId: Overload:LibSodium.ChaCha20Poly1305.MacLen
  isSpec: "True"
  fullName: LibSodium.ChaCha20Poly1305.MacLen
  nameWithType: ChaCha20Poly1305.MacLen
- uid: LibSodium.ChaCha20Poly1305.NonceLen
  name: NonceLen
  href: api/LibSodium.ChaCha20Poly1305.html#LibSodium_ChaCha20Poly1305_NonceLen
  commentId: P:LibSodium.ChaCha20Poly1305.NonceLen
  fullName: LibSodium.ChaCha20Poly1305.NonceLen
  nameWithType: ChaCha20Poly1305.NonceLen
- uid: LibSodium.ChaCha20Poly1305.NonceLen*
  name: NonceLen
  href: api/LibSodium.ChaCha20Poly1305.html#LibSodium_ChaCha20Poly1305_NonceLen_
  commentId: Overload:LibSodium.ChaCha20Poly1305.NonceLen
  isSpec: "True"
  fullName: LibSodium.ChaCha20Poly1305.NonceLen
  nameWithType: ChaCha20Poly1305.NonceLen
- uid: LibSodium.ChaCha20Poly1305Ietf
  name: ChaCha20Poly1305Ietf
  href: api/LibSodium.ChaCha20Poly1305Ietf.html
  commentId: T:LibSodium.ChaCha20Poly1305Ietf
  fullName: LibSodium.ChaCha20Poly1305Ietf
  nameWithType: ChaCha20Poly1305Ietf
- uid: LibSodium.ChaCha20Poly1305Ietf.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.ChaCha20Poly1305Ietf.html#LibSodium_ChaCha20Poly1305Ietf_Decrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.ChaCha20Poly1305Ietf.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.ChaCha20Poly1305Ietf.Decrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.ChaCha20Poly1305Ietf.Decrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: ChaCha20Poly1305Ietf.Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: ChaCha20Poly1305Ietf.Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.ChaCha20Poly1305Ietf.Decrypt*
  name: Decrypt
  href: api/LibSodium.ChaCha20Poly1305Ietf.html#LibSodium_ChaCha20Poly1305Ietf_Decrypt_
  commentId: Overload:LibSodium.ChaCha20Poly1305Ietf.Decrypt
  isSpec: "True"
  fullName: LibSodium.ChaCha20Poly1305Ietf.Decrypt
  nameWithType: ChaCha20Poly1305Ietf.Decrypt
- uid: LibSodium.ChaCha20Poly1305Ietf.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.ChaCha20Poly1305Ietf.html#LibSodium_ChaCha20Poly1305Ietf_Encrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.ChaCha20Poly1305Ietf.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.ChaCha20Poly1305Ietf.Encrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.ChaCha20Poly1305Ietf.Encrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: ChaCha20Poly1305Ietf.Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: ChaCha20Poly1305Ietf.Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.ChaCha20Poly1305Ietf.Encrypt*
  name: Encrypt
  href: api/LibSodium.ChaCha20Poly1305Ietf.html#LibSodium_ChaCha20Poly1305Ietf_Encrypt_
  commentId: Overload:LibSodium.ChaCha20Poly1305Ietf.Encrypt
  isSpec: "True"
  fullName: LibSodium.ChaCha20Poly1305Ietf.Encrypt
  nameWithType: ChaCha20Poly1305Ietf.Encrypt
- uid: LibSodium.ChaCha20Poly1305Ietf.KeyLen
  name: KeyLen
  href: api/LibSodium.ChaCha20Poly1305Ietf.html#LibSodium_ChaCha20Poly1305Ietf_KeyLen
  commentId: P:LibSodium.ChaCha20Poly1305Ietf.KeyLen
  fullName: LibSodium.ChaCha20Poly1305Ietf.KeyLen
  nameWithType: ChaCha20Poly1305Ietf.KeyLen
- uid: LibSodium.ChaCha20Poly1305Ietf.KeyLen*
  name: KeyLen
  href: api/LibSodium.ChaCha20Poly1305Ietf.html#LibSodium_ChaCha20Poly1305Ietf_KeyLen_
  commentId: Overload:LibSodium.ChaCha20Poly1305Ietf.KeyLen
  isSpec: "True"
  fullName: LibSodium.ChaCha20Poly1305Ietf.KeyLen
  nameWithType: ChaCha20Poly1305Ietf.KeyLen
- uid: LibSodium.ChaCha20Poly1305Ietf.MacLen
  name: MacLen
  href: api/LibSodium.ChaCha20Poly1305Ietf.html#LibSodium_ChaCha20Poly1305Ietf_MacLen
  commentId: P:LibSodium.ChaCha20Poly1305Ietf.MacLen
  fullName: LibSodium.ChaCha20Poly1305Ietf.MacLen
  nameWithType: ChaCha20Poly1305Ietf.MacLen
- uid: LibSodium.ChaCha20Poly1305Ietf.MacLen*
  name: MacLen
  href: api/LibSodium.ChaCha20Poly1305Ietf.html#LibSodium_ChaCha20Poly1305Ietf_MacLen_
  commentId: Overload:LibSodium.ChaCha20Poly1305Ietf.MacLen
  isSpec: "True"
  fullName: LibSodium.ChaCha20Poly1305Ietf.MacLen
  nameWithType: ChaCha20Poly1305Ietf.MacLen
- uid: LibSodium.ChaCha20Poly1305Ietf.NonceLen
  name: NonceLen
  href: api/LibSodium.ChaCha20Poly1305Ietf.html#LibSodium_ChaCha20Poly1305Ietf_NonceLen
  commentId: P:LibSodium.ChaCha20Poly1305Ietf.NonceLen
  fullName: LibSodium.ChaCha20Poly1305Ietf.NonceLen
  nameWithType: ChaCha20Poly1305Ietf.NonceLen
- uid: LibSodium.ChaCha20Poly1305Ietf.NonceLen*
  name: NonceLen
  href: api/LibSodium.ChaCha20Poly1305Ietf.html#LibSodium_ChaCha20Poly1305Ietf_NonceLen_
  commentId: Overload:LibSodium.ChaCha20Poly1305Ietf.NonceLen
  isSpec: "True"
  fullName: LibSodium.ChaCha20Poly1305Ietf.NonceLen
  nameWithType: ChaCha20Poly1305Ietf.NonceLen
- uid: LibSodium.CryptoAuth
  name: CryptoAuth
  href: api/LibSodium.CryptoAuth.html
  commentId: T:LibSodium.CryptoAuth
  fullName: LibSodium.CryptoAuth
  nameWithType: CryptoAuth
- uid: LibSodium.CryptoAuth.ComputeMac(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: ComputeMac(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoAuth.html#LibSodium_CryptoAuth_ComputeMac_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoAuth.ComputeMac(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: ComputeMac(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoAuth.ComputeMac(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoAuth.ComputeMac(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoAuth.ComputeMac(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoAuth.ComputeMac(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoAuth.ComputeMac*
  name: ComputeMac
  href: api/LibSodium.CryptoAuth.html#LibSodium_CryptoAuth_ComputeMac_
  commentId: Overload:LibSodium.CryptoAuth.ComputeMac
  isSpec: "True"
  fullName: LibSodium.CryptoAuth.ComputeMac
  nameWithType: CryptoAuth.ComputeMac
- uid: LibSodium.CryptoAuth.GenerateKey(System.Span{System.Byte})
  name: GenerateKey(Span<byte>)
  href: api/LibSodium.CryptoAuth.html#LibSodium_CryptoAuth_GenerateKey_System_Span_System_Byte__
  commentId: M:LibSodium.CryptoAuth.GenerateKey(System.Span{System.Byte})
  name.vb: GenerateKey(Span(Of Byte))
  fullName: LibSodium.CryptoAuth.GenerateKey(System.Span<byte>)
  fullName.vb: LibSodium.CryptoAuth.GenerateKey(System.Span(Of Byte))
  nameWithType: CryptoAuth.GenerateKey(Span<byte>)
  nameWithType.vb: CryptoAuth.GenerateKey(Span(Of Byte))
- uid: LibSodium.CryptoAuth.GenerateKey*
  name: GenerateKey
  href: api/LibSodium.CryptoAuth.html#LibSodium_CryptoAuth_GenerateKey_
  commentId: Overload:LibSodium.CryptoAuth.GenerateKey
  isSpec: "True"
  fullName: LibSodium.CryptoAuth.GenerateKey
  nameWithType: CryptoAuth.GenerateKey
- uid: LibSodium.CryptoAuth.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoAuth.html#LibSodium_CryptoAuth_KeyLen
  commentId: F:LibSodium.CryptoAuth.KeyLen
  fullName: LibSodium.CryptoAuth.KeyLen
  nameWithType: CryptoAuth.KeyLen
- uid: LibSodium.CryptoAuth.MacLen
  name: MacLen
  href: api/LibSodium.CryptoAuth.html#LibSodium_CryptoAuth_MacLen
  commentId: F:LibSodium.CryptoAuth.MacLen
  fullName: LibSodium.CryptoAuth.MacLen
  nameWithType: CryptoAuth.MacLen
- uid: LibSodium.CryptoAuth.TryVerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: TryVerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoAuth.html#LibSodium_CryptoAuth_TryVerifyMac_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoAuth.TryVerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: TryVerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoAuth.TryVerifyMac(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoAuth.TryVerifyMac(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoAuth.TryVerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoAuth.TryVerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoAuth.TryVerifyMac*
  name: TryVerifyMac
  href: api/LibSodium.CryptoAuth.html#LibSodium_CryptoAuth_TryVerifyMac_
  commentId: Overload:LibSodium.CryptoAuth.TryVerifyMac
  isSpec: "True"
  fullName: LibSodium.CryptoAuth.TryVerifyMac
  nameWithType: CryptoAuth.TryVerifyMac
- uid: LibSodium.CryptoAuth.VerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: VerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoAuth.html#LibSodium_CryptoAuth_VerifyMac_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoAuth.VerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: VerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoAuth.VerifyMac(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoAuth.VerifyMac(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoAuth.VerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoAuth.VerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoAuth.VerifyMac*
  name: VerifyMac
  href: api/LibSodium.CryptoAuth.html#LibSodium_CryptoAuth_VerifyMac_
  commentId: Overload:LibSodium.CryptoAuth.VerifyMac
  isSpec: "True"
  fullName: LibSodium.CryptoAuth.VerifyMac
  nameWithType: CryptoAuth.VerifyMac
- uid: LibSodium.CryptoBox
  name: CryptoBox
  href: api/LibSodium.CryptoBox.html
  commentId: T:LibSodium.CryptoBox
  fullName: LibSodium.CryptoBox
  nameWithType: CryptoBox
- uid: LibSodium.CryptoBox.CalculatePublicKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: CalculatePublicKey(Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_CalculatePublicKey_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoBox.CalculatePublicKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: CalculatePublicKey(Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoBox.CalculatePublicKey(System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoBox.CalculatePublicKey(System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoBox.CalculatePublicKey(Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoBox.CalculatePublicKey(Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoBox.CalculatePublicKey*
  name: CalculatePublicKey
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_CalculatePublicKey_
  commentId: Overload:LibSodium.CryptoBox.CalculatePublicKey
  isSpec: "True"
  fullName: LibSodium.CryptoBox.CalculatePublicKey
  nameWithType: CryptoBox.CalculatePublicKey
- uid: LibSodium.CryptoBox.CalculateSharedKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: CalculateSharedKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_CalculateSharedKey_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoBox.CalculateSharedKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: CalculateSharedKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoBox.CalculateSharedKey(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoBox.CalculateSharedKey(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoBox.CalculateSharedKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoBox.CalculateSharedKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoBox.CalculateSharedKey*
  name: CalculateSharedKey
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_CalculateSharedKey_
  commentId: Overload:LibSodium.CryptoBox.CalculateSharedKey
  isSpec: "True"
  fullName: LibSodium.CryptoBox.CalculateSharedKey
  nameWithType: CryptoBox.CalculateSharedKey
- uid: LibSodium.CryptoBox.DecryptWithKeypair(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: DecryptWithKeypair(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_DecryptWithKeypair_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoBox.DecryptWithKeypair(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: DecryptWithKeypair(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoBox.DecryptWithKeypair(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoBox.DecryptWithKeypair(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoBox.DecryptWithKeypair(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoBox.DecryptWithKeypair(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoBox.DecryptWithKeypair*
  name: DecryptWithKeypair
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_DecryptWithKeypair_
  commentId: Overload:LibSodium.CryptoBox.DecryptWithKeypair
  isSpec: "True"
  fullName: LibSodium.CryptoBox.DecryptWithKeypair
  nameWithType: CryptoBox.DecryptWithKeypair
- uid: LibSodium.CryptoBox.DecryptWithPrivateKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: DecryptWithPrivateKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_DecryptWithPrivateKey_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoBox.DecryptWithPrivateKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: DecryptWithPrivateKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoBox.DecryptWithPrivateKey(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoBox.DecryptWithPrivateKey(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoBox.DecryptWithPrivateKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoBox.DecryptWithPrivateKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoBox.DecryptWithPrivateKey*
  name: DecryptWithPrivateKey
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_DecryptWithPrivateKey_
  commentId: Overload:LibSodium.CryptoBox.DecryptWithPrivateKey
  isSpec: "True"
  fullName: LibSodium.CryptoBox.DecryptWithPrivateKey
  nameWithType: CryptoBox.DecryptWithPrivateKey
- uid: LibSodium.CryptoBox.DecryptWithSharedKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: DecryptWithSharedKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_DecryptWithSharedKey_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoBox.DecryptWithSharedKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: DecryptWithSharedKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoBox.DecryptWithSharedKey(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoBox.DecryptWithSharedKey(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoBox.DecryptWithSharedKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoBox.DecryptWithSharedKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoBox.DecryptWithSharedKey*
  name: DecryptWithSharedKey
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_DecryptWithSharedKey_
  commentId: Overload:LibSodium.CryptoBox.DecryptWithSharedKey
  isSpec: "True"
  fullName: LibSodium.CryptoBox.DecryptWithSharedKey
  nameWithType: CryptoBox.DecryptWithSharedKey
- uid: LibSodium.CryptoBox.EncryptWithKeypair(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: EncryptWithKeypair(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_EncryptWithKeypair_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoBox.EncryptWithKeypair(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: EncryptWithKeypair(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoBox.EncryptWithKeypair(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoBox.EncryptWithKeypair(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoBox.EncryptWithKeypair(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoBox.EncryptWithKeypair(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoBox.EncryptWithKeypair*
  name: EncryptWithKeypair
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_EncryptWithKeypair_
  commentId: Overload:LibSodium.CryptoBox.EncryptWithKeypair
  isSpec: "True"
  fullName: LibSodium.CryptoBox.EncryptWithKeypair
  nameWithType: CryptoBox.EncryptWithKeypair
- uid: LibSodium.CryptoBox.EncryptWithPublicKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: EncryptWithPublicKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_EncryptWithPublicKey_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoBox.EncryptWithPublicKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: EncryptWithPublicKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoBox.EncryptWithPublicKey(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoBox.EncryptWithPublicKey(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoBox.EncryptWithPublicKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoBox.EncryptWithPublicKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoBox.EncryptWithPublicKey*
  name: EncryptWithPublicKey
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_EncryptWithPublicKey_
  commentId: Overload:LibSodium.CryptoBox.EncryptWithPublicKey
  isSpec: "True"
  fullName: LibSodium.CryptoBox.EncryptWithPublicKey
  nameWithType: CryptoBox.EncryptWithPublicKey
- uid: LibSodium.CryptoBox.EncryptWithSharedKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: EncryptWithSharedKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_EncryptWithSharedKey_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoBox.EncryptWithSharedKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: EncryptWithSharedKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoBox.EncryptWithSharedKey(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoBox.EncryptWithSharedKey(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoBox.EncryptWithSharedKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoBox.EncryptWithSharedKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoBox.EncryptWithSharedKey*
  name: EncryptWithSharedKey
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_EncryptWithSharedKey_
  commentId: Overload:LibSodium.CryptoBox.EncryptWithSharedKey
  isSpec: "True"
  fullName: LibSodium.CryptoBox.EncryptWithSharedKey
  nameWithType: CryptoBox.EncryptWithSharedKey
- uid: LibSodium.CryptoBox.GenerateKeypair(System.Span{System.Byte},System.Span{System.Byte})
  name: GenerateKeypair(Span<byte>, Span<byte>)
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_GenerateKeypair_System_Span_System_Byte__System_Span_System_Byte__
  commentId: M:LibSodium.CryptoBox.GenerateKeypair(System.Span{System.Byte},System.Span{System.Byte})
  name.vb: GenerateKeypair(Span(Of Byte), Span(Of Byte))
  fullName: LibSodium.CryptoBox.GenerateKeypair(System.Span<byte>, System.Span<byte>)
  fullName.vb: LibSodium.CryptoBox.GenerateKeypair(System.Span(Of Byte), System.Span(Of Byte))
  nameWithType: CryptoBox.GenerateKeypair(Span<byte>, Span<byte>)
  nameWithType.vb: CryptoBox.GenerateKeypair(Span(Of Byte), Span(Of Byte))
- uid: LibSodium.CryptoBox.GenerateKeypair*
  name: GenerateKeypair
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_GenerateKeypair_
  commentId: Overload:LibSodium.CryptoBox.GenerateKeypair
  isSpec: "True"
  fullName: LibSodium.CryptoBox.GenerateKeypair
  nameWithType: CryptoBox.GenerateKeypair
- uid: LibSodium.CryptoBox.GenerateKeypairDeterministically(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: GenerateKeypairDeterministically(Span<byte>, Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_GenerateKeypairDeterministically_System_Span_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoBox.GenerateKeypairDeterministically(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: GenerateKeypairDeterministically(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoBox.GenerateKeypairDeterministically(System.Span<byte>, System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoBox.GenerateKeypairDeterministically(System.Span(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoBox.GenerateKeypairDeterministically(Span<byte>, Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoBox.GenerateKeypairDeterministically(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoBox.GenerateKeypairDeterministically*
  name: GenerateKeypairDeterministically
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_GenerateKeypairDeterministically_
  commentId: Overload:LibSodium.CryptoBox.GenerateKeypairDeterministically
  isSpec: "True"
  fullName: LibSodium.CryptoBox.GenerateKeypairDeterministically
  nameWithType: CryptoBox.GenerateKeypairDeterministically
- uid: LibSodium.CryptoBox.MacLen
  name: MacLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_MacLen
  commentId: P:LibSodium.CryptoBox.MacLen
  fullName: LibSodium.CryptoBox.MacLen
  nameWithType: CryptoBox.MacLen
- uid: LibSodium.CryptoBox.MacLen*
  name: MacLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_MacLen_
  commentId: Overload:LibSodium.CryptoBox.MacLen
  isSpec: "True"
  fullName: LibSodium.CryptoBox.MacLen
  nameWithType: CryptoBox.MacLen
- uid: LibSodium.CryptoBox.NonceLen
  name: NonceLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_NonceLen
  commentId: P:LibSodium.CryptoBox.NonceLen
  fullName: LibSodium.CryptoBox.NonceLen
  nameWithType: CryptoBox.NonceLen
- uid: LibSodium.CryptoBox.NonceLen*
  name: NonceLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_NonceLen_
  commentId: Overload:LibSodium.CryptoBox.NonceLen
  isSpec: "True"
  fullName: LibSodium.CryptoBox.NonceLen
  nameWithType: CryptoBox.NonceLen
- uid: LibSodium.CryptoBox.PrivateKeyLen
  name: PrivateKeyLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_PrivateKeyLen
  commentId: P:LibSodium.CryptoBox.PrivateKeyLen
  fullName: LibSodium.CryptoBox.PrivateKeyLen
  nameWithType: CryptoBox.PrivateKeyLen
- uid: LibSodium.CryptoBox.PrivateKeyLen*
  name: PrivateKeyLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_PrivateKeyLen_
  commentId: Overload:LibSodium.CryptoBox.PrivateKeyLen
  isSpec: "True"
  fullName: LibSodium.CryptoBox.PrivateKeyLen
  nameWithType: CryptoBox.PrivateKeyLen
- uid: LibSodium.CryptoBox.PublicKeyLen
  name: PublicKeyLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_PublicKeyLen
  commentId: P:LibSodium.CryptoBox.PublicKeyLen
  fullName: LibSodium.CryptoBox.PublicKeyLen
  nameWithType: CryptoBox.PublicKeyLen
- uid: LibSodium.CryptoBox.PublicKeyLen*
  name: PublicKeyLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_PublicKeyLen_
  commentId: Overload:LibSodium.CryptoBox.PublicKeyLen
  isSpec: "True"
  fullName: LibSodium.CryptoBox.PublicKeyLen
  nameWithType: CryptoBox.PublicKeyLen
- uid: LibSodium.CryptoBox.SealOverheadLen
  name: SealOverheadLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_SealOverheadLen
  commentId: P:LibSodium.CryptoBox.SealOverheadLen
  fullName: LibSodium.CryptoBox.SealOverheadLen
  nameWithType: CryptoBox.SealOverheadLen
- uid: LibSodium.CryptoBox.SealOverheadLen*
  name: SealOverheadLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_SealOverheadLen_
  commentId: Overload:LibSodium.CryptoBox.SealOverheadLen
  isSpec: "True"
  fullName: LibSodium.CryptoBox.SealOverheadLen
  nameWithType: CryptoBox.SealOverheadLen
- uid: LibSodium.CryptoBox.SeedLen
  name: SeedLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_SeedLen
  commentId: P:LibSodium.CryptoBox.SeedLen
  fullName: LibSodium.CryptoBox.SeedLen
  nameWithType: CryptoBox.SeedLen
- uid: LibSodium.CryptoBox.SeedLen*
  name: SeedLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_SeedLen_
  commentId: Overload:LibSodium.CryptoBox.SeedLen
  isSpec: "True"
  fullName: LibSodium.CryptoBox.SeedLen
  nameWithType: CryptoBox.SeedLen
- uid: LibSodium.CryptoBox.SharedKeyLen
  name: SharedKeyLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_SharedKeyLen
  commentId: P:LibSodium.CryptoBox.SharedKeyLen
  fullName: LibSodium.CryptoBox.SharedKeyLen
  nameWithType: CryptoBox.SharedKeyLen
- uid: LibSodium.CryptoBox.SharedKeyLen*
  name: SharedKeyLen
  href: api/LibSodium.CryptoBox.html#LibSodium_CryptoBox_SharedKeyLen_
  commentId: Overload:LibSodium.CryptoBox.SharedKeyLen
  isSpec: "True"
  fullName: LibSodium.CryptoBox.SharedKeyLen
  nameWithType: CryptoBox.SharedKeyLen
- uid: LibSodium.CryptoGenericHash
  name: CryptoGenericHash
  href: api/LibSodium.CryptoGenericHash.html
  commentId: T:LibSodium.CryptoGenericHash
  fullName: LibSodium.CryptoGenericHash
  nameWithType: CryptoGenericHash
- uid: LibSodium.CryptoGenericHash.ComputeHash(System.Span{System.Byte},System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name: ComputeHash(Span<byte>, Stream, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_ComputeHash_System_Span_System_Byte__System_IO_Stream_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoGenericHash.ComputeHash(System.Span{System.Byte},System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name.vb: ComputeHash(Span(Of Byte), Stream, ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoGenericHash.ComputeHash(System.Span<byte>, System.IO.Stream, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoGenericHash.ComputeHash(System.Span(Of Byte), System.IO.Stream, System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoGenericHash.ComputeHash(Span<byte>, Stream, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoGenericHash.ComputeHash(Span(Of Byte), Stream, ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoGenericHash.ComputeHash(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: ComputeHash(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_ComputeHash_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoGenericHash.ComputeHash(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: ComputeHash(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoGenericHash.ComputeHash(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoGenericHash.ComputeHash(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoGenericHash.ComputeHash(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoGenericHash.ComputeHash(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoGenericHash.ComputeHash*
  name: ComputeHash
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_ComputeHash_
  commentId: Overload:LibSodium.CryptoGenericHash.ComputeHash
  isSpec: "True"
  fullName: LibSodium.CryptoGenericHash.ComputeHash
  nameWithType: CryptoGenericHash.ComputeHash
- uid: LibSodium.CryptoGenericHash.ComputeHashAsync(System.Memory{System.Byte},System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: ComputeHashAsync(Memory<byte>, Stream, ReadOnlyMemory<byte>, CancellationToken)
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_ComputeHashAsync_System_Memory_System_Byte__System_IO_Stream_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoGenericHash.ComputeHashAsync(System.Memory{System.Byte},System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: ComputeHashAsync(Memory(Of Byte), Stream, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: LibSodium.CryptoGenericHash.ComputeHashAsync(System.Memory<byte>, System.IO.Stream, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoGenericHash.ComputeHashAsync(System.Memory(Of Byte), System.IO.Stream, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: CryptoGenericHash.ComputeHashAsync(Memory<byte>, Stream, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: CryptoGenericHash.ComputeHashAsync(Memory(Of Byte), Stream, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: LibSodium.CryptoGenericHash.ComputeHashAsync*
  name: ComputeHashAsync
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_ComputeHashAsync_
  commentId: Overload:LibSodium.CryptoGenericHash.ComputeHashAsync
  isSpec: "True"
  fullName: LibSodium.CryptoGenericHash.ComputeHashAsync
  nameWithType: CryptoGenericHash.ComputeHashAsync
- uid: LibSodium.CryptoGenericHash.CreateIncrementalHash(System.ReadOnlySpan{System.Byte},System.Int32)
  name: CreateIncrementalHash(ReadOnlySpan<byte>, int)
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_CreateIncrementalHash_System_ReadOnlySpan_System_Byte__System_Int32_
  commentId: M:LibSodium.CryptoGenericHash.CreateIncrementalHash(System.ReadOnlySpan{System.Byte},System.Int32)
  name.vb: CreateIncrementalHash(ReadOnlySpan(Of Byte), Integer)
  fullName: LibSodium.CryptoGenericHash.CreateIncrementalHash(System.ReadOnlySpan<byte>, int)
  fullName.vb: LibSodium.CryptoGenericHash.CreateIncrementalHash(System.ReadOnlySpan(Of Byte), Integer)
  nameWithType: CryptoGenericHash.CreateIncrementalHash(ReadOnlySpan<byte>, int)
  nameWithType.vb: CryptoGenericHash.CreateIncrementalHash(ReadOnlySpan(Of Byte), Integer)
- uid: LibSodium.CryptoGenericHash.CreateIncrementalHash*
  name: CreateIncrementalHash
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_CreateIncrementalHash_
  commentId: Overload:LibSodium.CryptoGenericHash.CreateIncrementalHash
  isSpec: "True"
  fullName: LibSodium.CryptoGenericHash.CreateIncrementalHash
  nameWithType: CryptoGenericHash.CreateIncrementalHash
- uid: LibSodium.CryptoGenericHash.HashLen
  name: HashLen
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_HashLen
  commentId: F:LibSodium.CryptoGenericHash.HashLen
  fullName: LibSodium.CryptoGenericHash.HashLen
  nameWithType: CryptoGenericHash.HashLen
- uid: LibSodium.CryptoGenericHash.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_KeyLen
  commentId: F:LibSodium.CryptoGenericHash.KeyLen
  fullName: LibSodium.CryptoGenericHash.KeyLen
  nameWithType: CryptoGenericHash.KeyLen
- uid: LibSodium.CryptoGenericHash.MaxHashLen
  name: MaxHashLen
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_MaxHashLen
  commentId: F:LibSodium.CryptoGenericHash.MaxHashLen
  fullName: LibSodium.CryptoGenericHash.MaxHashLen
  nameWithType: CryptoGenericHash.MaxHashLen
- uid: LibSodium.CryptoGenericHash.MaxKeyLen
  name: MaxKeyLen
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_MaxKeyLen
  commentId: F:LibSodium.CryptoGenericHash.MaxKeyLen
  fullName: LibSodium.CryptoGenericHash.MaxKeyLen
  nameWithType: CryptoGenericHash.MaxKeyLen
- uid: LibSodium.CryptoGenericHash.MinHashLen
  name: MinHashLen
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_MinHashLen
  commentId: F:LibSodium.CryptoGenericHash.MinHashLen
  fullName: LibSodium.CryptoGenericHash.MinHashLen
  nameWithType: CryptoGenericHash.MinHashLen
- uid: LibSodium.CryptoGenericHash.MinKeyLen
  name: MinKeyLen
  href: api/LibSodium.CryptoGenericHash.html#LibSodium_CryptoGenericHash_MinKeyLen
  commentId: F:LibSodium.CryptoGenericHash.MinKeyLen
  fullName: LibSodium.CryptoGenericHash.MinKeyLen
  nameWithType: CryptoGenericHash.MinKeyLen
- uid: LibSodium.CryptoHmacSha256
  name: CryptoHmacSha256
  href: api/LibSodium.CryptoHmacSha256.html
  commentId: T:LibSodium.CryptoHmacSha256
  fullName: LibSodium.CryptoHmacSha256
  nameWithType: CryptoHmacSha256
- uid: LibSodium.CryptoHmacSha256.ComputeMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.Span{System.Byte})
  name: ComputeMac(ReadOnlySpan<byte>, Stream, Span<byte>)
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_ComputeMac_System_ReadOnlySpan_System_Byte__System_IO_Stream_System_Span_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha256.ComputeMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.Span{System.Byte})
  name.vb: ComputeMac(ReadOnlySpan(Of Byte), Stream, Span(Of Byte))
  fullName: LibSodium.CryptoHmacSha256.ComputeMac(System.ReadOnlySpan<byte>, System.IO.Stream, System.Span<byte>)
  fullName.vb: LibSodium.CryptoHmacSha256.ComputeMac(System.ReadOnlySpan(Of Byte), System.IO.Stream, System.Span(Of Byte))
  nameWithType: CryptoHmacSha256.ComputeMac(ReadOnlySpan<byte>, Stream, Span<byte>)
  nameWithType.vb: CryptoHmacSha256.ComputeMac(ReadOnlySpan(Of Byte), Stream, Span(Of Byte))
- uid: LibSodium.CryptoHmacSha256.ComputeMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name: ComputeMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>)
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_ComputeMac_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha256.ComputeMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name.vb: ComputeMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte))
  fullName: LibSodium.CryptoHmacSha256.ComputeMac(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>)
  fullName.vb: LibSodium.CryptoHmacSha256.ComputeMac(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte))
  nameWithType: CryptoHmacSha256.ComputeMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>)
  nameWithType.vb: CryptoHmacSha256.ComputeMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte))
- uid: LibSodium.CryptoHmacSha256.ComputeMac*
  name: ComputeMac
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_ComputeMac_
  commentId: Overload:LibSodium.CryptoHmacSha256.ComputeMac
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha256.ComputeMac
  nameWithType: CryptoHmacSha256.ComputeMac
- uid: LibSodium.CryptoHmacSha256.ComputeMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.Memory{System.Byte},System.Threading.CancellationToken)
  name: ComputeMacAsync(ReadOnlyMemory<byte>, Stream, Memory<byte>, CancellationToken)
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_ComputeMacAsync_System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoHmacSha256.ComputeMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: ComputeMacAsync(ReadOnlyMemory(Of Byte), Stream, Memory(Of Byte), CancellationToken)
  fullName: LibSodium.CryptoHmacSha256.ComputeMacAsync(System.ReadOnlyMemory<byte>, System.IO.Stream, System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoHmacSha256.ComputeMacAsync(System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: CryptoHmacSha256.ComputeMacAsync(ReadOnlyMemory<byte>, Stream, Memory<byte>, CancellationToken)
  nameWithType.vb: CryptoHmacSha256.ComputeMacAsync(ReadOnlyMemory(Of Byte), Stream, Memory(Of Byte), CancellationToken)
- uid: LibSodium.CryptoHmacSha256.ComputeMacAsync*
  name: ComputeMacAsync
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_ComputeMacAsync_
  commentId: Overload:LibSodium.CryptoHmacSha256.ComputeMacAsync
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha256.ComputeMacAsync
  nameWithType: CryptoHmacSha256.ComputeMacAsync
- uid: LibSodium.CryptoHmacSha256.CreateIncrementalMac(System.ReadOnlySpan{System.Byte})
  name: CreateIncrementalMac(ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_CreateIncrementalMac_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha256.CreateIncrementalMac(System.ReadOnlySpan{System.Byte})
  name.vb: CreateIncrementalMac(ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoHmacSha256.CreateIncrementalMac(System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoHmacSha256.CreateIncrementalMac(System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoHmacSha256.CreateIncrementalMac(ReadOnlySpan<byte>)
  nameWithType.vb: CryptoHmacSha256.CreateIncrementalMac(ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoHmacSha256.CreateIncrementalMac*
  name: CreateIncrementalMac
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_CreateIncrementalMac_
  commentId: Overload:LibSodium.CryptoHmacSha256.CreateIncrementalMac
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha256.CreateIncrementalMac
  nameWithType: CryptoHmacSha256.CreateIncrementalMac
- uid: LibSodium.CryptoHmacSha256.GenerateKey(System.Span{System.Byte})
  name: GenerateKey(Span<byte>)
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_GenerateKey_System_Span_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha256.GenerateKey(System.Span{System.Byte})
  name.vb: GenerateKey(Span(Of Byte))
  fullName: LibSodium.CryptoHmacSha256.GenerateKey(System.Span<byte>)
  fullName.vb: LibSodium.CryptoHmacSha256.GenerateKey(System.Span(Of Byte))
  nameWithType: CryptoHmacSha256.GenerateKey(Span<byte>)
  nameWithType.vb: CryptoHmacSha256.GenerateKey(Span(Of Byte))
- uid: LibSodium.CryptoHmacSha256.GenerateKey*
  name: GenerateKey
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_GenerateKey_
  commentId: Overload:LibSodium.CryptoHmacSha256.GenerateKey
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha256.GenerateKey
  nameWithType: CryptoHmacSha256.GenerateKey
- uid: LibSodium.CryptoHmacSha256.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_KeyLen
  commentId: F:LibSodium.CryptoHmacSha256.KeyLen
  fullName: LibSodium.CryptoHmacSha256.KeyLen
  nameWithType: CryptoHmacSha256.KeyLen
- uid: LibSodium.CryptoHmacSha256.MacLen
  name: MacLen
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_MacLen
  commentId: F:LibSodium.CryptoHmacSha256.MacLen
  fullName: LibSodium.CryptoHmacSha256.MacLen
  nameWithType: CryptoHmacSha256.MacLen
- uid: LibSodium.CryptoHmacSha256.VerifyMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name: VerifyMac(ReadOnlySpan<byte>, Stream, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_VerifyMac_System_ReadOnlySpan_System_Byte__System_IO_Stream_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha256.VerifyMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name.vb: VerifyMac(ReadOnlySpan(Of Byte), Stream, ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoHmacSha256.VerifyMac(System.ReadOnlySpan<byte>, System.IO.Stream, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoHmacSha256.VerifyMac(System.ReadOnlySpan(Of Byte), System.IO.Stream, System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoHmacSha256.VerifyMac(ReadOnlySpan<byte>, Stream, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoHmacSha256.VerifyMac(ReadOnlySpan(Of Byte), Stream, ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoHmacSha256.VerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: VerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_VerifyMac_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha256.VerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: VerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoHmacSha256.VerifyMac(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoHmacSha256.VerifyMac(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoHmacSha256.VerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoHmacSha256.VerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoHmacSha256.VerifyMac*
  name: VerifyMac
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_VerifyMac_
  commentId: Overload:LibSodium.CryptoHmacSha256.VerifyMac
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha256.VerifyMac
  nameWithType: CryptoHmacSha256.VerifyMac
- uid: LibSodium.CryptoHmacSha256.VerifyMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: VerifyMacAsync(ReadOnlyMemory<byte>, Stream, ReadOnlyMemory<byte>, CancellationToken)
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_VerifyMacAsync_System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoHmacSha256.VerifyMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: VerifyMacAsync(ReadOnlyMemory(Of Byte), Stream, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: LibSodium.CryptoHmacSha256.VerifyMacAsync(System.ReadOnlyMemory<byte>, System.IO.Stream, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoHmacSha256.VerifyMacAsync(System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: CryptoHmacSha256.VerifyMacAsync(ReadOnlyMemory<byte>, Stream, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: CryptoHmacSha256.VerifyMacAsync(ReadOnlyMemory(Of Byte), Stream, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: LibSodium.CryptoHmacSha256.VerifyMacAsync*
  name: VerifyMacAsync
  href: api/LibSodium.CryptoHmacSha256.html#LibSodium_CryptoHmacSha256_VerifyMacAsync_
  commentId: Overload:LibSodium.CryptoHmacSha256.VerifyMacAsync
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha256.VerifyMacAsync
  nameWithType: CryptoHmacSha256.VerifyMacAsync
- uid: LibSodium.CryptoHmacSha512
  name: CryptoHmacSha512
  href: api/LibSodium.CryptoHmacSha512.html
  commentId: T:LibSodium.CryptoHmacSha512
  fullName: LibSodium.CryptoHmacSha512
  nameWithType: CryptoHmacSha512
- uid: LibSodium.CryptoHmacSha512.ComputeMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.Span{System.Byte})
  name: ComputeMac(ReadOnlySpan<byte>, Stream, Span<byte>)
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_ComputeMac_System_ReadOnlySpan_System_Byte__System_IO_Stream_System_Span_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512.ComputeMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.Span{System.Byte})
  name.vb: ComputeMac(ReadOnlySpan(Of Byte), Stream, Span(Of Byte))
  fullName: LibSodium.CryptoHmacSha512.ComputeMac(System.ReadOnlySpan<byte>, System.IO.Stream, System.Span<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512.ComputeMac(System.ReadOnlySpan(Of Byte), System.IO.Stream, System.Span(Of Byte))
  nameWithType: CryptoHmacSha512.ComputeMac(ReadOnlySpan<byte>, Stream, Span<byte>)
  nameWithType.vb: CryptoHmacSha512.ComputeMac(ReadOnlySpan(Of Byte), Stream, Span(Of Byte))
- uid: LibSodium.CryptoHmacSha512.ComputeMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name: ComputeMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>)
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_ComputeMac_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512.ComputeMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name.vb: ComputeMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte))
  fullName: LibSodium.CryptoHmacSha512.ComputeMac(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512.ComputeMac(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte))
  nameWithType: CryptoHmacSha512.ComputeMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>)
  nameWithType.vb: CryptoHmacSha512.ComputeMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte))
- uid: LibSodium.CryptoHmacSha512.ComputeMac*
  name: ComputeMac
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_ComputeMac_
  commentId: Overload:LibSodium.CryptoHmacSha512.ComputeMac
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512.ComputeMac
  nameWithType: CryptoHmacSha512.ComputeMac
- uid: LibSodium.CryptoHmacSha512.ComputeMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.Memory{System.Byte},System.Threading.CancellationToken)
  name: ComputeMacAsync(ReadOnlyMemory<byte>, Stream, Memory<byte>, CancellationToken)
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_ComputeMacAsync_System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoHmacSha512.ComputeMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: ComputeMacAsync(ReadOnlyMemory(Of Byte), Stream, Memory(Of Byte), CancellationToken)
  fullName: LibSodium.CryptoHmacSha512.ComputeMacAsync(System.ReadOnlyMemory<byte>, System.IO.Stream, System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoHmacSha512.ComputeMacAsync(System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: CryptoHmacSha512.ComputeMacAsync(ReadOnlyMemory<byte>, Stream, Memory<byte>, CancellationToken)
  nameWithType.vb: CryptoHmacSha512.ComputeMacAsync(ReadOnlyMemory(Of Byte), Stream, Memory(Of Byte), CancellationToken)
- uid: LibSodium.CryptoHmacSha512.ComputeMacAsync*
  name: ComputeMacAsync
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_ComputeMacAsync_
  commentId: Overload:LibSodium.CryptoHmacSha512.ComputeMacAsync
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512.ComputeMacAsync
  nameWithType: CryptoHmacSha512.ComputeMacAsync
- uid: LibSodium.CryptoHmacSha512.CreateIncrementalMac(System.ReadOnlySpan{System.Byte})
  name: CreateIncrementalMac(ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_CreateIncrementalMac_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512.CreateIncrementalMac(System.ReadOnlySpan{System.Byte})
  name.vb: CreateIncrementalMac(ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoHmacSha512.CreateIncrementalMac(System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512.CreateIncrementalMac(System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoHmacSha512.CreateIncrementalMac(ReadOnlySpan<byte>)
  nameWithType.vb: CryptoHmacSha512.CreateIncrementalMac(ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoHmacSha512.CreateIncrementalMac*
  name: CreateIncrementalMac
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_CreateIncrementalMac_
  commentId: Overload:LibSodium.CryptoHmacSha512.CreateIncrementalMac
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512.CreateIncrementalMac
  nameWithType: CryptoHmacSha512.CreateIncrementalMac
- uid: LibSodium.CryptoHmacSha512.GenerateKey(System.Span{System.Byte})
  name: GenerateKey(Span<byte>)
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_GenerateKey_System_Span_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512.GenerateKey(System.Span{System.Byte})
  name.vb: GenerateKey(Span(Of Byte))
  fullName: LibSodium.CryptoHmacSha512.GenerateKey(System.Span<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512.GenerateKey(System.Span(Of Byte))
  nameWithType: CryptoHmacSha512.GenerateKey(Span<byte>)
  nameWithType.vb: CryptoHmacSha512.GenerateKey(Span(Of Byte))
- uid: LibSodium.CryptoHmacSha512.GenerateKey*
  name: GenerateKey
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_GenerateKey_
  commentId: Overload:LibSodium.CryptoHmacSha512.GenerateKey
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512.GenerateKey
  nameWithType: CryptoHmacSha512.GenerateKey
- uid: LibSodium.CryptoHmacSha512.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_KeyLen
  commentId: F:LibSodium.CryptoHmacSha512.KeyLen
  fullName: LibSodium.CryptoHmacSha512.KeyLen
  nameWithType: CryptoHmacSha512.KeyLen
- uid: LibSodium.CryptoHmacSha512.MacLen
  name: MacLen
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_MacLen
  commentId: F:LibSodium.CryptoHmacSha512.MacLen
  fullName: LibSodium.CryptoHmacSha512.MacLen
  nameWithType: CryptoHmacSha512.MacLen
- uid: LibSodium.CryptoHmacSha512.VerifyMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name: VerifyMac(ReadOnlySpan<byte>, Stream, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_VerifyMac_System_ReadOnlySpan_System_Byte__System_IO_Stream_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512.VerifyMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name.vb: VerifyMac(ReadOnlySpan(Of Byte), Stream, ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoHmacSha512.VerifyMac(System.ReadOnlySpan<byte>, System.IO.Stream, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512.VerifyMac(System.ReadOnlySpan(Of Byte), System.IO.Stream, System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoHmacSha512.VerifyMac(ReadOnlySpan<byte>, Stream, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoHmacSha512.VerifyMac(ReadOnlySpan(Of Byte), Stream, ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoHmacSha512.VerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: VerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_VerifyMac_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512.VerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: VerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoHmacSha512.VerifyMac(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512.VerifyMac(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoHmacSha512.VerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoHmacSha512.VerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoHmacSha512.VerifyMac*
  name: VerifyMac
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_VerifyMac_
  commentId: Overload:LibSodium.CryptoHmacSha512.VerifyMac
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512.VerifyMac
  nameWithType: CryptoHmacSha512.VerifyMac
- uid: LibSodium.CryptoHmacSha512.VerifyMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: VerifyMacAsync(ReadOnlyMemory<byte>, Stream, ReadOnlyMemory<byte>, CancellationToken)
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_VerifyMacAsync_System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoHmacSha512.VerifyMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: VerifyMacAsync(ReadOnlyMemory(Of Byte), Stream, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: LibSodium.CryptoHmacSha512.VerifyMacAsync(System.ReadOnlyMemory<byte>, System.IO.Stream, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoHmacSha512.VerifyMacAsync(System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: CryptoHmacSha512.VerifyMacAsync(ReadOnlyMemory<byte>, Stream, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: CryptoHmacSha512.VerifyMacAsync(ReadOnlyMemory(Of Byte), Stream, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: LibSodium.CryptoHmacSha512.VerifyMacAsync*
  name: VerifyMacAsync
  href: api/LibSodium.CryptoHmacSha512.html#LibSodium_CryptoHmacSha512_VerifyMacAsync_
  commentId: Overload:LibSodium.CryptoHmacSha512.VerifyMacAsync
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512.VerifyMacAsync
  nameWithType: CryptoHmacSha512.VerifyMacAsync
- uid: LibSodium.CryptoHmacSha512_256
  name: CryptoHmacSha512_256
  href: api/LibSodium.CryptoHmacSha512_256.html
  commentId: T:LibSodium.CryptoHmacSha512_256
  fullName: LibSodium.CryptoHmacSha512_256
  nameWithType: CryptoHmacSha512_256
- uid: LibSodium.CryptoHmacSha512_256.ComputeMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.Span{System.Byte})
  name: ComputeMac(ReadOnlySpan<byte>, Stream, Span<byte>)
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_ComputeMac_System_ReadOnlySpan_System_Byte__System_IO_Stream_System_Span_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512_256.ComputeMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.Span{System.Byte})
  name.vb: ComputeMac(ReadOnlySpan(Of Byte), Stream, Span(Of Byte))
  fullName: LibSodium.CryptoHmacSha512_256.ComputeMac(System.ReadOnlySpan<byte>, System.IO.Stream, System.Span<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512_256.ComputeMac(System.ReadOnlySpan(Of Byte), System.IO.Stream, System.Span(Of Byte))
  nameWithType: CryptoHmacSha512_256.ComputeMac(ReadOnlySpan<byte>, Stream, Span<byte>)
  nameWithType.vb: CryptoHmacSha512_256.ComputeMac(ReadOnlySpan(Of Byte), Stream, Span(Of Byte))
- uid: LibSodium.CryptoHmacSha512_256.ComputeMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name: ComputeMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>)
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_ComputeMac_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512_256.ComputeMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name.vb: ComputeMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte))
  fullName: LibSodium.CryptoHmacSha512_256.ComputeMac(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512_256.ComputeMac(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte))
  nameWithType: CryptoHmacSha512_256.ComputeMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>)
  nameWithType.vb: CryptoHmacSha512_256.ComputeMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte))
- uid: LibSodium.CryptoHmacSha512_256.ComputeMac*
  name: ComputeMac
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_ComputeMac_
  commentId: Overload:LibSodium.CryptoHmacSha512_256.ComputeMac
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512_256.ComputeMac
  nameWithType: CryptoHmacSha512_256.ComputeMac
- uid: LibSodium.CryptoHmacSha512_256.ComputeMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.Memory{System.Byte},System.Threading.CancellationToken)
  name: ComputeMacAsync(ReadOnlyMemory<byte>, Stream, Memory<byte>, CancellationToken)
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_ComputeMacAsync_System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoHmacSha512_256.ComputeMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: ComputeMacAsync(ReadOnlyMemory(Of Byte), Stream, Memory(Of Byte), CancellationToken)
  fullName: LibSodium.CryptoHmacSha512_256.ComputeMacAsync(System.ReadOnlyMemory<byte>, System.IO.Stream, System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoHmacSha512_256.ComputeMacAsync(System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: CryptoHmacSha512_256.ComputeMacAsync(ReadOnlyMemory<byte>, Stream, Memory<byte>, CancellationToken)
  nameWithType.vb: CryptoHmacSha512_256.ComputeMacAsync(ReadOnlyMemory(Of Byte), Stream, Memory(Of Byte), CancellationToken)
- uid: LibSodium.CryptoHmacSha512_256.ComputeMacAsync*
  name: ComputeMacAsync
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_ComputeMacAsync_
  commentId: Overload:LibSodium.CryptoHmacSha512_256.ComputeMacAsync
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512_256.ComputeMacAsync
  nameWithType: CryptoHmacSha512_256.ComputeMacAsync
- uid: LibSodium.CryptoHmacSha512_256.CreateIncrementalMac(System.ReadOnlySpan{System.Byte})
  name: CreateIncrementalMac(ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_CreateIncrementalMac_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512_256.CreateIncrementalMac(System.ReadOnlySpan{System.Byte})
  name.vb: CreateIncrementalMac(ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoHmacSha512_256.CreateIncrementalMac(System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512_256.CreateIncrementalMac(System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoHmacSha512_256.CreateIncrementalMac(ReadOnlySpan<byte>)
  nameWithType.vb: CryptoHmacSha512_256.CreateIncrementalMac(ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoHmacSha512_256.CreateIncrementalMac*
  name: CreateIncrementalMac
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_CreateIncrementalMac_
  commentId: Overload:LibSodium.CryptoHmacSha512_256.CreateIncrementalMac
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512_256.CreateIncrementalMac
  nameWithType: CryptoHmacSha512_256.CreateIncrementalMac
- uid: LibSodium.CryptoHmacSha512_256.GenerateKey(System.Span{System.Byte})
  name: GenerateKey(Span<byte>)
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_GenerateKey_System_Span_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512_256.GenerateKey(System.Span{System.Byte})
  name.vb: GenerateKey(Span(Of Byte))
  fullName: LibSodium.CryptoHmacSha512_256.GenerateKey(System.Span<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512_256.GenerateKey(System.Span(Of Byte))
  nameWithType: CryptoHmacSha512_256.GenerateKey(Span<byte>)
  nameWithType.vb: CryptoHmacSha512_256.GenerateKey(Span(Of Byte))
- uid: LibSodium.CryptoHmacSha512_256.GenerateKey*
  name: GenerateKey
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_GenerateKey_
  commentId: Overload:LibSodium.CryptoHmacSha512_256.GenerateKey
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512_256.GenerateKey
  nameWithType: CryptoHmacSha512_256.GenerateKey
- uid: LibSodium.CryptoHmacSha512_256.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_KeyLen
  commentId: F:LibSodium.CryptoHmacSha512_256.KeyLen
  fullName: LibSodium.CryptoHmacSha512_256.KeyLen
  nameWithType: CryptoHmacSha512_256.KeyLen
- uid: LibSodium.CryptoHmacSha512_256.MacLen
  name: MacLen
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_MacLen
  commentId: F:LibSodium.CryptoHmacSha512_256.MacLen
  fullName: LibSodium.CryptoHmacSha512_256.MacLen
  nameWithType: CryptoHmacSha512_256.MacLen
- uid: LibSodium.CryptoHmacSha512_256.VerifyMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name: VerifyMac(ReadOnlySpan<byte>, Stream, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_VerifyMac_System_ReadOnlySpan_System_Byte__System_IO_Stream_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512_256.VerifyMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name.vb: VerifyMac(ReadOnlySpan(Of Byte), Stream, ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoHmacSha512_256.VerifyMac(System.ReadOnlySpan<byte>, System.IO.Stream, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512_256.VerifyMac(System.ReadOnlySpan(Of Byte), System.IO.Stream, System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoHmacSha512_256.VerifyMac(ReadOnlySpan<byte>, Stream, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoHmacSha512_256.VerifyMac(ReadOnlySpan(Of Byte), Stream, ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoHmacSha512_256.VerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: VerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_VerifyMac_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoHmacSha512_256.VerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: VerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoHmacSha512_256.VerifyMac(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoHmacSha512_256.VerifyMac(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoHmacSha512_256.VerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoHmacSha512_256.VerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoHmacSha512_256.VerifyMac*
  name: VerifyMac
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_VerifyMac_
  commentId: Overload:LibSodium.CryptoHmacSha512_256.VerifyMac
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512_256.VerifyMac
  nameWithType: CryptoHmacSha512_256.VerifyMac
- uid: LibSodium.CryptoHmacSha512_256.VerifyMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: VerifyMacAsync(ReadOnlyMemory<byte>, Stream, ReadOnlyMemory<byte>, CancellationToken)
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_VerifyMacAsync_System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoHmacSha512_256.VerifyMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: VerifyMacAsync(ReadOnlyMemory(Of Byte), Stream, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: LibSodium.CryptoHmacSha512_256.VerifyMacAsync(System.ReadOnlyMemory<byte>, System.IO.Stream, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoHmacSha512_256.VerifyMacAsync(System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: CryptoHmacSha512_256.VerifyMacAsync(ReadOnlyMemory<byte>, Stream, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: CryptoHmacSha512_256.VerifyMacAsync(ReadOnlyMemory(Of Byte), Stream, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: LibSodium.CryptoHmacSha512_256.VerifyMacAsync*
  name: VerifyMacAsync
  href: api/LibSodium.CryptoHmacSha512_256.html#LibSodium_CryptoHmacSha512_256_VerifyMacAsync_
  commentId: Overload:LibSodium.CryptoHmacSha512_256.VerifyMacAsync
  isSpec: "True"
  fullName: LibSodium.CryptoHmacSha512_256.VerifyMacAsync
  nameWithType: CryptoHmacSha512_256.VerifyMacAsync
- uid: LibSodium.CryptoKeyDerivation
  name: CryptoKeyDerivation
  href: api/LibSodium.CryptoKeyDerivation.html
  commentId: T:LibSodium.CryptoKeyDerivation
  fullName: LibSodium.CryptoKeyDerivation
  nameWithType: CryptoKeyDerivation
- uid: LibSodium.CryptoKeyDerivation.ContextLen
  name: ContextLen
  href: api/LibSodium.CryptoKeyDerivation.html#LibSodium_CryptoKeyDerivation_ContextLen
  commentId: F:LibSodium.CryptoKeyDerivation.ContextLen
  fullName: LibSodium.CryptoKeyDerivation.ContextLen
  nameWithType: CryptoKeyDerivation.ContextLen
- uid: LibSodium.CryptoKeyDerivation.DeriveSubkey(System.Span{System.Byte},System.UInt64,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: DeriveSubkey(Span<byte>, ulong, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoKeyDerivation.html#LibSodium_CryptoKeyDerivation_DeriveSubkey_System_Span_System_Byte__System_UInt64_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoKeyDerivation.DeriveSubkey(System.Span{System.Byte},System.UInt64,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: DeriveSubkey(Span(Of Byte), ULong, ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoKeyDerivation.DeriveSubkey(System.Span<byte>, ulong, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoKeyDerivation.DeriveSubkey(System.Span(Of Byte), ULong, System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoKeyDerivation.DeriveSubkey(Span<byte>, ulong, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoKeyDerivation.DeriveSubkey(Span(Of Byte), ULong, ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoKeyDerivation.DeriveSubkey(System.Span{System.Byte},System.UInt64,System.String,System.ReadOnlySpan{System.Byte})
  name: DeriveSubkey(Span<byte>, ulong, string, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoKeyDerivation.html#LibSodium_CryptoKeyDerivation_DeriveSubkey_System_Span_System_Byte__System_UInt64_System_String_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoKeyDerivation.DeriveSubkey(System.Span{System.Byte},System.UInt64,System.String,System.ReadOnlySpan{System.Byte})
  name.vb: DeriveSubkey(Span(Of Byte), ULong, String, ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoKeyDerivation.DeriveSubkey(System.Span<byte>, ulong, string, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoKeyDerivation.DeriveSubkey(System.Span(Of Byte), ULong, String, System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoKeyDerivation.DeriveSubkey(Span<byte>, ulong, string, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoKeyDerivation.DeriveSubkey(Span(Of Byte), ULong, String, ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoKeyDerivation.DeriveSubkey*
  name: DeriveSubkey
  href: api/LibSodium.CryptoKeyDerivation.html#LibSodium_CryptoKeyDerivation_DeriveSubkey_
  commentId: Overload:LibSodium.CryptoKeyDerivation.DeriveSubkey
  isSpec: "True"
  fullName: LibSodium.CryptoKeyDerivation.DeriveSubkey
  nameWithType: CryptoKeyDerivation.DeriveSubkey
- uid: LibSodium.CryptoKeyDerivation.GenerateMasterKey(System.Span{System.Byte})
  name: GenerateMasterKey(Span<byte>)
  href: api/LibSodium.CryptoKeyDerivation.html#LibSodium_CryptoKeyDerivation_GenerateMasterKey_System_Span_System_Byte__
  commentId: M:LibSodium.CryptoKeyDerivation.GenerateMasterKey(System.Span{System.Byte})
  name.vb: GenerateMasterKey(Span(Of Byte))
  fullName: LibSodium.CryptoKeyDerivation.GenerateMasterKey(System.Span<byte>)
  fullName.vb: LibSodium.CryptoKeyDerivation.GenerateMasterKey(System.Span(Of Byte))
  nameWithType: CryptoKeyDerivation.GenerateMasterKey(Span<byte>)
  nameWithType.vb: CryptoKeyDerivation.GenerateMasterKey(Span(Of Byte))
- uid: LibSodium.CryptoKeyDerivation.GenerateMasterKey*
  name: GenerateMasterKey
  href: api/LibSodium.CryptoKeyDerivation.html#LibSodium_CryptoKeyDerivation_GenerateMasterKey_
  commentId: Overload:LibSodium.CryptoKeyDerivation.GenerateMasterKey
  isSpec: "True"
  fullName: LibSodium.CryptoKeyDerivation.GenerateMasterKey
  nameWithType: CryptoKeyDerivation.GenerateMasterKey
- uid: LibSodium.CryptoKeyDerivation.MasterKeyLen
  name: MasterKeyLen
  href: api/LibSodium.CryptoKeyDerivation.html#LibSodium_CryptoKeyDerivation_MasterKeyLen
  commentId: F:LibSodium.CryptoKeyDerivation.MasterKeyLen
  fullName: LibSodium.CryptoKeyDerivation.MasterKeyLen
  nameWithType: CryptoKeyDerivation.MasterKeyLen
- uid: LibSodium.CryptoKeyDerivation.MaxSubkeyLen
  name: MaxSubkeyLen
  href: api/LibSodium.CryptoKeyDerivation.html#LibSodium_CryptoKeyDerivation_MaxSubkeyLen
  commentId: F:LibSodium.CryptoKeyDerivation.MaxSubkeyLen
  fullName: LibSodium.CryptoKeyDerivation.MaxSubkeyLen
  nameWithType: CryptoKeyDerivation.MaxSubkeyLen
- uid: LibSodium.CryptoKeyDerivation.MinSubkeyLen
  name: MinSubkeyLen
  href: api/LibSodium.CryptoKeyDerivation.html#LibSodium_CryptoKeyDerivation_MinSubkeyLen
  commentId: F:LibSodium.CryptoKeyDerivation.MinSubkeyLen
  fullName: LibSodium.CryptoKeyDerivation.MinSubkeyLen
  nameWithType: CryptoKeyDerivation.MinSubkeyLen
- uid: LibSodium.CryptoKeyExchange
  name: CryptoKeyExchange
  href: api/LibSodium.CryptoKeyExchange.html
  commentId: T:LibSodium.CryptoKeyExchange
  fullName: LibSodium.CryptoKeyExchange
  nameWithType: CryptoKeyExchange
- uid: LibSodium.CryptoKeyExchange.DeriveClientSessionKeys(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: DeriveClientSessionKeys(Span<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_DeriveClientSessionKeys_System_Span_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoKeyExchange.DeriveClientSessionKeys(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: DeriveClientSessionKeys(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoKeyExchange.DeriveClientSessionKeys(System.Span<byte>, System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoKeyExchange.DeriveClientSessionKeys(System.Span(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoKeyExchange.DeriveClientSessionKeys(Span<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoKeyExchange.DeriveClientSessionKeys(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoKeyExchange.DeriveClientSessionKeys*
  name: DeriveClientSessionKeys
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_DeriveClientSessionKeys_
  commentId: Overload:LibSodium.CryptoKeyExchange.DeriveClientSessionKeys
  isSpec: "True"
  fullName: LibSodium.CryptoKeyExchange.DeriveClientSessionKeys
  nameWithType: CryptoKeyExchange.DeriveClientSessionKeys
- uid: LibSodium.CryptoKeyExchange.DeriveServerSessionKeys(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: DeriveServerSessionKeys(Span<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_DeriveServerSessionKeys_System_Span_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoKeyExchange.DeriveServerSessionKeys(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: DeriveServerSessionKeys(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoKeyExchange.DeriveServerSessionKeys(System.Span<byte>, System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoKeyExchange.DeriveServerSessionKeys(System.Span(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoKeyExchange.DeriveServerSessionKeys(Span<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoKeyExchange.DeriveServerSessionKeys(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoKeyExchange.DeriveServerSessionKeys*
  name: DeriveServerSessionKeys
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_DeriveServerSessionKeys_
  commentId: Overload:LibSodium.CryptoKeyExchange.DeriveServerSessionKeys
  isSpec: "True"
  fullName: LibSodium.CryptoKeyExchange.DeriveServerSessionKeys
  nameWithType: CryptoKeyExchange.DeriveServerSessionKeys
- uid: LibSodium.CryptoKeyExchange.GenerateKeyPair(System.Span{System.Byte},System.Span{System.Byte})
  name: GenerateKeyPair(Span<byte>, Span<byte>)
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_GenerateKeyPair_System_Span_System_Byte__System_Span_System_Byte__
  commentId: M:LibSodium.CryptoKeyExchange.GenerateKeyPair(System.Span{System.Byte},System.Span{System.Byte})
  name.vb: GenerateKeyPair(Span(Of Byte), Span(Of Byte))
  fullName: LibSodium.CryptoKeyExchange.GenerateKeyPair(System.Span<byte>, System.Span<byte>)
  fullName.vb: LibSodium.CryptoKeyExchange.GenerateKeyPair(System.Span(Of Byte), System.Span(Of Byte))
  nameWithType: CryptoKeyExchange.GenerateKeyPair(Span<byte>, Span<byte>)
  nameWithType.vb: CryptoKeyExchange.GenerateKeyPair(Span(Of Byte), Span(Of Byte))
- uid: LibSodium.CryptoKeyExchange.GenerateKeyPair*
  name: GenerateKeyPair
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_GenerateKeyPair_
  commentId: Overload:LibSodium.CryptoKeyExchange.GenerateKeyPair
  isSpec: "True"
  fullName: LibSodium.CryptoKeyExchange.GenerateKeyPair
  nameWithType: CryptoKeyExchange.GenerateKeyPair
- uid: LibSodium.CryptoKeyExchange.GenerateKeyPairDeterministically(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: GenerateKeyPairDeterministically(Span<byte>, Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_GenerateKeyPairDeterministically_System_Span_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoKeyExchange.GenerateKeyPairDeterministically(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: GenerateKeyPairDeterministically(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoKeyExchange.GenerateKeyPairDeterministically(System.Span<byte>, System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoKeyExchange.GenerateKeyPairDeterministically(System.Span(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoKeyExchange.GenerateKeyPairDeterministically(Span<byte>, Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoKeyExchange.GenerateKeyPairDeterministically(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoKeyExchange.GenerateKeyPairDeterministically*
  name: GenerateKeyPairDeterministically
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_GenerateKeyPairDeterministically_
  commentId: Overload:LibSodium.CryptoKeyExchange.GenerateKeyPairDeterministically
  isSpec: "True"
  fullName: LibSodium.CryptoKeyExchange.GenerateKeyPairDeterministically
  nameWithType: CryptoKeyExchange.GenerateKeyPairDeterministically
- uid: LibSodium.CryptoKeyExchange.PublicKeyLen
  name: PublicKeyLen
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_PublicKeyLen
  commentId: F:LibSodium.CryptoKeyExchange.PublicKeyLen
  fullName: LibSodium.CryptoKeyExchange.PublicKeyLen
  nameWithType: CryptoKeyExchange.PublicKeyLen
- uid: LibSodium.CryptoKeyExchange.SecretKeyLen
  name: SecretKeyLen
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_SecretKeyLen
  commentId: F:LibSodium.CryptoKeyExchange.SecretKeyLen
  fullName: LibSodium.CryptoKeyExchange.SecretKeyLen
  nameWithType: CryptoKeyExchange.SecretKeyLen
- uid: LibSodium.CryptoKeyExchange.SeedLen
  name: SeedLen
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_SeedLen
  commentId: F:LibSodium.CryptoKeyExchange.SeedLen
  fullName: LibSodium.CryptoKeyExchange.SeedLen
  nameWithType: CryptoKeyExchange.SeedLen
- uid: LibSodium.CryptoKeyExchange.SessionKeyLen
  name: SessionKeyLen
  href: api/LibSodium.CryptoKeyExchange.html#LibSodium_CryptoKeyExchange_SessionKeyLen
  commentId: F:LibSodium.CryptoKeyExchange.SessionKeyLen
  fullName: LibSodium.CryptoKeyExchange.SessionKeyLen
  nameWithType: CryptoKeyExchange.SessionKeyLen
- uid: LibSodium.CryptoOneTimeAuth
  name: CryptoOneTimeAuth
  href: api/LibSodium.CryptoOneTimeAuth.html
  commentId: T:LibSodium.CryptoOneTimeAuth
  fullName: LibSodium.CryptoOneTimeAuth
  nameWithType: CryptoOneTimeAuth
- uid: LibSodium.CryptoOneTimeAuth.ComputeMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.Span{System.Byte})
  name: ComputeMac(ReadOnlySpan<byte>, Stream, Span<byte>)
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_ComputeMac_System_ReadOnlySpan_System_Byte__System_IO_Stream_System_Span_System_Byte__
  commentId: M:LibSodium.CryptoOneTimeAuth.ComputeMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.Span{System.Byte})
  name.vb: ComputeMac(ReadOnlySpan(Of Byte), Stream, Span(Of Byte))
  fullName: LibSodium.CryptoOneTimeAuth.ComputeMac(System.ReadOnlySpan<byte>, System.IO.Stream, System.Span<byte>)
  fullName.vb: LibSodium.CryptoOneTimeAuth.ComputeMac(System.ReadOnlySpan(Of Byte), System.IO.Stream, System.Span(Of Byte))
  nameWithType: CryptoOneTimeAuth.ComputeMac(ReadOnlySpan<byte>, Stream, Span<byte>)
  nameWithType.vb: CryptoOneTimeAuth.ComputeMac(ReadOnlySpan(Of Byte), Stream, Span(Of Byte))
- uid: LibSodium.CryptoOneTimeAuth.ComputeMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name: ComputeMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>)
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_ComputeMac_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__
  commentId: M:LibSodium.CryptoOneTimeAuth.ComputeMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name.vb: ComputeMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte))
  fullName: LibSodium.CryptoOneTimeAuth.ComputeMac(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>)
  fullName.vb: LibSodium.CryptoOneTimeAuth.ComputeMac(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte))
  nameWithType: CryptoOneTimeAuth.ComputeMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>)
  nameWithType.vb: CryptoOneTimeAuth.ComputeMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte))
- uid: LibSodium.CryptoOneTimeAuth.ComputeMac*
  name: ComputeMac
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_ComputeMac_
  commentId: Overload:LibSodium.CryptoOneTimeAuth.ComputeMac
  isSpec: "True"
  fullName: LibSodium.CryptoOneTimeAuth.ComputeMac
  nameWithType: CryptoOneTimeAuth.ComputeMac
- uid: LibSodium.CryptoOneTimeAuth.ComputeMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.Memory{System.Byte},System.Threading.CancellationToken)
  name: ComputeMacAsync(ReadOnlyMemory<byte>, Stream, Memory<byte>, CancellationToken)
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_ComputeMacAsync_System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoOneTimeAuth.ComputeMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: ComputeMacAsync(ReadOnlyMemory(Of Byte), Stream, Memory(Of Byte), CancellationToken)
  fullName: LibSodium.CryptoOneTimeAuth.ComputeMacAsync(System.ReadOnlyMemory<byte>, System.IO.Stream, System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoOneTimeAuth.ComputeMacAsync(System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: CryptoOneTimeAuth.ComputeMacAsync(ReadOnlyMemory<byte>, Stream, Memory<byte>, CancellationToken)
  nameWithType.vb: CryptoOneTimeAuth.ComputeMacAsync(ReadOnlyMemory(Of Byte), Stream, Memory(Of Byte), CancellationToken)
- uid: LibSodium.CryptoOneTimeAuth.ComputeMacAsync*
  name: ComputeMacAsync
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_ComputeMacAsync_
  commentId: Overload:LibSodium.CryptoOneTimeAuth.ComputeMacAsync
  isSpec: "True"
  fullName: LibSodium.CryptoOneTimeAuth.ComputeMacAsync
  nameWithType: CryptoOneTimeAuth.ComputeMacAsync
- uid: LibSodium.CryptoOneTimeAuth.CreateIncrementalMac(System.ReadOnlySpan{System.Byte})
  name: CreateIncrementalMac(ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_CreateIncrementalMac_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoOneTimeAuth.CreateIncrementalMac(System.ReadOnlySpan{System.Byte})
  name.vb: CreateIncrementalMac(ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoOneTimeAuth.CreateIncrementalMac(System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoOneTimeAuth.CreateIncrementalMac(System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoOneTimeAuth.CreateIncrementalMac(ReadOnlySpan<byte>)
  nameWithType.vb: CryptoOneTimeAuth.CreateIncrementalMac(ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoOneTimeAuth.CreateIncrementalMac*
  name: CreateIncrementalMac
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_CreateIncrementalMac_
  commentId: Overload:LibSodium.CryptoOneTimeAuth.CreateIncrementalMac
  isSpec: "True"
  fullName: LibSodium.CryptoOneTimeAuth.CreateIncrementalMac
  nameWithType: CryptoOneTimeAuth.CreateIncrementalMac
- uid: LibSodium.CryptoOneTimeAuth.GenerateKey(System.Span{System.Byte})
  name: GenerateKey(Span<byte>)
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_GenerateKey_System_Span_System_Byte__
  commentId: M:LibSodium.CryptoOneTimeAuth.GenerateKey(System.Span{System.Byte})
  name.vb: GenerateKey(Span(Of Byte))
  fullName: LibSodium.CryptoOneTimeAuth.GenerateKey(System.Span<byte>)
  fullName.vb: LibSodium.CryptoOneTimeAuth.GenerateKey(System.Span(Of Byte))
  nameWithType: CryptoOneTimeAuth.GenerateKey(Span<byte>)
  nameWithType.vb: CryptoOneTimeAuth.GenerateKey(Span(Of Byte))
- uid: LibSodium.CryptoOneTimeAuth.GenerateKey*
  name: GenerateKey
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_GenerateKey_
  commentId: Overload:LibSodium.CryptoOneTimeAuth.GenerateKey
  isSpec: "True"
  fullName: LibSodium.CryptoOneTimeAuth.GenerateKey
  nameWithType: CryptoOneTimeAuth.GenerateKey
- uid: LibSodium.CryptoOneTimeAuth.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_KeyLen
  commentId: F:LibSodium.CryptoOneTimeAuth.KeyLen
  fullName: LibSodium.CryptoOneTimeAuth.KeyLen
  nameWithType: CryptoOneTimeAuth.KeyLen
- uid: LibSodium.CryptoOneTimeAuth.MacLen
  name: MacLen
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_MacLen
  commentId: F:LibSodium.CryptoOneTimeAuth.MacLen
  fullName: LibSodium.CryptoOneTimeAuth.MacLen
  nameWithType: CryptoOneTimeAuth.MacLen
- uid: LibSodium.CryptoOneTimeAuth.VerifyMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name: VerifyMac(ReadOnlySpan<byte>, Stream, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_VerifyMac_System_ReadOnlySpan_System_Byte__System_IO_Stream_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoOneTimeAuth.VerifyMac(System.ReadOnlySpan{System.Byte},System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name.vb: VerifyMac(ReadOnlySpan(Of Byte), Stream, ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoOneTimeAuth.VerifyMac(System.ReadOnlySpan<byte>, System.IO.Stream, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoOneTimeAuth.VerifyMac(System.ReadOnlySpan(Of Byte), System.IO.Stream, System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoOneTimeAuth.VerifyMac(ReadOnlySpan<byte>, Stream, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoOneTimeAuth.VerifyMac(ReadOnlySpan(Of Byte), Stream, ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoOneTimeAuth.VerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: VerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_VerifyMac_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoOneTimeAuth.VerifyMac(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: VerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoOneTimeAuth.VerifyMac(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoOneTimeAuth.VerifyMac(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoOneTimeAuth.VerifyMac(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoOneTimeAuth.VerifyMac(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoOneTimeAuth.VerifyMac*
  name: VerifyMac
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_VerifyMac_
  commentId: Overload:LibSodium.CryptoOneTimeAuth.VerifyMac
  isSpec: "True"
  fullName: LibSodium.CryptoOneTimeAuth.VerifyMac
  nameWithType: CryptoOneTimeAuth.VerifyMac
- uid: LibSodium.CryptoOneTimeAuth.VerifyMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: VerifyMacAsync(ReadOnlyMemory<byte>, Stream, ReadOnlyMemory<byte>, CancellationToken)
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_VerifyMacAsync_System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoOneTimeAuth.VerifyMacAsync(System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: VerifyMacAsync(ReadOnlyMemory(Of Byte), Stream, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: LibSodium.CryptoOneTimeAuth.VerifyMacAsync(System.ReadOnlyMemory<byte>, System.IO.Stream, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoOneTimeAuth.VerifyMacAsync(System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: CryptoOneTimeAuth.VerifyMacAsync(ReadOnlyMemory<byte>, Stream, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: CryptoOneTimeAuth.VerifyMacAsync(ReadOnlyMemory(Of Byte), Stream, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: LibSodium.CryptoOneTimeAuth.VerifyMacAsync*
  name: VerifyMacAsync
  href: api/LibSodium.CryptoOneTimeAuth.html#LibSodium_CryptoOneTimeAuth_VerifyMacAsync_
  commentId: Overload:LibSodium.CryptoOneTimeAuth.VerifyMacAsync
  isSpec: "True"
  fullName: LibSodium.CryptoOneTimeAuth.VerifyMacAsync
  nameWithType: CryptoOneTimeAuth.VerifyMacAsync
- uid: LibSodium.CryptoPasswordHashArgon
  name: CryptoPasswordHashArgon
  href: api/LibSodium.CryptoPasswordHashArgon.html
  commentId: T:LibSodium.CryptoPasswordHashArgon
  fullName: LibSodium.CryptoPasswordHashArgon
  nameWithType: CryptoPasswordHashArgon
- uid: LibSodium.CryptoPasswordHashArgon.DeriveKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Int32,System.Int32,LibSodium.PasswordHashArgonAlgorithm)
  name: DeriveKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, int, int, PasswordHashArgonAlgorithm)
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_DeriveKey_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Int32_System_Int32_LibSodium_PasswordHashArgonAlgorithm_
  commentId: M:LibSodium.CryptoPasswordHashArgon.DeriveKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Int32,System.Int32,LibSodium.PasswordHashArgonAlgorithm)
  name.vb: DeriveKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Integer, Integer, PasswordHashArgonAlgorithm)
  fullName: LibSodium.CryptoPasswordHashArgon.DeriveKey(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, int, int, LibSodium.PasswordHashArgonAlgorithm)
  fullName.vb: LibSodium.CryptoPasswordHashArgon.DeriveKey(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), Integer, Integer, LibSodium.PasswordHashArgonAlgorithm)
  nameWithType: CryptoPasswordHashArgon.DeriveKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, int, int, PasswordHashArgonAlgorithm)
  nameWithType.vb: CryptoPasswordHashArgon.DeriveKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Integer, Integer, PasswordHashArgonAlgorithm)
- uid: LibSodium.CryptoPasswordHashArgon.DeriveKey(System.Span{System.Byte},System.String,System.ReadOnlySpan{System.Byte},System.Int32,System.Int32,LibSodium.PasswordHashArgonAlgorithm)
  name: DeriveKey(Span<byte>, string, ReadOnlySpan<byte>, int, int, PasswordHashArgonAlgorithm)
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_DeriveKey_System_Span_System_Byte__System_String_System_ReadOnlySpan_System_Byte__System_Int32_System_Int32_LibSodium_PasswordHashArgonAlgorithm_
  commentId: M:LibSodium.CryptoPasswordHashArgon.DeriveKey(System.Span{System.Byte},System.String,System.ReadOnlySpan{System.Byte},System.Int32,System.Int32,LibSodium.PasswordHashArgonAlgorithm)
  name.vb: DeriveKey(Span(Of Byte), String, ReadOnlySpan(Of Byte), Integer, Integer, PasswordHashArgonAlgorithm)
  fullName: LibSodium.CryptoPasswordHashArgon.DeriveKey(System.Span<byte>, string, System.ReadOnlySpan<byte>, int, int, LibSodium.PasswordHashArgonAlgorithm)
  fullName.vb: LibSodium.CryptoPasswordHashArgon.DeriveKey(System.Span(Of Byte), String, System.ReadOnlySpan(Of Byte), Integer, Integer, LibSodium.PasswordHashArgonAlgorithm)
  nameWithType: CryptoPasswordHashArgon.DeriveKey(Span<byte>, string, ReadOnlySpan<byte>, int, int, PasswordHashArgonAlgorithm)
  nameWithType.vb: CryptoPasswordHashArgon.DeriveKey(Span(Of Byte), String, ReadOnlySpan(Of Byte), Integer, Integer, PasswordHashArgonAlgorithm)
- uid: LibSodium.CryptoPasswordHashArgon.DeriveKey*
  name: DeriveKey
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_DeriveKey_
  commentId: Overload:LibSodium.CryptoPasswordHashArgon.DeriveKey
  isSpec: "True"
  fullName: LibSodium.CryptoPasswordHashArgon.DeriveKey
  nameWithType: CryptoPasswordHashArgon.DeriveKey
- uid: LibSodium.CryptoPasswordHashArgon.EncodedLen
  name: EncodedLen
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_EncodedLen
  commentId: F:LibSodium.CryptoPasswordHashArgon.EncodedLen
  fullName: LibSodium.CryptoPasswordHashArgon.EncodedLen
  nameWithType: CryptoPasswordHashArgon.EncodedLen
- uid: LibSodium.CryptoPasswordHashArgon.HashPassword(System.ReadOnlySpan{System.Byte},System.Int32,System.Int32)
  name: HashPassword(ReadOnlySpan<byte>, int, int)
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_HashPassword_System_ReadOnlySpan_System_Byte__System_Int32_System_Int32_
  commentId: M:LibSodium.CryptoPasswordHashArgon.HashPassword(System.ReadOnlySpan{System.Byte},System.Int32,System.Int32)
  name.vb: HashPassword(ReadOnlySpan(Of Byte), Integer, Integer)
  fullName: LibSodium.CryptoPasswordHashArgon.HashPassword(System.ReadOnlySpan<byte>, int, int)
  fullName.vb: LibSodium.CryptoPasswordHashArgon.HashPassword(System.ReadOnlySpan(Of Byte), Integer, Integer)
  nameWithType: CryptoPasswordHashArgon.HashPassword(ReadOnlySpan<byte>, int, int)
  nameWithType.vb: CryptoPasswordHashArgon.HashPassword(ReadOnlySpan(Of Byte), Integer, Integer)
- uid: LibSodium.CryptoPasswordHashArgon.HashPassword(System.String,System.Int32,System.Int32)
  name: HashPassword(string, int, int)
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_HashPassword_System_String_System_Int32_System_Int32_
  commentId: M:LibSodium.CryptoPasswordHashArgon.HashPassword(System.String,System.Int32,System.Int32)
  name.vb: HashPassword(String, Integer, Integer)
  fullName: LibSodium.CryptoPasswordHashArgon.HashPassword(string, int, int)
  fullName.vb: LibSodium.CryptoPasswordHashArgon.HashPassword(String, Integer, Integer)
  nameWithType: CryptoPasswordHashArgon.HashPassword(string, int, int)
  nameWithType.vb: CryptoPasswordHashArgon.HashPassword(String, Integer, Integer)
- uid: LibSodium.CryptoPasswordHashArgon.HashPassword*
  name: HashPassword
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_HashPassword_
  commentId: Overload:LibSodium.CryptoPasswordHashArgon.HashPassword
  isSpec: "True"
  fullName: LibSodium.CryptoPasswordHashArgon.HashPassword
  nameWithType: CryptoPasswordHashArgon.HashPassword
- uid: LibSodium.CryptoPasswordHashArgon.InteractiveIterations
  name: InteractiveIterations
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_InteractiveIterations
  commentId: F:LibSodium.CryptoPasswordHashArgon.InteractiveIterations
  fullName: LibSodium.CryptoPasswordHashArgon.InteractiveIterations
  nameWithType: CryptoPasswordHashArgon.InteractiveIterations
- uid: LibSodium.CryptoPasswordHashArgon.InteractiveMemoryLen
  name: InteractiveMemoryLen
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_InteractiveMemoryLen
  commentId: F:LibSodium.CryptoPasswordHashArgon.InteractiveMemoryLen
  fullName: LibSodium.CryptoPasswordHashArgon.InteractiveMemoryLen
  nameWithType: CryptoPasswordHashArgon.InteractiveMemoryLen
- uid: LibSodium.CryptoPasswordHashArgon.MinIterations
  name: MinIterations
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_MinIterations
  commentId: F:LibSodium.CryptoPasswordHashArgon.MinIterations
  fullName: LibSodium.CryptoPasswordHashArgon.MinIterations
  nameWithType: CryptoPasswordHashArgon.MinIterations
- uid: LibSodium.CryptoPasswordHashArgon.MinKeyLen
  name: MinKeyLen
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_MinKeyLen
  commentId: F:LibSodium.CryptoPasswordHashArgon.MinKeyLen
  fullName: LibSodium.CryptoPasswordHashArgon.MinKeyLen
  nameWithType: CryptoPasswordHashArgon.MinKeyLen
- uid: LibSodium.CryptoPasswordHashArgon.MinMemoryLen
  name: MinMemoryLen
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_MinMemoryLen
  commentId: F:LibSodium.CryptoPasswordHashArgon.MinMemoryLen
  fullName: LibSodium.CryptoPasswordHashArgon.MinMemoryLen
  nameWithType: CryptoPasswordHashArgon.MinMemoryLen
- uid: LibSodium.CryptoPasswordHashArgon.MinPasswordLen
  name: MinPasswordLen
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_MinPasswordLen
  commentId: F:LibSodium.CryptoPasswordHashArgon.MinPasswordLen
  fullName: LibSodium.CryptoPasswordHashArgon.MinPasswordLen
  nameWithType: CryptoPasswordHashArgon.MinPasswordLen
- uid: LibSodium.CryptoPasswordHashArgon.ModerateIterations
  name: ModerateIterations
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_ModerateIterations
  commentId: F:LibSodium.CryptoPasswordHashArgon.ModerateIterations
  fullName: LibSodium.CryptoPasswordHashArgon.ModerateIterations
  nameWithType: CryptoPasswordHashArgon.ModerateIterations
- uid: LibSodium.CryptoPasswordHashArgon.ModerateMemoryLen
  name: ModerateMemoryLen
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_ModerateMemoryLen
  commentId: F:LibSodium.CryptoPasswordHashArgon.ModerateMemoryLen
  fullName: LibSodium.CryptoPasswordHashArgon.ModerateMemoryLen
  nameWithType: CryptoPasswordHashArgon.ModerateMemoryLen
- uid: LibSodium.CryptoPasswordHashArgon.Prefix
  name: Prefix
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_Prefix
  commentId: F:LibSodium.CryptoPasswordHashArgon.Prefix
  fullName: LibSodium.CryptoPasswordHashArgon.Prefix
  nameWithType: CryptoPasswordHashArgon.Prefix
- uid: LibSodium.CryptoPasswordHashArgon.SaltLen
  name: SaltLen
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_SaltLen
  commentId: F:LibSodium.CryptoPasswordHashArgon.SaltLen
  fullName: LibSodium.CryptoPasswordHashArgon.SaltLen
  nameWithType: CryptoPasswordHashArgon.SaltLen
- uid: LibSodium.CryptoPasswordHashArgon.SensitiveIterations
  name: SensitiveIterations
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_SensitiveIterations
  commentId: F:LibSodium.CryptoPasswordHashArgon.SensitiveIterations
  fullName: LibSodium.CryptoPasswordHashArgon.SensitiveIterations
  nameWithType: CryptoPasswordHashArgon.SensitiveIterations
- uid: LibSodium.CryptoPasswordHashArgon.SensitiveMemoryLen
  name: SensitiveMemoryLen
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_SensitiveMemoryLen
  commentId: F:LibSodium.CryptoPasswordHashArgon.SensitiveMemoryLen
  fullName: LibSodium.CryptoPasswordHashArgon.SensitiveMemoryLen
  nameWithType: CryptoPasswordHashArgon.SensitiveMemoryLen
- uid: LibSodium.CryptoPasswordHashArgon.VerifyPassword(System.String,System.ReadOnlySpan{System.Byte})
  name: VerifyPassword(string, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_VerifyPassword_System_String_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoPasswordHashArgon.VerifyPassword(System.String,System.ReadOnlySpan{System.Byte})
  name.vb: VerifyPassword(String, ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoPasswordHashArgon.VerifyPassword(string, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoPasswordHashArgon.VerifyPassword(String, System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoPasswordHashArgon.VerifyPassword(string, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoPasswordHashArgon.VerifyPassword(String, ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoPasswordHashArgon.VerifyPassword(System.String,System.String)
  name: VerifyPassword(string, string)
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_VerifyPassword_System_String_System_String_
  commentId: M:LibSodium.CryptoPasswordHashArgon.VerifyPassword(System.String,System.String)
  name.vb: VerifyPassword(String, String)
  fullName: LibSodium.CryptoPasswordHashArgon.VerifyPassword(string, string)
  fullName.vb: LibSodium.CryptoPasswordHashArgon.VerifyPassword(String, String)
  nameWithType: CryptoPasswordHashArgon.VerifyPassword(string, string)
  nameWithType.vb: CryptoPasswordHashArgon.VerifyPassword(String, String)
- uid: LibSodium.CryptoPasswordHashArgon.VerifyPassword*
  name: VerifyPassword
  href: api/LibSodium.CryptoPasswordHashArgon.html#LibSodium_CryptoPasswordHashArgon_VerifyPassword_
  commentId: Overload:LibSodium.CryptoPasswordHashArgon.VerifyPassword
  isSpec: "True"
  fullName: LibSodium.CryptoPasswordHashArgon.VerifyPassword
  nameWithType: CryptoPasswordHashArgon.VerifyPassword
- uid: LibSodium.CryptoPasswordHashScrypt
  name: CryptoPasswordHashScrypt
  href: api/LibSodium.CryptoPasswordHashScrypt.html
  commentId: T:LibSodium.CryptoPasswordHashScrypt
  fullName: LibSodium.CryptoPasswordHashScrypt
  nameWithType: CryptoPasswordHashScrypt
- uid: LibSodium.CryptoPasswordHashScrypt.DeriveKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Int32,System.Int32)
  name: DeriveKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, int, int)
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_DeriveKey_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Int32_System_Int32_
  commentId: M:LibSodium.CryptoPasswordHashScrypt.DeriveKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Int32,System.Int32)
  name.vb: DeriveKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Integer, Integer)
  fullName: LibSodium.CryptoPasswordHashScrypt.DeriveKey(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, int, int)
  fullName.vb: LibSodium.CryptoPasswordHashScrypt.DeriveKey(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), Integer, Integer)
  nameWithType: CryptoPasswordHashScrypt.DeriveKey(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, int, int)
  nameWithType.vb: CryptoPasswordHashScrypt.DeriveKey(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Integer, Integer)
- uid: LibSodium.CryptoPasswordHashScrypt.DeriveKey(System.Span{System.Byte},System.String,System.ReadOnlySpan{System.Byte},System.Int32,System.Int32)
  name: DeriveKey(Span<byte>, string, ReadOnlySpan<byte>, int, int)
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_DeriveKey_System_Span_System_Byte__System_String_System_ReadOnlySpan_System_Byte__System_Int32_System_Int32_
  commentId: M:LibSodium.CryptoPasswordHashScrypt.DeriveKey(System.Span{System.Byte},System.String,System.ReadOnlySpan{System.Byte},System.Int32,System.Int32)
  name.vb: DeriveKey(Span(Of Byte), String, ReadOnlySpan(Of Byte), Integer, Integer)
  fullName: LibSodium.CryptoPasswordHashScrypt.DeriveKey(System.Span<byte>, string, System.ReadOnlySpan<byte>, int, int)
  fullName.vb: LibSodium.CryptoPasswordHashScrypt.DeriveKey(System.Span(Of Byte), String, System.ReadOnlySpan(Of Byte), Integer, Integer)
  nameWithType: CryptoPasswordHashScrypt.DeriveKey(Span<byte>, string, ReadOnlySpan<byte>, int, int)
  nameWithType.vb: CryptoPasswordHashScrypt.DeriveKey(Span(Of Byte), String, ReadOnlySpan(Of Byte), Integer, Integer)
- uid: LibSodium.CryptoPasswordHashScrypt.DeriveKey*
  name: DeriveKey
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_DeriveKey_
  commentId: Overload:LibSodium.CryptoPasswordHashScrypt.DeriveKey
  isSpec: "True"
  fullName: LibSodium.CryptoPasswordHashScrypt.DeriveKey
  nameWithType: CryptoPasswordHashScrypt.DeriveKey
- uid: LibSodium.CryptoPasswordHashScrypt.EncodedLen
  name: EncodedLen
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_EncodedLen
  commentId: F:LibSodium.CryptoPasswordHashScrypt.EncodedLen
  fullName: LibSodium.CryptoPasswordHashScrypt.EncodedLen
  nameWithType: CryptoPasswordHashScrypt.EncodedLen
- uid: LibSodium.CryptoPasswordHashScrypt.HashPassword(System.ReadOnlySpan{System.Byte},System.Int32,System.Int32)
  name: HashPassword(ReadOnlySpan<byte>, int, int)
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_HashPassword_System_ReadOnlySpan_System_Byte__System_Int32_System_Int32_
  commentId: M:LibSodium.CryptoPasswordHashScrypt.HashPassword(System.ReadOnlySpan{System.Byte},System.Int32,System.Int32)
  name.vb: HashPassword(ReadOnlySpan(Of Byte), Integer, Integer)
  fullName: LibSodium.CryptoPasswordHashScrypt.HashPassword(System.ReadOnlySpan<byte>, int, int)
  fullName.vb: LibSodium.CryptoPasswordHashScrypt.HashPassword(System.ReadOnlySpan(Of Byte), Integer, Integer)
  nameWithType: CryptoPasswordHashScrypt.HashPassword(ReadOnlySpan<byte>, int, int)
  nameWithType.vb: CryptoPasswordHashScrypt.HashPassword(ReadOnlySpan(Of Byte), Integer, Integer)
- uid: LibSodium.CryptoPasswordHashScrypt.HashPassword(System.String,System.Int32,System.Int32)
  name: HashPassword(string, int, int)
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_HashPassword_System_String_System_Int32_System_Int32_
  commentId: M:LibSodium.CryptoPasswordHashScrypt.HashPassword(System.String,System.Int32,System.Int32)
  name.vb: HashPassword(String, Integer, Integer)
  fullName: LibSodium.CryptoPasswordHashScrypt.HashPassword(string, int, int)
  fullName.vb: LibSodium.CryptoPasswordHashScrypt.HashPassword(String, Integer, Integer)
  nameWithType: CryptoPasswordHashScrypt.HashPassword(string, int, int)
  nameWithType.vb: CryptoPasswordHashScrypt.HashPassword(String, Integer, Integer)
- uid: LibSodium.CryptoPasswordHashScrypt.HashPassword*
  name: HashPassword
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_HashPassword_
  commentId: Overload:LibSodium.CryptoPasswordHashScrypt.HashPassword
  isSpec: "True"
  fullName: LibSodium.CryptoPasswordHashScrypt.HashPassword
  nameWithType: CryptoPasswordHashScrypt.HashPassword
- uid: LibSodium.CryptoPasswordHashScrypt.InteractiveIterations
  name: InteractiveIterations
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_InteractiveIterations
  commentId: F:LibSodium.CryptoPasswordHashScrypt.InteractiveIterations
  fullName: LibSodium.CryptoPasswordHashScrypt.InteractiveIterations
  nameWithType: CryptoPasswordHashScrypt.InteractiveIterations
- uid: LibSodium.CryptoPasswordHashScrypt.InteractiveMemoryLen
  name: InteractiveMemoryLen
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_InteractiveMemoryLen
  commentId: F:LibSodium.CryptoPasswordHashScrypt.InteractiveMemoryLen
  fullName: LibSodium.CryptoPasswordHashScrypt.InteractiveMemoryLen
  nameWithType: CryptoPasswordHashScrypt.InteractiveMemoryLen
- uid: LibSodium.CryptoPasswordHashScrypt.MinIterations
  name: MinIterations
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_MinIterations
  commentId: F:LibSodium.CryptoPasswordHashScrypt.MinIterations
  fullName: LibSodium.CryptoPasswordHashScrypt.MinIterations
  nameWithType: CryptoPasswordHashScrypt.MinIterations
- uid: LibSodium.CryptoPasswordHashScrypt.MinKeyLen
  name: MinKeyLen
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_MinKeyLen
  commentId: F:LibSodium.CryptoPasswordHashScrypt.MinKeyLen
  fullName: LibSodium.CryptoPasswordHashScrypt.MinKeyLen
  nameWithType: CryptoPasswordHashScrypt.MinKeyLen
- uid: LibSodium.CryptoPasswordHashScrypt.MinMemoryLen
  name: MinMemoryLen
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_MinMemoryLen
  commentId: F:LibSodium.CryptoPasswordHashScrypt.MinMemoryLen
  fullName: LibSodium.CryptoPasswordHashScrypt.MinMemoryLen
  nameWithType: CryptoPasswordHashScrypt.MinMemoryLen
- uid: LibSodium.CryptoPasswordHashScrypt.MinPasswordLen
  name: MinPasswordLen
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_MinPasswordLen
  commentId: F:LibSodium.CryptoPasswordHashScrypt.MinPasswordLen
  fullName: LibSodium.CryptoPasswordHashScrypt.MinPasswordLen
  nameWithType: CryptoPasswordHashScrypt.MinPasswordLen
- uid: LibSodium.CryptoPasswordHashScrypt.ModerateIterations
  name: ModerateIterations
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_ModerateIterations
  commentId: F:LibSodium.CryptoPasswordHashScrypt.ModerateIterations
  fullName: LibSodium.CryptoPasswordHashScrypt.ModerateIterations
  nameWithType: CryptoPasswordHashScrypt.ModerateIterations
- uid: LibSodium.CryptoPasswordHashScrypt.ModerateMemoryLen
  name: ModerateMemoryLen
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_ModerateMemoryLen
  commentId: F:LibSodium.CryptoPasswordHashScrypt.ModerateMemoryLen
  fullName: LibSodium.CryptoPasswordHashScrypt.ModerateMemoryLen
  nameWithType: CryptoPasswordHashScrypt.ModerateMemoryLen
- uid: LibSodium.CryptoPasswordHashScrypt.Prefix
  name: Prefix
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_Prefix
  commentId: F:LibSodium.CryptoPasswordHashScrypt.Prefix
  fullName: LibSodium.CryptoPasswordHashScrypt.Prefix
  nameWithType: CryptoPasswordHashScrypt.Prefix
- uid: LibSodium.CryptoPasswordHashScrypt.SaltLen
  name: SaltLen
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_SaltLen
  commentId: F:LibSodium.CryptoPasswordHashScrypt.SaltLen
  fullName: LibSodium.CryptoPasswordHashScrypt.SaltLen
  nameWithType: CryptoPasswordHashScrypt.SaltLen
- uid: LibSodium.CryptoPasswordHashScrypt.SensitiveIterations
  name: SensitiveIterations
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_SensitiveIterations
  commentId: F:LibSodium.CryptoPasswordHashScrypt.SensitiveIterations
  fullName: LibSodium.CryptoPasswordHashScrypt.SensitiveIterations
  nameWithType: CryptoPasswordHashScrypt.SensitiveIterations
- uid: LibSodium.CryptoPasswordHashScrypt.SensitiveMemoryLen
  name: SensitiveMemoryLen
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_SensitiveMemoryLen
  commentId: F:LibSodium.CryptoPasswordHashScrypt.SensitiveMemoryLen
  fullName: LibSodium.CryptoPasswordHashScrypt.SensitiveMemoryLen
  nameWithType: CryptoPasswordHashScrypt.SensitiveMemoryLen
- uid: LibSodium.CryptoPasswordHashScrypt.VerifyPassword(System.String,System.ReadOnlySpan{System.Byte})
  name: VerifyPassword(string, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_VerifyPassword_System_String_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoPasswordHashScrypt.VerifyPassword(System.String,System.ReadOnlySpan{System.Byte})
  name.vb: VerifyPassword(String, ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoPasswordHashScrypt.VerifyPassword(string, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoPasswordHashScrypt.VerifyPassword(String, System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoPasswordHashScrypt.VerifyPassword(string, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoPasswordHashScrypt.VerifyPassword(String, ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoPasswordHashScrypt.VerifyPassword(System.String,System.String)
  name: VerifyPassword(string, string)
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_VerifyPassword_System_String_System_String_
  commentId: M:LibSodium.CryptoPasswordHashScrypt.VerifyPassword(System.String,System.String)
  name.vb: VerifyPassword(String, String)
  fullName: LibSodium.CryptoPasswordHashScrypt.VerifyPassword(string, string)
  fullName.vb: LibSodium.CryptoPasswordHashScrypt.VerifyPassword(String, String)
  nameWithType: CryptoPasswordHashScrypt.VerifyPassword(string, string)
  nameWithType.vb: CryptoPasswordHashScrypt.VerifyPassword(String, String)
- uid: LibSodium.CryptoPasswordHashScrypt.VerifyPassword*
  name: VerifyPassword
  href: api/LibSodium.CryptoPasswordHashScrypt.html#LibSodium_CryptoPasswordHashScrypt_VerifyPassword_
  commentId: Overload:LibSodium.CryptoPasswordHashScrypt.VerifyPassword
  isSpec: "True"
  fullName: LibSodium.CryptoPasswordHashScrypt.VerifyPassword
  nameWithType: CryptoPasswordHashScrypt.VerifyPassword
- uid: LibSodium.CryptoScalarMult
  name: CryptoScalarMult
  href: api/LibSodium.CryptoScalarMult.html
  commentId: T:LibSodium.CryptoScalarMult
  fullName: LibSodium.CryptoScalarMult
  nameWithType: CryptoScalarMult
- uid: LibSodium.CryptoScalarMult.CalculatePublicKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: CalculatePublicKey(Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoScalarMult.html#LibSodium_CryptoScalarMult_CalculatePublicKey_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoScalarMult.CalculatePublicKey(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: CalculatePublicKey(Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoScalarMult.CalculatePublicKey(System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoScalarMult.CalculatePublicKey(System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoScalarMult.CalculatePublicKey(Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoScalarMult.CalculatePublicKey(Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoScalarMult.CalculatePublicKey*
  name: CalculatePublicKey
  href: api/LibSodium.CryptoScalarMult.html#LibSodium_CryptoScalarMult_CalculatePublicKey_
  commentId: Overload:LibSodium.CryptoScalarMult.CalculatePublicKey
  isSpec: "True"
  fullName: LibSodium.CryptoScalarMult.CalculatePublicKey
  nameWithType: CryptoScalarMult.CalculatePublicKey
- uid: LibSodium.CryptoScalarMult.Compute(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Compute(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoScalarMult.html#LibSodium_CryptoScalarMult_Compute_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoScalarMult.Compute(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Compute(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoScalarMult.Compute(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoScalarMult.Compute(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoScalarMult.Compute(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoScalarMult.Compute(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoScalarMult.Compute*
  name: Compute
  href: api/LibSodium.CryptoScalarMult.html#LibSodium_CryptoScalarMult_Compute_
  commentId: Overload:LibSodium.CryptoScalarMult.Compute
  isSpec: "True"
  fullName: LibSodium.CryptoScalarMult.Compute
  nameWithType: CryptoScalarMult.Compute
- uid: LibSodium.CryptoScalarMult.PrivateKeyLen
  name: PrivateKeyLen
  href: api/LibSodium.CryptoScalarMult.html#LibSodium_CryptoScalarMult_PrivateKeyLen
  commentId: F:LibSodium.CryptoScalarMult.PrivateKeyLen
  fullName: LibSodium.CryptoScalarMult.PrivateKeyLen
  nameWithType: CryptoScalarMult.PrivateKeyLen
- uid: LibSodium.CryptoScalarMult.PublicKeyLen
  name: PublicKeyLen
  href: api/LibSodium.CryptoScalarMult.html#LibSodium_CryptoScalarMult_PublicKeyLen
  commentId: F:LibSodium.CryptoScalarMult.PublicKeyLen
  fullName: LibSodium.CryptoScalarMult.PublicKeyLen
  nameWithType: CryptoScalarMult.PublicKeyLen
- uid: LibSodium.CryptoSecretStream
  name: CryptoSecretStream
  href: api/LibSodium.CryptoSecretStream.html
  commentId: T:LibSodium.CryptoSecretStream
  fullName: LibSodium.CryptoSecretStream
  nameWithType: CryptoSecretStream
- uid: LibSodium.CryptoSecretStream.DecryptChunk(System.Span{System.Byte},System.Span{System.Byte},LibSodium.CryptoSecretStreamTag@,System.ReadOnlySpan{System.Byte})
  name: DecryptChunk(Span<byte>, Span<byte>, out CryptoSecretStreamTag, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_DecryptChunk_System_Span_System_Byte__System_Span_System_Byte__LibSodium_CryptoSecretStreamTag__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSecretStream.DecryptChunk(System.Span{System.Byte},System.Span{System.Byte},LibSodium.CryptoSecretStreamTag@,System.ReadOnlySpan{System.Byte})
  name.vb: DecryptChunk(Span(Of Byte), Span(Of Byte), CryptoSecretStreamTag, ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSecretStream.DecryptChunk(System.Span<byte>, System.Span<byte>, out LibSodium.CryptoSecretStreamTag, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSecretStream.DecryptChunk(System.Span(Of Byte), System.Span(Of Byte), LibSodium.CryptoSecretStreamTag, System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSecretStream.DecryptChunk(Span<byte>, Span<byte>, out CryptoSecretStreamTag, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSecretStream.DecryptChunk(Span(Of Byte), Span(Of Byte), CryptoSecretStreamTag, ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSecretStream.DecryptChunk(System.Span{System.Byte},System.Span{System.Byte},LibSodium.CryptoSecretStreamTag@,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: DecryptChunk(Span<byte>, Span<byte>, out CryptoSecretStreamTag, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_DecryptChunk_System_Span_System_Byte__System_Span_System_Byte__LibSodium_CryptoSecretStreamTag__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSecretStream.DecryptChunk(System.Span{System.Byte},System.Span{System.Byte},LibSodium.CryptoSecretStreamTag@,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: DecryptChunk(Span(Of Byte), Span(Of Byte), CryptoSecretStreamTag, ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSecretStream.DecryptChunk(System.Span<byte>, System.Span<byte>, out LibSodium.CryptoSecretStreamTag, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSecretStream.DecryptChunk(System.Span(Of Byte), System.Span(Of Byte), LibSodium.CryptoSecretStreamTag, System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSecretStream.DecryptChunk(Span<byte>, Span<byte>, out CryptoSecretStreamTag, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSecretStream.DecryptChunk(Span(Of Byte), Span(Of Byte), CryptoSecretStreamTag, ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSecretStream.DecryptChunk*
  name: DecryptChunk
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_DecryptChunk_
  commentId: Overload:LibSodium.CryptoSecretStream.DecryptChunk
  isSpec: "True"
  fullName: LibSodium.CryptoSecretStream.DecryptChunk
  nameWithType: CryptoSecretStream.DecryptChunk
- uid: LibSodium.CryptoSecretStream.EncryptChunk(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},LibSodium.CryptoSecretStreamTag)
  name: EncryptChunk(Span<byte>, Span<byte>, ReadOnlySpan<byte>, CryptoSecretStreamTag)
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_EncryptChunk_System_Span_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__LibSodium_CryptoSecretStreamTag_
  commentId: M:LibSodium.CryptoSecretStream.EncryptChunk(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},LibSodium.CryptoSecretStreamTag)
  name.vb: EncryptChunk(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), CryptoSecretStreamTag)
  fullName: LibSodium.CryptoSecretStream.EncryptChunk(System.Span<byte>, System.Span<byte>, System.ReadOnlySpan<byte>, LibSodium.CryptoSecretStreamTag)
  fullName.vb: LibSodium.CryptoSecretStream.EncryptChunk(System.Span(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte), LibSodium.CryptoSecretStreamTag)
  nameWithType: CryptoSecretStream.EncryptChunk(Span<byte>, Span<byte>, ReadOnlySpan<byte>, CryptoSecretStreamTag)
  nameWithType.vb: CryptoSecretStream.EncryptChunk(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), CryptoSecretStreamTag)
- uid: LibSodium.CryptoSecretStream.EncryptChunk(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},LibSodium.CryptoSecretStreamTag,System.ReadOnlySpan{System.Byte})
  name: EncryptChunk(Span<byte>, Span<byte>, ReadOnlySpan<byte>, CryptoSecretStreamTag, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_EncryptChunk_System_Span_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__LibSodium_CryptoSecretStreamTag_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSecretStream.EncryptChunk(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},LibSodium.CryptoSecretStreamTag,System.ReadOnlySpan{System.Byte})
  name.vb: EncryptChunk(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), CryptoSecretStreamTag, ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSecretStream.EncryptChunk(System.Span<byte>, System.Span<byte>, System.ReadOnlySpan<byte>, LibSodium.CryptoSecretStreamTag, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSecretStream.EncryptChunk(System.Span(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte), LibSodium.CryptoSecretStreamTag, System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSecretStream.EncryptChunk(Span<byte>, Span<byte>, ReadOnlySpan<byte>, CryptoSecretStreamTag, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSecretStream.EncryptChunk(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), CryptoSecretStreamTag, ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSecretStream.EncryptChunk*
  name: EncryptChunk
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_EncryptChunk_
  commentId: Overload:LibSodium.CryptoSecretStream.EncryptChunk
  isSpec: "True"
  fullName: LibSodium.CryptoSecretStream.EncryptChunk
  nameWithType: CryptoSecretStream.EncryptChunk
- uid: LibSodium.CryptoSecretStream.GenerateKey(System.Span{System.Byte})
  name: GenerateKey(Span<byte>)
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_GenerateKey_System_Span_System_Byte__
  commentId: M:LibSodium.CryptoSecretStream.GenerateKey(System.Span{System.Byte})
  name.vb: GenerateKey(Span(Of Byte))
  fullName: LibSodium.CryptoSecretStream.GenerateKey(System.Span<byte>)
  fullName.vb: LibSodium.CryptoSecretStream.GenerateKey(System.Span(Of Byte))
  nameWithType: CryptoSecretStream.GenerateKey(Span<byte>)
  nameWithType.vb: CryptoSecretStream.GenerateKey(Span(Of Byte))
- uid: LibSodium.CryptoSecretStream.GenerateKey*
  name: GenerateKey
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_GenerateKey_
  commentId: Overload:LibSodium.CryptoSecretStream.GenerateKey
  isSpec: "True"
  fullName: LibSodium.CryptoSecretStream.GenerateKey
  nameWithType: CryptoSecretStream.GenerateKey
- uid: LibSodium.CryptoSecretStream.HeaderLen
  name: HeaderLen
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_HeaderLen
  commentId: F:LibSodium.CryptoSecretStream.HeaderLen
  fullName: LibSodium.CryptoSecretStream.HeaderLen
  nameWithType: CryptoSecretStream.HeaderLen
- uid: LibSodium.CryptoSecretStream.InitializeDecryption(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: InitializeDecryption(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_InitializeDecryption_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSecretStream.InitializeDecryption(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: InitializeDecryption(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSecretStream.InitializeDecryption(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSecretStream.InitializeDecryption(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSecretStream.InitializeDecryption(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSecretStream.InitializeDecryption(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSecretStream.InitializeDecryption*
  name: InitializeDecryption
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_InitializeDecryption_
  commentId: Overload:LibSodium.CryptoSecretStream.InitializeDecryption
  isSpec: "True"
  fullName: LibSodium.CryptoSecretStream.InitializeDecryption
  nameWithType: CryptoSecretStream.InitializeDecryption
- uid: LibSodium.CryptoSecretStream.InitializeEncryption(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: InitializeEncryption(Span<byte>, Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_InitializeEncryption_System_Span_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSecretStream.InitializeEncryption(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: InitializeEncryption(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSecretStream.InitializeEncryption(System.Span<byte>, System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSecretStream.InitializeEncryption(System.Span(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSecretStream.InitializeEncryption(Span<byte>, Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSecretStream.InitializeEncryption(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSecretStream.InitializeEncryption*
  name: InitializeEncryption
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_InitializeEncryption_
  commentId: Overload:LibSodium.CryptoSecretStream.InitializeEncryption
  isSpec: "True"
  fullName: LibSodium.CryptoSecretStream.InitializeEncryption
  nameWithType: CryptoSecretStream.InitializeEncryption
- uid: LibSodium.CryptoSecretStream.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_KeyLen
  commentId: F:LibSodium.CryptoSecretStream.KeyLen
  fullName: LibSodium.CryptoSecretStream.KeyLen
  nameWithType: CryptoSecretStream.KeyLen
- uid: LibSodium.CryptoSecretStream.OverheadLen
  name: OverheadLen
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_OverheadLen
  commentId: F:LibSodium.CryptoSecretStream.OverheadLen
  fullName: LibSodium.CryptoSecretStream.OverheadLen
  nameWithType: CryptoSecretStream.OverheadLen
- uid: LibSodium.CryptoSecretStream.StateLen
  name: StateLen
  href: api/LibSodium.CryptoSecretStream.html#LibSodium_CryptoSecretStream_StateLen
  commentId: F:LibSodium.CryptoSecretStream.StateLen
  fullName: LibSodium.CryptoSecretStream.StateLen
  nameWithType: CryptoSecretStream.StateLen
- uid: LibSodium.CryptoSecretStreamTag
  name: CryptoSecretStreamTag
  href: api/LibSodium.CryptoSecretStreamTag.html
  commentId: T:LibSodium.CryptoSecretStreamTag
  fullName: LibSodium.CryptoSecretStreamTag
  nameWithType: CryptoSecretStreamTag
- uid: LibSodium.CryptoSecretStreamTag.Final
  name: Final
  href: api/LibSodium.CryptoSecretStreamTag.html#LibSodium_CryptoSecretStreamTag_Final
  commentId: F:LibSodium.CryptoSecretStreamTag.Final
  fullName: LibSodium.CryptoSecretStreamTag.Final
  nameWithType: CryptoSecretStreamTag.Final
- uid: LibSodium.CryptoSecretStreamTag.Message
  name: Message
  href: api/LibSodium.CryptoSecretStreamTag.html#LibSodium_CryptoSecretStreamTag_Message
  commentId: F:LibSodium.CryptoSecretStreamTag.Message
  fullName: LibSodium.CryptoSecretStreamTag.Message
  nameWithType: CryptoSecretStreamTag.Message
- uid: LibSodium.CryptoSecretStreamTag.Push
  name: Push
  href: api/LibSodium.CryptoSecretStreamTag.html#LibSodium_CryptoSecretStreamTag_Push
  commentId: F:LibSodium.CryptoSecretStreamTag.Push
  fullName: LibSodium.CryptoSecretStreamTag.Push
  nameWithType: CryptoSecretStreamTag.Push
- uid: LibSodium.CryptoSecretStreamTag.Rekey
  name: Rekey
  href: api/LibSodium.CryptoSecretStreamTag.html#LibSodium_CryptoSecretStreamTag_Rekey
  commentId: F:LibSodium.CryptoSecretStreamTag.Rekey
  fullName: LibSodium.CryptoSecretStreamTag.Rekey
  nameWithType: CryptoSecretStreamTag.Rekey
- uid: LibSodium.CryptoSha256
  name: CryptoSha256
  href: api/LibSodium.CryptoSha256.html
  commentId: T:LibSodium.CryptoSha256
  fullName: LibSodium.CryptoSha256
  nameWithType: CryptoSha256
- uid: LibSodium.CryptoSha256.ComputeHash(System.Span{System.Byte},System.IO.Stream)
  name: ComputeHash(Span<byte>, Stream)
  href: api/LibSodium.CryptoSha256.html#LibSodium_CryptoSha256_ComputeHash_System_Span_System_Byte__System_IO_Stream_
  commentId: M:LibSodium.CryptoSha256.ComputeHash(System.Span{System.Byte},System.IO.Stream)
  name.vb: ComputeHash(Span(Of Byte), Stream)
  fullName: LibSodium.CryptoSha256.ComputeHash(System.Span<byte>, System.IO.Stream)
  fullName.vb: LibSodium.CryptoSha256.ComputeHash(System.Span(Of Byte), System.IO.Stream)
  nameWithType: CryptoSha256.ComputeHash(Span<byte>, Stream)
  nameWithType.vb: CryptoSha256.ComputeHash(Span(Of Byte), Stream)
- uid: LibSodium.CryptoSha256.ComputeHash(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: ComputeHash(Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSha256.html#LibSodium_CryptoSha256_ComputeHash_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSha256.ComputeHash(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: ComputeHash(Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSha256.ComputeHash(System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSha256.ComputeHash(System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSha256.ComputeHash(Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSha256.ComputeHash(Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSha256.ComputeHash*
  name: ComputeHash
  href: api/LibSodium.CryptoSha256.html#LibSodium_CryptoSha256_ComputeHash_
  commentId: Overload:LibSodium.CryptoSha256.ComputeHash
  isSpec: "True"
  fullName: LibSodium.CryptoSha256.ComputeHash
  nameWithType: CryptoSha256.ComputeHash
- uid: LibSodium.CryptoSha256.ComputeHashAsync(System.Memory{System.Byte},System.IO.Stream,System.Threading.CancellationToken)
  name: ComputeHashAsync(Memory<byte>, Stream, CancellationToken)
  href: api/LibSodium.CryptoSha256.html#LibSodium_CryptoSha256_ComputeHashAsync_System_Memory_System_Byte__System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoSha256.ComputeHashAsync(System.Memory{System.Byte},System.IO.Stream,System.Threading.CancellationToken)
  name.vb: ComputeHashAsync(Memory(Of Byte), Stream, CancellationToken)
  fullName: LibSodium.CryptoSha256.ComputeHashAsync(System.Memory<byte>, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoSha256.ComputeHashAsync(System.Memory(Of Byte), System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoSha256.ComputeHashAsync(Memory<byte>, Stream, CancellationToken)
  nameWithType.vb: CryptoSha256.ComputeHashAsync(Memory(Of Byte), Stream, CancellationToken)
- uid: LibSodium.CryptoSha256.ComputeHashAsync*
  name: ComputeHashAsync
  href: api/LibSodium.CryptoSha256.html#LibSodium_CryptoSha256_ComputeHashAsync_
  commentId: Overload:LibSodium.CryptoSha256.ComputeHashAsync
  isSpec: "True"
  fullName: LibSodium.CryptoSha256.ComputeHashAsync
  nameWithType: CryptoSha256.ComputeHashAsync
- uid: LibSodium.CryptoSha256.CreateIncrementalHash
  name: CreateIncrementalHash()
  href: api/LibSodium.CryptoSha256.html#LibSodium_CryptoSha256_CreateIncrementalHash
  commentId: M:LibSodium.CryptoSha256.CreateIncrementalHash
  fullName: LibSodium.CryptoSha256.CreateIncrementalHash()
  nameWithType: CryptoSha256.CreateIncrementalHash()
- uid: LibSodium.CryptoSha256.CreateIncrementalHash*
  name: CreateIncrementalHash
  href: api/LibSodium.CryptoSha256.html#LibSodium_CryptoSha256_CreateIncrementalHash_
  commentId: Overload:LibSodium.CryptoSha256.CreateIncrementalHash
  isSpec: "True"
  fullName: LibSodium.CryptoSha256.CreateIncrementalHash
  nameWithType: CryptoSha256.CreateIncrementalHash
- uid: LibSodium.CryptoSha256.HashLen
  name: HashLen
  href: api/LibSodium.CryptoSha256.html#LibSodium_CryptoSha256_HashLen
  commentId: F:LibSodium.CryptoSha256.HashLen
  fullName: LibSodium.CryptoSha256.HashLen
  nameWithType: CryptoSha256.HashLen
- uid: LibSodium.CryptoSha512
  name: CryptoSha512
  href: api/LibSodium.CryptoSha512.html
  commentId: T:LibSodium.CryptoSha512
  fullName: LibSodium.CryptoSha512
  nameWithType: CryptoSha512
- uid: LibSodium.CryptoSha512.ComputeHash(System.Span{System.Byte},System.IO.Stream)
  name: ComputeHash(Span<byte>, Stream)
  href: api/LibSodium.CryptoSha512.html#LibSodium_CryptoSha512_ComputeHash_System_Span_System_Byte__System_IO_Stream_
  commentId: M:LibSodium.CryptoSha512.ComputeHash(System.Span{System.Byte},System.IO.Stream)
  name.vb: ComputeHash(Span(Of Byte), Stream)
  fullName: LibSodium.CryptoSha512.ComputeHash(System.Span<byte>, System.IO.Stream)
  fullName.vb: LibSodium.CryptoSha512.ComputeHash(System.Span(Of Byte), System.IO.Stream)
  nameWithType: CryptoSha512.ComputeHash(Span<byte>, Stream)
  nameWithType.vb: CryptoSha512.ComputeHash(Span(Of Byte), Stream)
- uid: LibSodium.CryptoSha512.ComputeHash(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: ComputeHash(Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSha512.html#LibSodium_CryptoSha512_ComputeHash_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSha512.ComputeHash(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: ComputeHash(Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSha512.ComputeHash(System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSha512.ComputeHash(System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSha512.ComputeHash(Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSha512.ComputeHash(Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSha512.ComputeHash*
  name: ComputeHash
  href: api/LibSodium.CryptoSha512.html#LibSodium_CryptoSha512_ComputeHash_
  commentId: Overload:LibSodium.CryptoSha512.ComputeHash
  isSpec: "True"
  fullName: LibSodium.CryptoSha512.ComputeHash
  nameWithType: CryptoSha512.ComputeHash
- uid: LibSodium.CryptoSha512.ComputeHashAsync(System.Memory{System.Byte},System.IO.Stream,System.Threading.CancellationToken)
  name: ComputeHashAsync(Memory<byte>, Stream, CancellationToken)
  href: api/LibSodium.CryptoSha512.html#LibSodium_CryptoSha512_ComputeHashAsync_System_Memory_System_Byte__System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoSha512.ComputeHashAsync(System.Memory{System.Byte},System.IO.Stream,System.Threading.CancellationToken)
  name.vb: ComputeHashAsync(Memory(Of Byte), Stream, CancellationToken)
  fullName: LibSodium.CryptoSha512.ComputeHashAsync(System.Memory<byte>, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoSha512.ComputeHashAsync(System.Memory(Of Byte), System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoSha512.ComputeHashAsync(Memory<byte>, Stream, CancellationToken)
  nameWithType.vb: CryptoSha512.ComputeHashAsync(Memory(Of Byte), Stream, CancellationToken)
- uid: LibSodium.CryptoSha512.ComputeHashAsync*
  name: ComputeHashAsync
  href: api/LibSodium.CryptoSha512.html#LibSodium_CryptoSha512_ComputeHashAsync_
  commentId: Overload:LibSodium.CryptoSha512.ComputeHashAsync
  isSpec: "True"
  fullName: LibSodium.CryptoSha512.ComputeHashAsync
  nameWithType: CryptoSha512.ComputeHashAsync
- uid: LibSodium.CryptoSha512.CreateIncrementalHash
  name: CreateIncrementalHash()
  href: api/LibSodium.CryptoSha512.html#LibSodium_CryptoSha512_CreateIncrementalHash
  commentId: M:LibSodium.CryptoSha512.CreateIncrementalHash
  fullName: LibSodium.CryptoSha512.CreateIncrementalHash()
  nameWithType: CryptoSha512.CreateIncrementalHash()
- uid: LibSodium.CryptoSha512.CreateIncrementalHash*
  name: CreateIncrementalHash
  href: api/LibSodium.CryptoSha512.html#LibSodium_CryptoSha512_CreateIncrementalHash_
  commentId: Overload:LibSodium.CryptoSha512.CreateIncrementalHash
  isSpec: "True"
  fullName: LibSodium.CryptoSha512.CreateIncrementalHash
  nameWithType: CryptoSha512.CreateIncrementalHash
- uid: LibSodium.CryptoSha512.HashLen
  name: HashLen
  href: api/LibSodium.CryptoSha512.html#LibSodium_CryptoSha512_HashLen
  commentId: F:LibSodium.CryptoSha512.HashLen
  fullName: LibSodium.CryptoSha512.HashLen
  nameWithType: CryptoSha512.HashLen
- uid: LibSodium.CryptoShortHash
  name: CryptoShortHash
  href: api/LibSodium.CryptoShortHash.html
  commentId: T:LibSodium.CryptoShortHash
  fullName: LibSodium.CryptoShortHash
  nameWithType: CryptoShortHash
- uid: LibSodium.CryptoShortHash.ComputeHash(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: ComputeHash(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoShortHash.html#LibSodium_CryptoShortHash_ComputeHash_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoShortHash.ComputeHash(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: ComputeHash(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoShortHash.ComputeHash(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoShortHash.ComputeHash(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoShortHash.ComputeHash(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoShortHash.ComputeHash(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoShortHash.ComputeHash*
  name: ComputeHash
  href: api/LibSodium.CryptoShortHash.html#LibSodium_CryptoShortHash_ComputeHash_
  commentId: Overload:LibSodium.CryptoShortHash.ComputeHash
  isSpec: "True"
  fullName: LibSodium.CryptoShortHash.ComputeHash
  nameWithType: CryptoShortHash.ComputeHash
- uid: LibSodium.CryptoShortHash.HashLen
  name: HashLen
  href: api/LibSodium.CryptoShortHash.html#LibSodium_CryptoShortHash_HashLen
  commentId: F:LibSodium.CryptoShortHash.HashLen
  fullName: LibSodium.CryptoShortHash.HashLen
  nameWithType: CryptoShortHash.HashLen
- uid: LibSodium.CryptoShortHash.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoShortHash.html#LibSodium_CryptoShortHash_KeyLen
  commentId: F:LibSodium.CryptoShortHash.KeyLen
  fullName: LibSodium.CryptoShortHash.KeyLen
  nameWithType: CryptoShortHash.KeyLen
- uid: LibSodium.CryptoSign
  name: CryptoSign
  href: api/LibSodium.CryptoSign.html
  commentId: T:LibSodium.CryptoSign
  fullName: LibSodium.CryptoSign
  nameWithType: CryptoSign
- uid: LibSodium.CryptoSign.GenerateKeyPair(System.Span{System.Byte},System.Span{System.Byte})
  name: GenerateKeyPair(Span<byte>, Span<byte>)
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_GenerateKeyPair_System_Span_System_Byte__System_Span_System_Byte__
  commentId: M:LibSodium.CryptoSign.GenerateKeyPair(System.Span{System.Byte},System.Span{System.Byte})
  name.vb: GenerateKeyPair(Span(Of Byte), Span(Of Byte))
  fullName: LibSodium.CryptoSign.GenerateKeyPair(System.Span<byte>, System.Span<byte>)
  fullName.vb: LibSodium.CryptoSign.GenerateKeyPair(System.Span(Of Byte), System.Span(Of Byte))
  nameWithType: CryptoSign.GenerateKeyPair(Span<byte>, Span<byte>)
  nameWithType.vb: CryptoSign.GenerateKeyPair(Span(Of Byte), Span(Of Byte))
- uid: LibSodium.CryptoSign.GenerateKeyPair*
  name: GenerateKeyPair
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_GenerateKeyPair_
  commentId: Overload:LibSodium.CryptoSign.GenerateKeyPair
  isSpec: "True"
  fullName: LibSodium.CryptoSign.GenerateKeyPair
  nameWithType: CryptoSign.GenerateKeyPair
- uid: LibSodium.CryptoSign.GenerateKeyPairDeterministically(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: GenerateKeyPairDeterministically(Span<byte>, Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_GenerateKeyPairDeterministically_System_Span_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSign.GenerateKeyPairDeterministically(System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: GenerateKeyPairDeterministically(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSign.GenerateKeyPairDeterministically(System.Span<byte>, System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSign.GenerateKeyPairDeterministically(System.Span(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSign.GenerateKeyPairDeterministically(Span<byte>, Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSign.GenerateKeyPairDeterministically(Span(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSign.GenerateKeyPairDeterministically*
  name: GenerateKeyPairDeterministically
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_GenerateKeyPairDeterministically_
  commentId: Overload:LibSodium.CryptoSign.GenerateKeyPairDeterministically
  isSpec: "True"
  fullName: LibSodium.CryptoSign.GenerateKeyPairDeterministically
  nameWithType: CryptoSign.GenerateKeyPairDeterministically
- uid: LibSodium.CryptoSign.PrivateKeyLen
  name: PrivateKeyLen
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_PrivateKeyLen
  commentId: F:LibSodium.CryptoSign.PrivateKeyLen
  fullName: LibSodium.CryptoSign.PrivateKeyLen
  nameWithType: CryptoSign.PrivateKeyLen
- uid: LibSodium.CryptoSign.PrivateKeyToCurve(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: PrivateKeyToCurve(Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_PrivateKeyToCurve_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSign.PrivateKeyToCurve(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: PrivateKeyToCurve(Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSign.PrivateKeyToCurve(System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSign.PrivateKeyToCurve(System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSign.PrivateKeyToCurve(Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSign.PrivateKeyToCurve(Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSign.PrivateKeyToCurve*
  name: PrivateKeyToCurve
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_PrivateKeyToCurve_
  commentId: Overload:LibSodium.CryptoSign.PrivateKeyToCurve
  isSpec: "True"
  fullName: LibSodium.CryptoSign.PrivateKeyToCurve
  nameWithType: CryptoSign.PrivateKeyToCurve
- uid: LibSodium.CryptoSign.PublicKeyLen
  name: PublicKeyLen
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_PublicKeyLen
  commentId: F:LibSodium.CryptoSign.PublicKeyLen
  fullName: LibSodium.CryptoSign.PublicKeyLen
  nameWithType: CryptoSign.PublicKeyLen
- uid: LibSodium.CryptoSign.PublicKeyToCurve(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: PublicKeyToCurve(Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_PublicKeyToCurve_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSign.PublicKeyToCurve(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: PublicKeyToCurve(Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSign.PublicKeyToCurve(System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSign.PublicKeyToCurve(System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSign.PublicKeyToCurve(Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSign.PublicKeyToCurve(Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSign.PublicKeyToCurve*
  name: PublicKeyToCurve
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_PublicKeyToCurve_
  commentId: Overload:LibSodium.CryptoSign.PublicKeyToCurve
  isSpec: "True"
  fullName: LibSodium.CryptoSign.PublicKeyToCurve
  nameWithType: CryptoSign.PublicKeyToCurve
- uid: LibSodium.CryptoSign.SeedLen
  name: SeedLen
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_SeedLen
  commentId: F:LibSodium.CryptoSign.SeedLen
  fullName: LibSodium.CryptoSign.SeedLen
  nameWithType: CryptoSign.SeedLen
- uid: LibSodium.CryptoSign.Sign(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Sign(ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_Sign_System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSign.Sign(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Sign(ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSign.Sign(System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSign.Sign(System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSign.Sign(ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSign.Sign(ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSign.Sign*
  name: Sign
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_Sign_
  commentId: Overload:LibSodium.CryptoSign.Sign
  isSpec: "True"
  fullName: LibSodium.CryptoSign.Sign
  nameWithType: CryptoSign.Sign
- uid: LibSodium.CryptoSign.SignatureLen
  name: SignatureLen
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_SignatureLen
  commentId: F:LibSodium.CryptoSign.SignatureLen
  fullName: LibSodium.CryptoSign.SignatureLen
  nameWithType: CryptoSign.SignatureLen
- uid: LibSodium.CryptoSign.TryVerify(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: TryVerify(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_TryVerify_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSign.TryVerify(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: TryVerify(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSign.TryVerify(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSign.TryVerify(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSign.TryVerify(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSign.TryVerify(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSign.TryVerify*
  name: TryVerify
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_TryVerify_
  commentId: Overload:LibSodium.CryptoSign.TryVerify
  isSpec: "True"
  fullName: LibSodium.CryptoSign.TryVerify
  nameWithType: CryptoSign.TryVerify
- uid: LibSodium.CryptoSign.Verify(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Verify(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_Verify_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoSign.Verify(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Verify(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoSign.Verify(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoSign.Verify(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoSign.Verify(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoSign.Verify(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoSign.Verify*
  name: Verify
  href: api/LibSodium.CryptoSign.html#LibSodium_CryptoSign_Verify_
  commentId: Overload:LibSodium.CryptoSign.Verify
  isSpec: "True"
  fullName: LibSodium.CryptoSign.Verify
  nameWithType: CryptoSign.Verify
- uid: LibSodium.CryptoStreamChaCha20
  name: CryptoStreamChaCha20
  href: api/LibSodium.CryptoStreamChaCha20.html
  commentId: T:LibSodium.CryptoStreamChaCha20
  fullName: LibSodium.CryptoStreamChaCha20
  nameWithType: CryptoStreamChaCha20
- uid: LibSodium.CryptoStreamChaCha20.BlockLen
  name: BlockLen
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_BlockLen
  commentId: F:LibSodium.CryptoStreamChaCha20.BlockLen
  fullName: LibSodium.CryptoStreamChaCha20.BlockLen
  nameWithType: CryptoStreamChaCha20.BlockLen
- uid: LibSodium.CryptoStreamChaCha20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name: Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_Decrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_IO_Stream_System_IO_Stream_
  commentId: M:LibSodium.CryptoStreamChaCha20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name.vb: Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
  fullName: LibSodium.CryptoStreamChaCha20.Decrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.IO.Stream, System.IO.Stream)
  fullName.vb: LibSodium.CryptoStreamChaCha20.Decrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.IO.Stream, System.IO.Stream)
  nameWithType: CryptoStreamChaCha20.Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  nameWithType.vb: CryptoStreamChaCha20.Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
- uid: LibSodium.CryptoStreamChaCha20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name: Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_Decrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_UInt64_
  commentId: M:LibSodium.CryptoStreamChaCha20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name.vb: Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
  fullName: LibSodium.CryptoStreamChaCha20.Decrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, ulong)
  fullName.vb: LibSodium.CryptoStreamChaCha20.Decrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), ULong)
  nameWithType: CryptoStreamChaCha20.Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  nameWithType.vb: CryptoStreamChaCha20.Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
- uid: LibSodium.CryptoStreamChaCha20.Decrypt*
  name: Decrypt
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_Decrypt_
  commentId: Overload:LibSodium.CryptoStreamChaCha20.Decrypt
  isSpec: "True"
  fullName: LibSodium.CryptoStreamChaCha20.Decrypt
  nameWithType: CryptoStreamChaCha20.Decrypt
- uid: LibSodium.CryptoStreamChaCha20.DecryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name: DecryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_DecryptAsync_System_ReadOnlyMemory_System_Byte__System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoStreamChaCha20.DecryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name.vb: DecryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
  fullName: LibSodium.CryptoStreamChaCha20.DecryptAsync(System.ReadOnlyMemory<byte>, System.ReadOnlyMemory<byte>, System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoStreamChaCha20.DecryptAsync(System.ReadOnlyMemory(Of Byte), System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoStreamChaCha20.DecryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  nameWithType.vb: CryptoStreamChaCha20.DecryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
- uid: LibSodium.CryptoStreamChaCha20.DecryptAsync*
  name: DecryptAsync
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_DecryptAsync_
  commentId: Overload:LibSodium.CryptoStreamChaCha20.DecryptAsync
  isSpec: "True"
  fullName: LibSodium.CryptoStreamChaCha20.DecryptAsync
  nameWithType: CryptoStreamChaCha20.DecryptAsync
- uid: LibSodium.CryptoStreamChaCha20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name: Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_Encrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_IO_Stream_System_IO_Stream_
  commentId: M:LibSodium.CryptoStreamChaCha20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name.vb: Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
  fullName: LibSodium.CryptoStreamChaCha20.Encrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.IO.Stream, System.IO.Stream)
  fullName.vb: LibSodium.CryptoStreamChaCha20.Encrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.IO.Stream, System.IO.Stream)
  nameWithType: CryptoStreamChaCha20.Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  nameWithType.vb: CryptoStreamChaCha20.Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
- uid: LibSodium.CryptoStreamChaCha20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name: Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_Encrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_UInt64_
  commentId: M:LibSodium.CryptoStreamChaCha20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name.vb: Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
  fullName: LibSodium.CryptoStreamChaCha20.Encrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, ulong)
  fullName.vb: LibSodium.CryptoStreamChaCha20.Encrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), ULong)
  nameWithType: CryptoStreamChaCha20.Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  nameWithType.vb: CryptoStreamChaCha20.Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
- uid: LibSodium.CryptoStreamChaCha20.Encrypt*
  name: Encrypt
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_Encrypt_
  commentId: Overload:LibSodium.CryptoStreamChaCha20.Encrypt
  isSpec: "True"
  fullName: LibSodium.CryptoStreamChaCha20.Encrypt
  nameWithType: CryptoStreamChaCha20.Encrypt
- uid: LibSodium.CryptoStreamChaCha20.EncryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name: EncryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_EncryptAsync_System_ReadOnlyMemory_System_Byte__System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoStreamChaCha20.EncryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name.vb: EncryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
  fullName: LibSodium.CryptoStreamChaCha20.EncryptAsync(System.ReadOnlyMemory<byte>, System.ReadOnlyMemory<byte>, System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoStreamChaCha20.EncryptAsync(System.ReadOnlyMemory(Of Byte), System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoStreamChaCha20.EncryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  nameWithType.vb: CryptoStreamChaCha20.EncryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
- uid: LibSodium.CryptoStreamChaCha20.EncryptAsync*
  name: EncryptAsync
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_EncryptAsync_
  commentId: Overload:LibSodium.CryptoStreamChaCha20.EncryptAsync
  isSpec: "True"
  fullName: LibSodium.CryptoStreamChaCha20.EncryptAsync
  nameWithType: CryptoStreamChaCha20.EncryptAsync
- uid: LibSodium.CryptoStreamChaCha20.GenerateKeystream(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: GenerateKeystream(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_GenerateKeystream_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoStreamChaCha20.GenerateKeystream(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: GenerateKeystream(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoStreamChaCha20.GenerateKeystream(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoStreamChaCha20.GenerateKeystream(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoStreamChaCha20.GenerateKeystream(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoStreamChaCha20.GenerateKeystream(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoStreamChaCha20.GenerateKeystream*
  name: GenerateKeystream
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_GenerateKeystream_
  commentId: Overload:LibSodium.CryptoStreamChaCha20.GenerateKeystream
  isSpec: "True"
  fullName: LibSodium.CryptoStreamChaCha20.GenerateKeystream
  nameWithType: CryptoStreamChaCha20.GenerateKeystream
- uid: LibSodium.CryptoStreamChaCha20.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_KeyLen
  commentId: F:LibSodium.CryptoStreamChaCha20.KeyLen
  fullName: LibSodium.CryptoStreamChaCha20.KeyLen
  nameWithType: CryptoStreamChaCha20.KeyLen
- uid: LibSodium.CryptoStreamChaCha20.NonceLen
  name: NonceLen
  href: api/LibSodium.CryptoStreamChaCha20.html#LibSodium_CryptoStreamChaCha20_NonceLen
  commentId: F:LibSodium.CryptoStreamChaCha20.NonceLen
  fullName: LibSodium.CryptoStreamChaCha20.NonceLen
  nameWithType: CryptoStreamChaCha20.NonceLen
- uid: LibSodium.CryptoStreamChaCha20Ietf
  name: CryptoStreamChaCha20Ietf
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html
  commentId: T:LibSodium.CryptoStreamChaCha20Ietf
  fullName: LibSodium.CryptoStreamChaCha20Ietf
  nameWithType: CryptoStreamChaCha20Ietf
- uid: LibSodium.CryptoStreamChaCha20Ietf.BlockLen
  name: BlockLen
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_BlockLen
  commentId: F:LibSodium.CryptoStreamChaCha20Ietf.BlockLen
  fullName: LibSodium.CryptoStreamChaCha20Ietf.BlockLen
  nameWithType: CryptoStreamChaCha20Ietf.BlockLen
- uid: LibSodium.CryptoStreamChaCha20Ietf.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name: Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_Decrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_IO_Stream_System_IO_Stream_
  commentId: M:LibSodium.CryptoStreamChaCha20Ietf.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name.vb: Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
  fullName: LibSodium.CryptoStreamChaCha20Ietf.Decrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.IO.Stream, System.IO.Stream)
  fullName.vb: LibSodium.CryptoStreamChaCha20Ietf.Decrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.IO.Stream, System.IO.Stream)
  nameWithType: CryptoStreamChaCha20Ietf.Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  nameWithType.vb: CryptoStreamChaCha20Ietf.Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
- uid: LibSodium.CryptoStreamChaCha20Ietf.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name: Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_Decrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_UInt64_
  commentId: M:LibSodium.CryptoStreamChaCha20Ietf.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name.vb: Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
  fullName: LibSodium.CryptoStreamChaCha20Ietf.Decrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, ulong)
  fullName.vb: LibSodium.CryptoStreamChaCha20Ietf.Decrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), ULong)
  nameWithType: CryptoStreamChaCha20Ietf.Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  nameWithType.vb: CryptoStreamChaCha20Ietf.Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
- uid: LibSodium.CryptoStreamChaCha20Ietf.Decrypt*
  name: Decrypt
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_Decrypt_
  commentId: Overload:LibSodium.CryptoStreamChaCha20Ietf.Decrypt
  isSpec: "True"
  fullName: LibSodium.CryptoStreamChaCha20Ietf.Decrypt
  nameWithType: CryptoStreamChaCha20Ietf.Decrypt
- uid: LibSodium.CryptoStreamChaCha20Ietf.DecryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name: DecryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_DecryptAsync_System_ReadOnlyMemory_System_Byte__System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoStreamChaCha20Ietf.DecryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name.vb: DecryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
  fullName: LibSodium.CryptoStreamChaCha20Ietf.DecryptAsync(System.ReadOnlyMemory<byte>, System.ReadOnlyMemory<byte>, System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoStreamChaCha20Ietf.DecryptAsync(System.ReadOnlyMemory(Of Byte), System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoStreamChaCha20Ietf.DecryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  nameWithType.vb: CryptoStreamChaCha20Ietf.DecryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
- uid: LibSodium.CryptoStreamChaCha20Ietf.DecryptAsync*
  name: DecryptAsync
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_DecryptAsync_
  commentId: Overload:LibSodium.CryptoStreamChaCha20Ietf.DecryptAsync
  isSpec: "True"
  fullName: LibSodium.CryptoStreamChaCha20Ietf.DecryptAsync
  nameWithType: CryptoStreamChaCha20Ietf.DecryptAsync
- uid: LibSodium.CryptoStreamChaCha20Ietf.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name: Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_Encrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_IO_Stream_System_IO_Stream_
  commentId: M:LibSodium.CryptoStreamChaCha20Ietf.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name.vb: Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
  fullName: LibSodium.CryptoStreamChaCha20Ietf.Encrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.IO.Stream, System.IO.Stream)
  fullName.vb: LibSodium.CryptoStreamChaCha20Ietf.Encrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.IO.Stream, System.IO.Stream)
  nameWithType: CryptoStreamChaCha20Ietf.Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  nameWithType.vb: CryptoStreamChaCha20Ietf.Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
- uid: LibSodium.CryptoStreamChaCha20Ietf.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name: Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_Encrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_UInt64_
  commentId: M:LibSodium.CryptoStreamChaCha20Ietf.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name.vb: Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
  fullName: LibSodium.CryptoStreamChaCha20Ietf.Encrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, ulong)
  fullName.vb: LibSodium.CryptoStreamChaCha20Ietf.Encrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), ULong)
  nameWithType: CryptoStreamChaCha20Ietf.Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  nameWithType.vb: CryptoStreamChaCha20Ietf.Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
- uid: LibSodium.CryptoStreamChaCha20Ietf.Encrypt*
  name: Encrypt
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_Encrypt_
  commentId: Overload:LibSodium.CryptoStreamChaCha20Ietf.Encrypt
  isSpec: "True"
  fullName: LibSodium.CryptoStreamChaCha20Ietf.Encrypt
  nameWithType: CryptoStreamChaCha20Ietf.Encrypt
- uid: LibSodium.CryptoStreamChaCha20Ietf.EncryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name: EncryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_EncryptAsync_System_ReadOnlyMemory_System_Byte__System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoStreamChaCha20Ietf.EncryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name.vb: EncryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
  fullName: LibSodium.CryptoStreamChaCha20Ietf.EncryptAsync(System.ReadOnlyMemory<byte>, System.ReadOnlyMemory<byte>, System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoStreamChaCha20Ietf.EncryptAsync(System.ReadOnlyMemory(Of Byte), System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoStreamChaCha20Ietf.EncryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  nameWithType.vb: CryptoStreamChaCha20Ietf.EncryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
- uid: LibSodium.CryptoStreamChaCha20Ietf.EncryptAsync*
  name: EncryptAsync
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_EncryptAsync_
  commentId: Overload:LibSodium.CryptoStreamChaCha20Ietf.EncryptAsync
  isSpec: "True"
  fullName: LibSodium.CryptoStreamChaCha20Ietf.EncryptAsync
  nameWithType: CryptoStreamChaCha20Ietf.EncryptAsync
- uid: LibSodium.CryptoStreamChaCha20Ietf.GenerateKeystream(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: GenerateKeystream(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_GenerateKeystream_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoStreamChaCha20Ietf.GenerateKeystream(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: GenerateKeystream(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoStreamChaCha20Ietf.GenerateKeystream(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoStreamChaCha20Ietf.GenerateKeystream(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoStreamChaCha20Ietf.GenerateKeystream(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoStreamChaCha20Ietf.GenerateKeystream(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoStreamChaCha20Ietf.GenerateKeystream*
  name: GenerateKeystream
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_GenerateKeystream_
  commentId: Overload:LibSodium.CryptoStreamChaCha20Ietf.GenerateKeystream
  isSpec: "True"
  fullName: LibSodium.CryptoStreamChaCha20Ietf.GenerateKeystream
  nameWithType: CryptoStreamChaCha20Ietf.GenerateKeystream
- uid: LibSodium.CryptoStreamChaCha20Ietf.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_KeyLen
  commentId: F:LibSodium.CryptoStreamChaCha20Ietf.KeyLen
  fullName: LibSodium.CryptoStreamChaCha20Ietf.KeyLen
  nameWithType: CryptoStreamChaCha20Ietf.KeyLen
- uid: LibSodium.CryptoStreamChaCha20Ietf.NonceLen
  name: NonceLen
  href: api/LibSodium.CryptoStreamChaCha20Ietf.html#LibSodium_CryptoStreamChaCha20Ietf_NonceLen
  commentId: F:LibSodium.CryptoStreamChaCha20Ietf.NonceLen
  fullName: LibSodium.CryptoStreamChaCha20Ietf.NonceLen
  nameWithType: CryptoStreamChaCha20Ietf.NonceLen
- uid: LibSodium.CryptoStreamSalsa20
  name: CryptoStreamSalsa20
  href: api/LibSodium.CryptoStreamSalsa20.html
  commentId: T:LibSodium.CryptoStreamSalsa20
  fullName: LibSodium.CryptoStreamSalsa20
  nameWithType: CryptoStreamSalsa20
- uid: LibSodium.CryptoStreamSalsa20.BlockLen
  name: BlockLen
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_BlockLen
  commentId: F:LibSodium.CryptoStreamSalsa20.BlockLen
  fullName: LibSodium.CryptoStreamSalsa20.BlockLen
  nameWithType: CryptoStreamSalsa20.BlockLen
- uid: LibSodium.CryptoStreamSalsa20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name: Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_Decrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_IO_Stream_System_IO_Stream_
  commentId: M:LibSodium.CryptoStreamSalsa20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name.vb: Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
  fullName: LibSodium.CryptoStreamSalsa20.Decrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.IO.Stream, System.IO.Stream)
  fullName.vb: LibSodium.CryptoStreamSalsa20.Decrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.IO.Stream, System.IO.Stream)
  nameWithType: CryptoStreamSalsa20.Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  nameWithType.vb: CryptoStreamSalsa20.Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
- uid: LibSodium.CryptoStreamSalsa20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name: Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_Decrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_UInt64_
  commentId: M:LibSodium.CryptoStreamSalsa20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name.vb: Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
  fullName: LibSodium.CryptoStreamSalsa20.Decrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, ulong)
  fullName.vb: LibSodium.CryptoStreamSalsa20.Decrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), ULong)
  nameWithType: CryptoStreamSalsa20.Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  nameWithType.vb: CryptoStreamSalsa20.Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
- uid: LibSodium.CryptoStreamSalsa20.Decrypt*
  name: Decrypt
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_Decrypt_
  commentId: Overload:LibSodium.CryptoStreamSalsa20.Decrypt
  isSpec: "True"
  fullName: LibSodium.CryptoStreamSalsa20.Decrypt
  nameWithType: CryptoStreamSalsa20.Decrypt
- uid: LibSodium.CryptoStreamSalsa20.DecryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name: DecryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_DecryptAsync_System_ReadOnlyMemory_System_Byte__System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoStreamSalsa20.DecryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name.vb: DecryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
  fullName: LibSodium.CryptoStreamSalsa20.DecryptAsync(System.ReadOnlyMemory<byte>, System.ReadOnlyMemory<byte>, System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoStreamSalsa20.DecryptAsync(System.ReadOnlyMemory(Of Byte), System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoStreamSalsa20.DecryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  nameWithType.vb: CryptoStreamSalsa20.DecryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
- uid: LibSodium.CryptoStreamSalsa20.DecryptAsync*
  name: DecryptAsync
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_DecryptAsync_
  commentId: Overload:LibSodium.CryptoStreamSalsa20.DecryptAsync
  isSpec: "True"
  fullName: LibSodium.CryptoStreamSalsa20.DecryptAsync
  nameWithType: CryptoStreamSalsa20.DecryptAsync
- uid: LibSodium.CryptoStreamSalsa20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name: Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_Encrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_IO_Stream_System_IO_Stream_
  commentId: M:LibSodium.CryptoStreamSalsa20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name.vb: Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
  fullName: LibSodium.CryptoStreamSalsa20.Encrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.IO.Stream, System.IO.Stream)
  fullName.vb: LibSodium.CryptoStreamSalsa20.Encrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.IO.Stream, System.IO.Stream)
  nameWithType: CryptoStreamSalsa20.Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  nameWithType.vb: CryptoStreamSalsa20.Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
- uid: LibSodium.CryptoStreamSalsa20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name: Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_Encrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_UInt64_
  commentId: M:LibSodium.CryptoStreamSalsa20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name.vb: Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
  fullName: LibSodium.CryptoStreamSalsa20.Encrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, ulong)
  fullName.vb: LibSodium.CryptoStreamSalsa20.Encrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), ULong)
  nameWithType: CryptoStreamSalsa20.Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  nameWithType.vb: CryptoStreamSalsa20.Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
- uid: LibSodium.CryptoStreamSalsa20.Encrypt*
  name: Encrypt
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_Encrypt_
  commentId: Overload:LibSodium.CryptoStreamSalsa20.Encrypt
  isSpec: "True"
  fullName: LibSodium.CryptoStreamSalsa20.Encrypt
  nameWithType: CryptoStreamSalsa20.Encrypt
- uid: LibSodium.CryptoStreamSalsa20.EncryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name: EncryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_EncryptAsync_System_ReadOnlyMemory_System_Byte__System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoStreamSalsa20.EncryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name.vb: EncryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
  fullName: LibSodium.CryptoStreamSalsa20.EncryptAsync(System.ReadOnlyMemory<byte>, System.ReadOnlyMemory<byte>, System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoStreamSalsa20.EncryptAsync(System.ReadOnlyMemory(Of Byte), System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoStreamSalsa20.EncryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  nameWithType.vb: CryptoStreamSalsa20.EncryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
- uid: LibSodium.CryptoStreamSalsa20.EncryptAsync*
  name: EncryptAsync
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_EncryptAsync_
  commentId: Overload:LibSodium.CryptoStreamSalsa20.EncryptAsync
  isSpec: "True"
  fullName: LibSodium.CryptoStreamSalsa20.EncryptAsync
  nameWithType: CryptoStreamSalsa20.EncryptAsync
- uid: LibSodium.CryptoStreamSalsa20.GenerateKeystream(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: GenerateKeystream(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_GenerateKeystream_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoStreamSalsa20.GenerateKeystream(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: GenerateKeystream(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoStreamSalsa20.GenerateKeystream(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoStreamSalsa20.GenerateKeystream(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoStreamSalsa20.GenerateKeystream(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoStreamSalsa20.GenerateKeystream(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoStreamSalsa20.GenerateKeystream*
  name: GenerateKeystream
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_GenerateKeystream_
  commentId: Overload:LibSodium.CryptoStreamSalsa20.GenerateKeystream
  isSpec: "True"
  fullName: LibSodium.CryptoStreamSalsa20.GenerateKeystream
  nameWithType: CryptoStreamSalsa20.GenerateKeystream
- uid: LibSodium.CryptoStreamSalsa20.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_KeyLen
  commentId: F:LibSodium.CryptoStreamSalsa20.KeyLen
  fullName: LibSodium.CryptoStreamSalsa20.KeyLen
  nameWithType: CryptoStreamSalsa20.KeyLen
- uid: LibSodium.CryptoStreamSalsa20.NonceLen
  name: NonceLen
  href: api/LibSodium.CryptoStreamSalsa20.html#LibSodium_CryptoStreamSalsa20_NonceLen
  commentId: F:LibSodium.CryptoStreamSalsa20.NonceLen
  fullName: LibSodium.CryptoStreamSalsa20.NonceLen
  nameWithType: CryptoStreamSalsa20.NonceLen
- uid: LibSodium.CryptoStreamXChaCha20
  name: CryptoStreamXChaCha20
  href: api/LibSodium.CryptoStreamXChaCha20.html
  commentId: T:LibSodium.CryptoStreamXChaCha20
  fullName: LibSodium.CryptoStreamXChaCha20
  nameWithType: CryptoStreamXChaCha20
- uid: LibSodium.CryptoStreamXChaCha20.BlockLen
  name: BlockLen
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_BlockLen
  commentId: F:LibSodium.CryptoStreamXChaCha20.BlockLen
  fullName: LibSodium.CryptoStreamXChaCha20.BlockLen
  nameWithType: CryptoStreamXChaCha20.BlockLen
- uid: LibSodium.CryptoStreamXChaCha20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name: Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_Decrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_IO_Stream_System_IO_Stream_
  commentId: M:LibSodium.CryptoStreamXChaCha20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name.vb: Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
  fullName: LibSodium.CryptoStreamXChaCha20.Decrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.IO.Stream, System.IO.Stream)
  fullName.vb: LibSodium.CryptoStreamXChaCha20.Decrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.IO.Stream, System.IO.Stream)
  nameWithType: CryptoStreamXChaCha20.Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  nameWithType.vb: CryptoStreamXChaCha20.Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
- uid: LibSodium.CryptoStreamXChaCha20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name: Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_Decrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_UInt64_
  commentId: M:LibSodium.CryptoStreamXChaCha20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name.vb: Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
  fullName: LibSodium.CryptoStreamXChaCha20.Decrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, ulong)
  fullName.vb: LibSodium.CryptoStreamXChaCha20.Decrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), ULong)
  nameWithType: CryptoStreamXChaCha20.Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  nameWithType.vb: CryptoStreamXChaCha20.Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
- uid: LibSodium.CryptoStreamXChaCha20.Decrypt*
  name: Decrypt
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_Decrypt_
  commentId: Overload:LibSodium.CryptoStreamXChaCha20.Decrypt
  isSpec: "True"
  fullName: LibSodium.CryptoStreamXChaCha20.Decrypt
  nameWithType: CryptoStreamXChaCha20.Decrypt
- uid: LibSodium.CryptoStreamXChaCha20.DecryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name: DecryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_DecryptAsync_System_ReadOnlyMemory_System_Byte__System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoStreamXChaCha20.DecryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name.vb: DecryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
  fullName: LibSodium.CryptoStreamXChaCha20.DecryptAsync(System.ReadOnlyMemory<byte>, System.ReadOnlyMemory<byte>, System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoStreamXChaCha20.DecryptAsync(System.ReadOnlyMemory(Of Byte), System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoStreamXChaCha20.DecryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  nameWithType.vb: CryptoStreamXChaCha20.DecryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
- uid: LibSodium.CryptoStreamXChaCha20.DecryptAsync*
  name: DecryptAsync
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_DecryptAsync_
  commentId: Overload:LibSodium.CryptoStreamXChaCha20.DecryptAsync
  isSpec: "True"
  fullName: LibSodium.CryptoStreamXChaCha20.DecryptAsync
  nameWithType: CryptoStreamXChaCha20.DecryptAsync
- uid: LibSodium.CryptoStreamXChaCha20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name: Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_Encrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_IO_Stream_System_IO_Stream_
  commentId: M:LibSodium.CryptoStreamXChaCha20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name.vb: Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
  fullName: LibSodium.CryptoStreamXChaCha20.Encrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.IO.Stream, System.IO.Stream)
  fullName.vb: LibSodium.CryptoStreamXChaCha20.Encrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.IO.Stream, System.IO.Stream)
  nameWithType: CryptoStreamXChaCha20.Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  nameWithType.vb: CryptoStreamXChaCha20.Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
- uid: LibSodium.CryptoStreamXChaCha20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name: Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_Encrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_UInt64_
  commentId: M:LibSodium.CryptoStreamXChaCha20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name.vb: Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
  fullName: LibSodium.CryptoStreamXChaCha20.Encrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, ulong)
  fullName.vb: LibSodium.CryptoStreamXChaCha20.Encrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), ULong)
  nameWithType: CryptoStreamXChaCha20.Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  nameWithType.vb: CryptoStreamXChaCha20.Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
- uid: LibSodium.CryptoStreamXChaCha20.Encrypt*
  name: Encrypt
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_Encrypt_
  commentId: Overload:LibSodium.CryptoStreamXChaCha20.Encrypt
  isSpec: "True"
  fullName: LibSodium.CryptoStreamXChaCha20.Encrypt
  nameWithType: CryptoStreamXChaCha20.Encrypt
- uid: LibSodium.CryptoStreamXChaCha20.EncryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name: EncryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_EncryptAsync_System_ReadOnlyMemory_System_Byte__System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoStreamXChaCha20.EncryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name.vb: EncryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
  fullName: LibSodium.CryptoStreamXChaCha20.EncryptAsync(System.ReadOnlyMemory<byte>, System.ReadOnlyMemory<byte>, System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoStreamXChaCha20.EncryptAsync(System.ReadOnlyMemory(Of Byte), System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoStreamXChaCha20.EncryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  nameWithType.vb: CryptoStreamXChaCha20.EncryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
- uid: LibSodium.CryptoStreamXChaCha20.EncryptAsync*
  name: EncryptAsync
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_EncryptAsync_
  commentId: Overload:LibSodium.CryptoStreamXChaCha20.EncryptAsync
  isSpec: "True"
  fullName: LibSodium.CryptoStreamXChaCha20.EncryptAsync
  nameWithType: CryptoStreamXChaCha20.EncryptAsync
- uid: LibSodium.CryptoStreamXChaCha20.GenerateKeystream(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: GenerateKeystream(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_GenerateKeystream_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoStreamXChaCha20.GenerateKeystream(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: GenerateKeystream(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoStreamXChaCha20.GenerateKeystream(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoStreamXChaCha20.GenerateKeystream(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoStreamXChaCha20.GenerateKeystream(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoStreamXChaCha20.GenerateKeystream(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoStreamXChaCha20.GenerateKeystream*
  name: GenerateKeystream
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_GenerateKeystream_
  commentId: Overload:LibSodium.CryptoStreamXChaCha20.GenerateKeystream
  isSpec: "True"
  fullName: LibSodium.CryptoStreamXChaCha20.GenerateKeystream
  nameWithType: CryptoStreamXChaCha20.GenerateKeystream
- uid: LibSodium.CryptoStreamXChaCha20.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_KeyLen
  commentId: F:LibSodium.CryptoStreamXChaCha20.KeyLen
  fullName: LibSodium.CryptoStreamXChaCha20.KeyLen
  nameWithType: CryptoStreamXChaCha20.KeyLen
- uid: LibSodium.CryptoStreamXChaCha20.NonceLen
  name: NonceLen
  href: api/LibSodium.CryptoStreamXChaCha20.html#LibSodium_CryptoStreamXChaCha20_NonceLen
  commentId: F:LibSodium.CryptoStreamXChaCha20.NonceLen
  fullName: LibSodium.CryptoStreamXChaCha20.NonceLen
  nameWithType: CryptoStreamXChaCha20.NonceLen
- uid: LibSodium.CryptoStreamXSalsa20
  name: CryptoStreamXSalsa20
  href: api/LibSodium.CryptoStreamXSalsa20.html
  commentId: T:LibSodium.CryptoStreamXSalsa20
  fullName: LibSodium.CryptoStreamXSalsa20
  nameWithType: CryptoStreamXSalsa20
- uid: LibSodium.CryptoStreamXSalsa20.BlockLen
  name: BlockLen
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_BlockLen
  commentId: F:LibSodium.CryptoStreamXSalsa20.BlockLen
  fullName: LibSodium.CryptoStreamXSalsa20.BlockLen
  nameWithType: CryptoStreamXSalsa20.BlockLen
- uid: LibSodium.CryptoStreamXSalsa20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name: Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_Decrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_IO_Stream_System_IO_Stream_
  commentId: M:LibSodium.CryptoStreamXSalsa20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name.vb: Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
  fullName: LibSodium.CryptoStreamXSalsa20.Decrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.IO.Stream, System.IO.Stream)
  fullName.vb: LibSodium.CryptoStreamXSalsa20.Decrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.IO.Stream, System.IO.Stream)
  nameWithType: CryptoStreamXSalsa20.Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  nameWithType.vb: CryptoStreamXSalsa20.Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
- uid: LibSodium.CryptoStreamXSalsa20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name: Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_Decrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_UInt64_
  commentId: M:LibSodium.CryptoStreamXSalsa20.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name.vb: Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
  fullName: LibSodium.CryptoStreamXSalsa20.Decrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, ulong)
  fullName.vb: LibSodium.CryptoStreamXSalsa20.Decrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), ULong)
  nameWithType: CryptoStreamXSalsa20.Decrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  nameWithType.vb: CryptoStreamXSalsa20.Decrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
- uid: LibSodium.CryptoStreamXSalsa20.Decrypt*
  name: Decrypt
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_Decrypt_
  commentId: Overload:LibSodium.CryptoStreamXSalsa20.Decrypt
  isSpec: "True"
  fullName: LibSodium.CryptoStreamXSalsa20.Decrypt
  nameWithType: CryptoStreamXSalsa20.Decrypt
- uid: LibSodium.CryptoStreamXSalsa20.DecryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name: DecryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_DecryptAsync_System_ReadOnlyMemory_System_Byte__System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoStreamXSalsa20.DecryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name.vb: DecryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
  fullName: LibSodium.CryptoStreamXSalsa20.DecryptAsync(System.ReadOnlyMemory<byte>, System.ReadOnlyMemory<byte>, System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoStreamXSalsa20.DecryptAsync(System.ReadOnlyMemory(Of Byte), System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoStreamXSalsa20.DecryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  nameWithType.vb: CryptoStreamXSalsa20.DecryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
- uid: LibSodium.CryptoStreamXSalsa20.DecryptAsync*
  name: DecryptAsync
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_DecryptAsync_
  commentId: Overload:LibSodium.CryptoStreamXSalsa20.DecryptAsync
  isSpec: "True"
  fullName: LibSodium.CryptoStreamXSalsa20.DecryptAsync
  nameWithType: CryptoStreamXSalsa20.DecryptAsync
- uid: LibSodium.CryptoStreamXSalsa20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name: Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_Encrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_IO_Stream_System_IO_Stream_
  commentId: M:LibSodium.CryptoStreamXSalsa20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.IO.Stream,System.IO.Stream)
  name.vb: Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
  fullName: LibSodium.CryptoStreamXSalsa20.Encrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.IO.Stream, System.IO.Stream)
  fullName.vb: LibSodium.CryptoStreamXSalsa20.Encrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.IO.Stream, System.IO.Stream)
  nameWithType: CryptoStreamXSalsa20.Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Stream, Stream)
  nameWithType.vb: CryptoStreamXSalsa20.Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Stream, Stream)
- uid: LibSodium.CryptoStreamXSalsa20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name: Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_Encrypt_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_UInt64_
  commentId: M:LibSodium.CryptoStreamXSalsa20.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.UInt64)
  name.vb: Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
  fullName: LibSodium.CryptoStreamXSalsa20.Encrypt(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, ulong)
  fullName.vb: LibSodium.CryptoStreamXSalsa20.Encrypt(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), ULong)
  nameWithType: CryptoStreamXSalsa20.Encrypt(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ulong)
  nameWithType.vb: CryptoStreamXSalsa20.Encrypt(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ULong)
- uid: LibSodium.CryptoStreamXSalsa20.Encrypt*
  name: Encrypt
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_Encrypt_
  commentId: Overload:LibSodium.CryptoStreamXSalsa20.Encrypt
  isSpec: "True"
  fullName: LibSodium.CryptoStreamXSalsa20.Encrypt
  nameWithType: CryptoStreamXSalsa20.Encrypt
- uid: LibSodium.CryptoStreamXSalsa20.EncryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name: EncryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_EncryptAsync_System_ReadOnlyMemory_System_Byte__System_ReadOnlyMemory_System_Byte__System_IO_Stream_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:LibSodium.CryptoStreamXSalsa20.EncryptAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.IO.Stream,System.IO.Stream,System.Threading.CancellationToken)
  name.vb: EncryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
  fullName: LibSodium.CryptoStreamXSalsa20.EncryptAsync(System.ReadOnlyMemory<byte>, System.ReadOnlyMemory<byte>, System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: LibSodium.CryptoStreamXSalsa20.EncryptAsync(System.ReadOnlyMemory(Of Byte), System.ReadOnlyMemory(Of Byte), System.IO.Stream, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: CryptoStreamXSalsa20.EncryptAsync(ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, Stream, Stream, CancellationToken)
  nameWithType.vb: CryptoStreamXSalsa20.EncryptAsync(ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), Stream, Stream, CancellationToken)
- uid: LibSodium.CryptoStreamXSalsa20.EncryptAsync*
  name: EncryptAsync
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_EncryptAsync_
  commentId: Overload:LibSodium.CryptoStreamXSalsa20.EncryptAsync
  isSpec: "True"
  fullName: LibSodium.CryptoStreamXSalsa20.EncryptAsync
  nameWithType: CryptoStreamXSalsa20.EncryptAsync
- uid: LibSodium.CryptoStreamXSalsa20.GenerateKeystream(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: GenerateKeystream(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_GenerateKeystream_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.CryptoStreamXSalsa20.GenerateKeystream(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: GenerateKeystream(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.CryptoStreamXSalsa20.GenerateKeystream(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.CryptoStreamXSalsa20.GenerateKeystream(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: CryptoStreamXSalsa20.GenerateKeystream(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: CryptoStreamXSalsa20.GenerateKeystream(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.CryptoStreamXSalsa20.GenerateKeystream*
  name: GenerateKeystream
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_GenerateKeystream_
  commentId: Overload:LibSodium.CryptoStreamXSalsa20.GenerateKeystream
  isSpec: "True"
  fullName: LibSodium.CryptoStreamXSalsa20.GenerateKeystream
  nameWithType: CryptoStreamXSalsa20.GenerateKeystream
- uid: LibSodium.CryptoStreamXSalsa20.KeyLen
  name: KeyLen
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_KeyLen
  commentId: F:LibSodium.CryptoStreamXSalsa20.KeyLen
  fullName: LibSodium.CryptoStreamXSalsa20.KeyLen
  nameWithType: CryptoStreamXSalsa20.KeyLen
- uid: LibSodium.CryptoStreamXSalsa20.NonceLen
  name: NonceLen
  href: api/LibSodium.CryptoStreamXSalsa20.html#LibSodium_CryptoStreamXSalsa20_NonceLen
  commentId: F:LibSodium.CryptoStreamXSalsa20.NonceLen
  fullName: LibSodium.CryptoStreamXSalsa20.NonceLen
  nameWithType: CryptoStreamXSalsa20.NonceLen
- uid: LibSodium.HKDF
  name: HKDF
  href: api/LibSodium.HKDF.html
  commentId: T:LibSodium.HKDF
  fullName: LibSodium.HKDF
  nameWithType: HKDF
- uid: LibSodium.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName,System.IO.Stream,System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: DeriveKey(HashAlgorithmName, Stream, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_DeriveKey_System_Security_Cryptography_HashAlgorithmName_System_IO_Stream_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName,System.IO.Stream,System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: DeriveKey(HashAlgorithmName, Stream, Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName, System.IO.Stream, System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName, System.IO.Stream, System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: HKDF.DeriveKey(HashAlgorithmName, Stream, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: HKDF.DeriveKey(HashAlgorithmName, Stream, Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: DeriveKey(HashAlgorithmName, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_DeriveKey_System_Security_Cryptography_HashAlgorithmName_System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: DeriveKey(HashAlgorithmName, ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName, System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName, System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: HKDF.DeriveKey(HashAlgorithmName, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: HKDF.DeriveKey(HashAlgorithmName, ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.HKDF.DeriveKey*
  name: DeriveKey
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_DeriveKey_
  commentId: Overload:LibSodium.HKDF.DeriveKey
  isSpec: "True"
  fullName: LibSodium.HKDF.DeriveKey
  nameWithType: HKDF.DeriveKey
- uid: LibSodium.HKDF.DeriveKeyAsync(System.Security.Cryptography.HashAlgorithmName,System.IO.Stream,System.Memory{System.Byte},System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: DeriveKeyAsync(HashAlgorithmName, Stream, Memory<byte>, ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, CancellationToken)
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_DeriveKeyAsync_System_Security_Cryptography_HashAlgorithmName_System_IO_Stream_System_Memory_System_Byte__System_ReadOnlyMemory_System_Byte__System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.HKDF.DeriveKeyAsync(System.Security.Cryptography.HashAlgorithmName,System.IO.Stream,System.Memory{System.Byte},System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: DeriveKeyAsync(HashAlgorithmName, Stream, Memory(Of Byte), ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: LibSodium.HKDF.DeriveKeyAsync(System.Security.Cryptography.HashAlgorithmName, System.IO.Stream, System.Memory<byte>, System.ReadOnlyMemory<byte>, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.HKDF.DeriveKeyAsync(System.Security.Cryptography.HashAlgorithmName, System.IO.Stream, System.Memory(Of Byte), System.ReadOnlyMemory(Of Byte), System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: HKDF.DeriveKeyAsync(HashAlgorithmName, Stream, Memory<byte>, ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: HKDF.DeriveKeyAsync(HashAlgorithmName, Stream, Memory(Of Byte), ReadOnlyMemory(Of Byte), ReadOnlyMemory(Of Byte), CancellationToken)
- uid: LibSodium.HKDF.DeriveKeyAsync*
  name: DeriveKeyAsync
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_DeriveKeyAsync_
  commentId: Overload:LibSodium.HKDF.DeriveKeyAsync
  isSpec: "True"
  fullName: LibSodium.HKDF.DeriveKeyAsync
  nameWithType: HKDF.DeriveKeyAsync
- uid: LibSodium.HKDF.Expand(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Expand(HashAlgorithmName, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_Expand_System_Security_Cryptography_HashAlgorithmName_System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.HKDF.Expand(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Expand(HashAlgorithmName, ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.HKDF.Expand(System.Security.Cryptography.HashAlgorithmName, System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.HKDF.Expand(System.Security.Cryptography.HashAlgorithmName, System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: HKDF.Expand(HashAlgorithmName, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: HKDF.Expand(HashAlgorithmName, ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.HKDF.Expand*
  name: Expand
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_Expand_
  commentId: Overload:LibSodium.HKDF.Expand
  isSpec: "True"
  fullName: LibSodium.HKDF.Expand
  nameWithType: HKDF.Expand
- uid: LibSodium.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName,System.IO.Stream,System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name: Extract(HashAlgorithmName, Stream, ReadOnlySpan<byte>, Span<byte>)
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_Extract_System_Security_Cryptography_HashAlgorithmName_System_IO_Stream_System_ReadOnlySpan_System_Byte__System_Span_System_Byte__
  commentId: M:LibSodium.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName,System.IO.Stream,System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name.vb: Extract(HashAlgorithmName, Stream, ReadOnlySpan(Of Byte), Span(Of Byte))
  fullName: LibSodium.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName, System.IO.Stream, System.ReadOnlySpan<byte>, System.Span<byte>)
  fullName.vb: LibSodium.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName, System.IO.Stream, System.ReadOnlySpan(Of Byte), System.Span(Of Byte))
  nameWithType: HKDF.Extract(HashAlgorithmName, Stream, ReadOnlySpan<byte>, Span<byte>)
  nameWithType.vb: HKDF.Extract(HashAlgorithmName, Stream, ReadOnlySpan(Of Byte), Span(Of Byte))
- uid: LibSodium.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name: Extract(HashAlgorithmName, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>)
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_Extract_System_Security_Cryptography_HashAlgorithmName_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__
  commentId: M:LibSodium.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  name.vb: Extract(HashAlgorithmName, ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte))
  fullName: LibSodium.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>)
  fullName.vb: LibSodium.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName, System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte))
  nameWithType: HKDF.Extract(HashAlgorithmName, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>)
  nameWithType.vb: HKDF.Extract(HashAlgorithmName, ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte))
- uid: LibSodium.HKDF.Extract*
  name: Extract
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_Extract_
  commentId: Overload:LibSodium.HKDF.Extract
  isSpec: "True"
  fullName: LibSodium.HKDF.Extract
  nameWithType: HKDF.Extract
- uid: LibSodium.HKDF.ExtractAsync(System.Security.Cryptography.HashAlgorithmName,System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Memory{System.Byte},System.Threading.CancellationToken)
  name: ExtractAsync(HashAlgorithmName, Stream, ReadOnlyMemory<byte>, Memory<byte>, CancellationToken)
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_ExtractAsync_System_Security_Cryptography_HashAlgorithmName_System_IO_Stream_System_ReadOnlyMemory_System_Byte__System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.HKDF.ExtractAsync(System.Security.Cryptography.HashAlgorithmName,System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: ExtractAsync(HashAlgorithmName, Stream, ReadOnlyMemory(Of Byte), Memory(Of Byte), CancellationToken)
  fullName: LibSodium.HKDF.ExtractAsync(System.Security.Cryptography.HashAlgorithmName, System.IO.Stream, System.ReadOnlyMemory<byte>, System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.HKDF.ExtractAsync(System.Security.Cryptography.HashAlgorithmName, System.IO.Stream, System.ReadOnlyMemory(Of Byte), System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: HKDF.ExtractAsync(HashAlgorithmName, Stream, ReadOnlyMemory<byte>, Memory<byte>, CancellationToken)
  nameWithType.vb: HKDF.ExtractAsync(HashAlgorithmName, Stream, ReadOnlyMemory(Of Byte), Memory(Of Byte), CancellationToken)
- uid: LibSodium.HKDF.ExtractAsync*
  name: ExtractAsync
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_ExtractAsync_
  commentId: Overload:LibSodium.HKDF.ExtractAsync
  isSpec: "True"
  fullName: LibSodium.HKDF.ExtractAsync
  nameWithType: HKDF.ExtractAsync
- uid: LibSodium.HKDF.MinOkmLen
  name: MinOkmLen
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_MinOkmLen
  commentId: F:LibSodium.HKDF.MinOkmLen
  fullName: LibSodium.HKDF.MinOkmLen
  nameWithType: HKDF.MinOkmLen
- uid: LibSodium.HKDF.Sha256MaxOkmLen
  name: Sha256MaxOkmLen
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_Sha256MaxOkmLen
  commentId: F:LibSodium.HKDF.Sha256MaxOkmLen
  fullName: LibSodium.HKDF.Sha256MaxOkmLen
  nameWithType: HKDF.Sha256MaxOkmLen
- uid: LibSodium.HKDF.Sha256PrkLen
  name: Sha256PrkLen
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_Sha256PrkLen
  commentId: F:LibSodium.HKDF.Sha256PrkLen
  fullName: LibSodium.HKDF.Sha256PrkLen
  nameWithType: HKDF.Sha256PrkLen
- uid: LibSodium.HKDF.Sha512MaxOkmLen
  name: Sha512MaxOkmLen
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_Sha512MaxOkmLen
  commentId: F:LibSodium.HKDF.Sha512MaxOkmLen
  fullName: LibSodium.HKDF.Sha512MaxOkmLen
  nameWithType: HKDF.Sha512MaxOkmLen
- uid: LibSodium.HKDF.Sha512PrkLen
  name: Sha512PrkLen
  href: api/LibSodium.HKDF.html#LibSodium_HKDF_Sha512PrkLen
  commentId: F:LibSodium.HKDF.Sha512PrkLen
  fullName: LibSodium.HKDF.Sha512PrkLen
  nameWithType: HKDF.Sha512PrkLen
- uid: LibSodium.HexEncoding
  name: HexEncoding
  href: api/LibSodium.HexEncoding.html
  commentId: T:LibSodium.HexEncoding
  fullName: LibSodium.HexEncoding
  nameWithType: HexEncoding
- uid: LibSodium.HexEncoding.BinToHex(System.ReadOnlySpan{System.Byte})
  name: BinToHex(ReadOnlySpan<byte>)
  href: api/LibSodium.HexEncoding.html#LibSodium_HexEncoding_BinToHex_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.HexEncoding.BinToHex(System.ReadOnlySpan{System.Byte})
  name.vb: BinToHex(ReadOnlySpan(Of Byte))
  fullName: LibSodium.HexEncoding.BinToHex(System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.HexEncoding.BinToHex(System.ReadOnlySpan(Of Byte))
  nameWithType: HexEncoding.BinToHex(ReadOnlySpan<byte>)
  nameWithType.vb: HexEncoding.BinToHex(ReadOnlySpan(Of Byte))
- uid: LibSodium.HexEncoding.BinToHex(System.ReadOnlySpan{System.Byte},System.Span{System.Char})
  name: BinToHex(ReadOnlySpan<byte>, Span<char>)
  href: api/LibSodium.HexEncoding.html#LibSodium_HexEncoding_BinToHex_System_ReadOnlySpan_System_Byte__System_Span_System_Char__
  commentId: M:LibSodium.HexEncoding.BinToHex(System.ReadOnlySpan{System.Byte},System.Span{System.Char})
  name.vb: BinToHex(ReadOnlySpan(Of Byte), Span(Of Char))
  fullName: LibSodium.HexEncoding.BinToHex(System.ReadOnlySpan<byte>, System.Span<char>)
  fullName.vb: LibSodium.HexEncoding.BinToHex(System.ReadOnlySpan(Of Byte), System.Span(Of Char))
  nameWithType: HexEncoding.BinToHex(ReadOnlySpan<byte>, Span<char>)
  nameWithType.vb: HexEncoding.BinToHex(ReadOnlySpan(Of Byte), Span(Of Char))
- uid: LibSodium.HexEncoding.BinToHex*
  name: BinToHex
  href: api/LibSodium.HexEncoding.html#LibSodium_HexEncoding_BinToHex_
  commentId: Overload:LibSodium.HexEncoding.BinToHex
  isSpec: "True"
  fullName: LibSodium.HexEncoding.BinToHex
  nameWithType: HexEncoding.BinToHex
- uid: LibSodium.HexEncoding.HexToBin(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.String)
  name: HexToBin(ReadOnlySpan<char>, Span<byte>, string?)
  href: api/LibSodium.HexEncoding.html#LibSodium_HexEncoding_HexToBin_System_ReadOnlySpan_System_Char__System_Span_System_Byte__System_String_
  commentId: M:LibSodium.HexEncoding.HexToBin(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.String)
  name.vb: HexToBin(ReadOnlySpan(Of Char), Span(Of Byte), String)
  fullName: LibSodium.HexEncoding.HexToBin(System.ReadOnlySpan<char>, System.Span<byte>, string?)
  fullName.vb: LibSodium.HexEncoding.HexToBin(System.ReadOnlySpan(Of Char), System.Span(Of Byte), String)
  nameWithType: HexEncoding.HexToBin(ReadOnlySpan<char>, Span<byte>, string?)
  nameWithType.vb: HexEncoding.HexToBin(ReadOnlySpan(Of Char), Span(Of Byte), String)
- uid: LibSodium.HexEncoding.HexToBin(System.String,System.Span{System.Byte},System.String)
  name: HexToBin(string, Span<byte>, string?)
  href: api/LibSodium.HexEncoding.html#LibSodium_HexEncoding_HexToBin_System_String_System_Span_System_Byte__System_String_
  commentId: M:LibSodium.HexEncoding.HexToBin(System.String,System.Span{System.Byte},System.String)
  name.vb: HexToBin(String, Span(Of Byte), String)
  fullName: LibSodium.HexEncoding.HexToBin(string, System.Span<byte>, string?)
  fullName.vb: LibSodium.HexEncoding.HexToBin(String, System.Span(Of Byte), String)
  nameWithType: HexEncoding.HexToBin(string, Span<byte>, string?)
  nameWithType.vb: HexEncoding.HexToBin(String, Span(Of Byte), String)
- uid: LibSodium.HexEncoding.HexToBin*
  name: HexToBin
  href: api/LibSodium.HexEncoding.html#LibSodium_HexEncoding_HexToBin_
  commentId: Overload:LibSodium.HexEncoding.HexToBin
  isSpec: "True"
  fullName: LibSodium.HexEncoding.HexToBin
  nameWithType: HexEncoding.HexToBin
- uid: LibSodium.ICryptoIncrementalHash
  name: ICryptoIncrementalHash
  href: api/LibSodium.ICryptoIncrementalHash.html
  commentId: T:LibSodium.ICryptoIncrementalHash
  fullName: LibSodium.ICryptoIncrementalHash
  nameWithType: ICryptoIncrementalHash
- uid: LibSodium.ICryptoIncrementalHash.Final(System.Span{System.Byte})
  name: Final(Span<byte>)
  href: api/LibSodium.ICryptoIncrementalHash.html#LibSodium_ICryptoIncrementalHash_Final_System_Span_System_Byte__
  commentId: M:LibSodium.ICryptoIncrementalHash.Final(System.Span{System.Byte})
  name.vb: Final(Span(Of Byte))
  fullName: LibSodium.ICryptoIncrementalHash.Final(System.Span<byte>)
  fullName.vb: LibSodium.ICryptoIncrementalHash.Final(System.Span(Of Byte))
  nameWithType: ICryptoIncrementalHash.Final(Span<byte>)
  nameWithType.vb: ICryptoIncrementalHash.Final(Span(Of Byte))
- uid: LibSodium.ICryptoIncrementalHash.Final*
  name: Final
  href: api/LibSodium.ICryptoIncrementalHash.html#LibSodium_ICryptoIncrementalHash_Final_
  commentId: Overload:LibSodium.ICryptoIncrementalHash.Final
  isSpec: "True"
  fullName: LibSodium.ICryptoIncrementalHash.Final
  nameWithType: ICryptoIncrementalHash.Final
- uid: LibSodium.ICryptoIncrementalHash.Update(System.ReadOnlySpan{System.Byte})
  name: Update(ReadOnlySpan<byte>)
  href: api/LibSodium.ICryptoIncrementalHash.html#LibSodium_ICryptoIncrementalHash_Update_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.ICryptoIncrementalHash.Update(System.ReadOnlySpan{System.Byte})
  name.vb: Update(ReadOnlySpan(Of Byte))
  fullName: LibSodium.ICryptoIncrementalHash.Update(System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.ICryptoIncrementalHash.Update(System.ReadOnlySpan(Of Byte))
  nameWithType: ICryptoIncrementalHash.Update(ReadOnlySpan<byte>)
  nameWithType.vb: ICryptoIncrementalHash.Update(ReadOnlySpan(Of Byte))
- uid: LibSodium.ICryptoIncrementalHash.Update*
  name: Update
  href: api/LibSodium.ICryptoIncrementalHash.html#LibSodium_ICryptoIncrementalHash_Update_
  commentId: Overload:LibSodium.ICryptoIncrementalHash.Update
  isSpec: "True"
  fullName: LibSodium.ICryptoIncrementalHash.Update
  nameWithType: ICryptoIncrementalHash.Update
- uid: LibSodium.LibSodiumException
  name: LibSodiumException
  href: api/LibSodium.LibSodiumException.html
  commentId: T:LibSodium.LibSodiumException
  fullName: LibSodium.LibSodiumException
  nameWithType: LibSodiumException
- uid: LibSodium.LibSodiumException.#ctor
  name: LibSodiumException()
  href: api/LibSodium.LibSodiumException.html#LibSodium_LibSodiumException__ctor
  commentId: M:LibSodium.LibSodiumException.#ctor
  name.vb: New()
  fullName: LibSodium.LibSodiumException.LibSodiumException()
  fullName.vb: LibSodium.LibSodiumException.New()
  nameWithType: LibSodiumException.LibSodiumException()
  nameWithType.vb: LibSodiumException.New()
- uid: LibSodium.LibSodiumException.#ctor(System.String)
  name: LibSodiumException(string?)
  href: api/LibSodium.LibSodiumException.html#LibSodium_LibSodiumException__ctor_System_String_
  commentId: M:LibSodium.LibSodiumException.#ctor(System.String)
  name.vb: New(String)
  fullName: LibSodium.LibSodiumException.LibSodiumException(string?)
  fullName.vb: LibSodium.LibSodiumException.New(String)
  nameWithType: LibSodiumException.LibSodiumException(string?)
  nameWithType.vb: LibSodiumException.New(String)
- uid: LibSodium.LibSodiumException.#ctor(System.String,System.Exception)
  name: LibSodiumException(string?, Exception?)
  href: api/LibSodium.LibSodiumException.html#LibSodium_LibSodiumException__ctor_System_String_System_Exception_
  commentId: M:LibSodium.LibSodiumException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: LibSodium.LibSodiumException.LibSodiumException(string?, System.Exception?)
  fullName.vb: LibSodium.LibSodiumException.New(String, System.Exception)
  nameWithType: LibSodiumException.LibSodiumException(string?, Exception?)
  nameWithType.vb: LibSodiumException.New(String, Exception)
- uid: LibSodium.LibSodiumException.#ctor*
  name: LibSodiumException
  href: api/LibSodium.LibSodiumException.html#LibSodium_LibSodiumException__ctor_
  commentId: Overload:LibSodium.LibSodiumException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: LibSodium.LibSodiumException.LibSodiumException
  fullName.vb: LibSodium.LibSodiumException.New
  nameWithType: LibSodiumException.LibSodiumException
  nameWithType.vb: LibSodiumException.New
- uid: LibSodium.LibraryInitializer
  name: LibraryInitializer
  href: api/LibSodium.LibraryInitializer.html
  commentId: T:LibSodium.LibraryInitializer
  fullName: LibSodium.LibraryInitializer
  nameWithType: LibraryInitializer
- uid: LibSodium.LibraryInitializer.EnsureInitialized
  name: EnsureInitialized()
  href: api/LibSodium.LibraryInitializer.html#LibSodium_LibraryInitializer_EnsureInitialized
  commentId: M:LibSodium.LibraryInitializer.EnsureInitialized
  fullName: LibSodium.LibraryInitializer.EnsureInitialized()
  nameWithType: LibraryInitializer.EnsureInitialized()
- uid: LibSodium.LibraryInitializer.EnsureInitialized*
  name: EnsureInitialized
  href: api/LibSodium.LibraryInitializer.html#LibSodium_LibraryInitializer_EnsureInitialized_
  commentId: Overload:LibSodium.LibraryInitializer.EnsureInitialized
  isSpec: "True"
  fullName: LibSodium.LibraryInitializer.EnsureInitialized
  nameWithType: LibraryInitializer.EnsureInitialized
- uid: LibSodium.LibraryInitializer.IsInitialized
  name: IsInitialized
  href: api/LibSodium.LibraryInitializer.html#LibSodium_LibraryInitializer_IsInitialized
  commentId: P:LibSodium.LibraryInitializer.IsInitialized
  fullName: LibSodium.LibraryInitializer.IsInitialized
  nameWithType: LibraryInitializer.IsInitialized
- uid: LibSodium.LibraryInitializer.IsInitialized*
  name: IsInitialized
  href: api/LibSodium.LibraryInitializer.html#LibSodium_LibraryInitializer_IsInitialized_
  commentId: Overload:LibSodium.LibraryInitializer.IsInitialized
  isSpec: "True"
  fullName: LibSodium.LibraryInitializer.IsInitialized
  nameWithType: LibraryInitializer.IsInitialized
- uid: LibSodium.LibraryVersion
  name: LibraryVersion
  href: api/LibSodium.LibraryVersion.html
  commentId: T:LibSodium.LibraryVersion
  fullName: LibSodium.LibraryVersion
  nameWithType: LibraryVersion
- uid: LibSodium.LibraryVersion.GetMajor
  name: GetMajor()
  href: api/LibSodium.LibraryVersion.html#LibSodium_LibraryVersion_GetMajor
  commentId: M:LibSodium.LibraryVersion.GetMajor
  fullName: LibSodium.LibraryVersion.GetMajor()
  nameWithType: LibraryVersion.GetMajor()
- uid: LibSodium.LibraryVersion.GetMajor*
  name: GetMajor
  href: api/LibSodium.LibraryVersion.html#LibSodium_LibraryVersion_GetMajor_
  commentId: Overload:LibSodium.LibraryVersion.GetMajor
  isSpec: "True"
  fullName: LibSodium.LibraryVersion.GetMajor
  nameWithType: LibraryVersion.GetMajor
- uid: LibSodium.LibraryVersion.GetMinor
  name: GetMinor()
  href: api/LibSodium.LibraryVersion.html#LibSodium_LibraryVersion_GetMinor
  commentId: M:LibSodium.LibraryVersion.GetMinor
  fullName: LibSodium.LibraryVersion.GetMinor()
  nameWithType: LibraryVersion.GetMinor()
- uid: LibSodium.LibraryVersion.GetMinor*
  name: GetMinor
  href: api/LibSodium.LibraryVersion.html#LibSodium_LibraryVersion_GetMinor_
  commentId: Overload:LibSodium.LibraryVersion.GetMinor
  isSpec: "True"
  fullName: LibSodium.LibraryVersion.GetMinor
  nameWithType: LibraryVersion.GetMinor
- uid: LibSodium.LibraryVersion.GetString
  name: GetString()
  href: api/LibSodium.LibraryVersion.html#LibSodium_LibraryVersion_GetString
  commentId: M:LibSodium.LibraryVersion.GetString
  fullName: LibSodium.LibraryVersion.GetString()
  nameWithType: LibraryVersion.GetString()
- uid: LibSodium.LibraryVersion.GetString*
  name: GetString
  href: api/LibSodium.LibraryVersion.html#LibSodium_LibraryVersion_GetString_
  commentId: Overload:LibSodium.LibraryVersion.GetString
  isSpec: "True"
  fullName: LibSodium.LibraryVersion.GetString
  nameWithType: LibraryVersion.GetString
- uid: LibSodium.PasswordHashArgonAlgorithm
  name: PasswordHashArgonAlgorithm
  href: api/LibSodium.PasswordHashArgonAlgorithm.html
  commentId: T:LibSodium.PasswordHashArgonAlgorithm
  fullName: LibSodium.PasswordHashArgonAlgorithm
  nameWithType: PasswordHashArgonAlgorithm
- uid: LibSodium.PasswordHashArgonAlgorithm.Argon2i13
  name: Argon2i13
  href: api/LibSodium.PasswordHashArgonAlgorithm.html#LibSodium_PasswordHashArgonAlgorithm_Argon2i13
  commentId: F:LibSodium.PasswordHashArgonAlgorithm.Argon2i13
  fullName: LibSodium.PasswordHashArgonAlgorithm.Argon2i13
  nameWithType: PasswordHashArgonAlgorithm.Argon2i13
- uid: LibSodium.PasswordHashArgonAlgorithm.Argon2id13
  name: Argon2id13
  href: api/LibSodium.PasswordHashArgonAlgorithm.html#LibSodium_PasswordHashArgonAlgorithm_Argon2id13
  commentId: F:LibSodium.PasswordHashArgonAlgorithm.Argon2id13
  fullName: LibSodium.PasswordHashArgonAlgorithm.Argon2id13
  nameWithType: PasswordHashArgonAlgorithm.Argon2id13
- uid: LibSodium.RandomGenerator
  name: RandomGenerator
  href: api/LibSodium.RandomGenerator.html
  commentId: T:LibSodium.RandomGenerator
  fullName: LibSodium.RandomGenerator
  nameWithType: RandomGenerator
- uid: LibSodium.RandomGenerator.Close
  name: Close()
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_Close
  commentId: M:LibSodium.RandomGenerator.Close
  fullName: LibSodium.RandomGenerator.Close()
  nameWithType: RandomGenerator.Close()
- uid: LibSodium.RandomGenerator.Close*
  name: Close
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_Close_
  commentId: Overload:LibSodium.RandomGenerator.Close
  isSpec: "True"
  fullName: LibSodium.RandomGenerator.Close
  nameWithType: RandomGenerator.Close
- uid: LibSodium.RandomGenerator.Fill(System.Span{System.Byte})
  name: Fill(Span<byte>)
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_Fill_System_Span_System_Byte__
  commentId: M:LibSodium.RandomGenerator.Fill(System.Span{System.Byte})
  name.vb: Fill(Span(Of Byte))
  fullName: LibSodium.RandomGenerator.Fill(System.Span<byte>)
  fullName.vb: LibSodium.RandomGenerator.Fill(System.Span(Of Byte))
  nameWithType: RandomGenerator.Fill(Span<byte>)
  nameWithType.vb: RandomGenerator.Fill(Span(Of Byte))
- uid: LibSodium.RandomGenerator.Fill*
  name: Fill
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_Fill_
  commentId: Overload:LibSodium.RandomGenerator.Fill
  isSpec: "True"
  fullName: LibSodium.RandomGenerator.Fill
  nameWithType: RandomGenerator.Fill
- uid: LibSodium.RandomGenerator.FillDeterministic(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: FillDeterministic(Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_FillDeterministic_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.RandomGenerator.FillDeterministic(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: FillDeterministic(Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.RandomGenerator.FillDeterministic(System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.RandomGenerator.FillDeterministic(System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: RandomGenerator.FillDeterministic(Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: RandomGenerator.FillDeterministic(Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.RandomGenerator.FillDeterministic*
  name: FillDeterministic
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_FillDeterministic_
  commentId: Overload:LibSodium.RandomGenerator.FillDeterministic
  isSpec: "True"
  fullName: LibSodium.RandomGenerator.FillDeterministic
  nameWithType: RandomGenerator.FillDeterministic
- uid: LibSodium.RandomGenerator.GetUInt32
  name: GetUInt32()
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_GetUInt32
  commentId: M:LibSodium.RandomGenerator.GetUInt32
  fullName: LibSodium.RandomGenerator.GetUInt32()
  nameWithType: RandomGenerator.GetUInt32()
- uid: LibSodium.RandomGenerator.GetUInt32(System.UInt32)
  name: GetUInt32(uint)
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_GetUInt32_System_UInt32_
  commentId: M:LibSodium.RandomGenerator.GetUInt32(System.UInt32)
  name.vb: GetUInt32(UInteger)
  fullName: LibSodium.RandomGenerator.GetUInt32(uint)
  fullName.vb: LibSodium.RandomGenerator.GetUInt32(UInteger)
  nameWithType: RandomGenerator.GetUInt32(uint)
  nameWithType.vb: RandomGenerator.GetUInt32(UInteger)
- uid: LibSodium.RandomGenerator.GetUInt32*
  name: GetUInt32
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_GetUInt32_
  commentId: Overload:LibSodium.RandomGenerator.GetUInt32
  isSpec: "True"
  fullName: LibSodium.RandomGenerator.GetUInt32
  nameWithType: RandomGenerator.GetUInt32
- uid: LibSodium.RandomGenerator.SeedLen
  name: SeedLen
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_SeedLen
  commentId: F:LibSodium.RandomGenerator.SeedLen
  fullName: LibSodium.RandomGenerator.SeedLen
  nameWithType: RandomGenerator.SeedLen
- uid: LibSodium.RandomGenerator.Stir
  name: Stir()
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_Stir
  commentId: M:LibSodium.RandomGenerator.Stir
  fullName: LibSodium.RandomGenerator.Stir()
  nameWithType: RandomGenerator.Stir()
- uid: LibSodium.RandomGenerator.Stir*
  name: Stir
  href: api/LibSodium.RandomGenerator.html#LibSodium_RandomGenerator_Stir_
  commentId: Overload:LibSodium.RandomGenerator.Stir
  isSpec: "True"
  fullName: LibSodium.RandomGenerator.Stir
  nameWithType: RandomGenerator.Stir
- uid: LibSodium.SecretBox
  name: SecretBox
  href: api/LibSodium.SecretBox.html
  commentId: T:LibSodium.SecretBox
  fullName: LibSodium.SecretBox
  nameWithType: SecretBox
- uid: LibSodium.SecretBox.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.SecretBox.html#LibSodium_SecretBox_Decrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecretBox.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecretBox.Decrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecretBox.Decrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: SecretBox.Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: SecretBox.Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.SecretBox.Decrypt*
  name: Decrypt
  href: api/LibSodium.SecretBox.html#LibSodium_SecretBox_Decrypt_
  commentId: Overload:LibSodium.SecretBox.Decrypt
  isSpec: "True"
  fullName: LibSodium.SecretBox.Decrypt
  nameWithType: SecretBox.Decrypt
- uid: LibSodium.SecretBox.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.SecretBox.html#LibSodium_SecretBox_Encrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecretBox.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecretBox.Encrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecretBox.Encrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: SecretBox.Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: SecretBox.Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.SecretBox.Encrypt*
  name: Encrypt
  href: api/LibSodium.SecretBox.html#LibSodium_SecretBox_Encrypt_
  commentId: Overload:LibSodium.SecretBox.Encrypt
  isSpec: "True"
  fullName: LibSodium.SecretBox.Encrypt
  nameWithType: SecretBox.Encrypt
- uid: LibSodium.SecretBox.KeyLen
  name: KeyLen
  href: api/LibSodium.SecretBox.html#LibSodium_SecretBox_KeyLen
  commentId: F:LibSodium.SecretBox.KeyLen
  fullName: LibSodium.SecretBox.KeyLen
  nameWithType: SecretBox.KeyLen
- uid: LibSodium.SecretBox.MacLen
  name: MacLen
  href: api/LibSodium.SecretBox.html#LibSodium_SecretBox_MacLen
  commentId: F:LibSodium.SecretBox.MacLen
  fullName: LibSodium.SecretBox.MacLen
  nameWithType: SecretBox.MacLen
- uid: LibSodium.SecretBox.NonceLen
  name: NonceLen
  href: api/LibSodium.SecretBox.html#LibSodium_SecretBox_NonceLen
  commentId: F:LibSodium.SecretBox.NonceLen
  fullName: LibSodium.SecretBox.NonceLen
  nameWithType: SecretBox.NonceLen
- uid: LibSodium.SecretStream
  name: SecretStream
  href: api/LibSodium.SecretStream.html
  commentId: T:LibSodium.SecretStream
  fullName: LibSodium.SecretStream
  nameWithType: SecretStream
- uid: LibSodium.SecretStream.Decrypt(System.IO.Stream,System.IO.Stream,LibSodium.SecureMemory{System.Byte})
  name: Decrypt(Stream, Stream, SecureMemory<byte>)
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_Decrypt_System_IO_Stream_System_IO_Stream_LibSodium_SecureMemory_System_Byte__
  commentId: M:LibSodium.SecretStream.Decrypt(System.IO.Stream,System.IO.Stream,LibSodium.SecureMemory{System.Byte})
  name.vb: Decrypt(Stream, Stream, SecureMemory(Of Byte))
  fullName: LibSodium.SecretStream.Decrypt(System.IO.Stream, System.IO.Stream, LibSodium.SecureMemory<byte>)
  fullName.vb: LibSodium.SecretStream.Decrypt(System.IO.Stream, System.IO.Stream, LibSodium.SecureMemory(Of Byte))
  nameWithType: SecretStream.Decrypt(Stream, Stream, SecureMemory<byte>)
  nameWithType.vb: SecretStream.Decrypt(Stream, Stream, SecureMemory(Of Byte))
- uid: LibSodium.SecretStream.Decrypt(System.IO.Stream,System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name: Decrypt(Stream, Stream, ReadOnlySpan<byte>)
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_Decrypt_System_IO_Stream_System_IO_Stream_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecretStream.Decrypt(System.IO.Stream,System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name.vb: Decrypt(Stream, Stream, ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecretStream.Decrypt(System.IO.Stream, System.IO.Stream, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecretStream.Decrypt(System.IO.Stream, System.IO.Stream, System.ReadOnlySpan(Of Byte))
  nameWithType: SecretStream.Decrypt(Stream, Stream, ReadOnlySpan<byte>)
  nameWithType.vb: SecretStream.Decrypt(Stream, Stream, ReadOnlySpan(Of Byte))
- uid: LibSodium.SecretStream.Decrypt*
  name: Decrypt
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_Decrypt_
  commentId: Overload:LibSodium.SecretStream.Decrypt
  isSpec: "True"
  fullName: LibSodium.SecretStream.Decrypt
  nameWithType: SecretStream.Decrypt
- uid: LibSodium.SecretStream.DecryptAsync(System.IO.Stream,System.IO.Stream,LibSodium.SecureMemory{System.Byte},System.Threading.CancellationToken)
  name: DecryptAsync(Stream, Stream, SecureMemory<byte>, CancellationToken)
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_DecryptAsync_System_IO_Stream_System_IO_Stream_LibSodium_SecureMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.SecretStream.DecryptAsync(System.IO.Stream,System.IO.Stream,LibSodium.SecureMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: DecryptAsync(Stream, Stream, SecureMemory(Of Byte), CancellationToken)
  fullName: LibSodium.SecretStream.DecryptAsync(System.IO.Stream, System.IO.Stream, LibSodium.SecureMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.SecretStream.DecryptAsync(System.IO.Stream, System.IO.Stream, LibSodium.SecureMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: SecretStream.DecryptAsync(Stream, Stream, SecureMemory<byte>, CancellationToken)
  nameWithType.vb: SecretStream.DecryptAsync(Stream, Stream, SecureMemory(Of Byte), CancellationToken)
- uid: LibSodium.SecretStream.DecryptAsync(System.IO.Stream,System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: DecryptAsync(Stream, Stream, ReadOnlyMemory<byte>, CancellationToken)
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_DecryptAsync_System_IO_Stream_System_IO_Stream_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.SecretStream.DecryptAsync(System.IO.Stream,System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: DecryptAsync(Stream, Stream, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: LibSodium.SecretStream.DecryptAsync(System.IO.Stream, System.IO.Stream, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.SecretStream.DecryptAsync(System.IO.Stream, System.IO.Stream, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: SecretStream.DecryptAsync(Stream, Stream, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: SecretStream.DecryptAsync(Stream, Stream, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: LibSodium.SecretStream.DecryptAsync*
  name: DecryptAsync
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_DecryptAsync_
  commentId: Overload:LibSodium.SecretStream.DecryptAsync
  isSpec: "True"
  fullName: LibSodium.SecretStream.DecryptAsync
  nameWithType: SecretStream.DecryptAsync
- uid: LibSodium.SecretStream.Encrypt(System.IO.Stream,System.IO.Stream,LibSodium.SecureMemory{System.Byte})
  name: Encrypt(Stream, Stream, SecureMemory<byte>)
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_Encrypt_System_IO_Stream_System_IO_Stream_LibSodium_SecureMemory_System_Byte__
  commentId: M:LibSodium.SecretStream.Encrypt(System.IO.Stream,System.IO.Stream,LibSodium.SecureMemory{System.Byte})
  name.vb: Encrypt(Stream, Stream, SecureMemory(Of Byte))
  fullName: LibSodium.SecretStream.Encrypt(System.IO.Stream, System.IO.Stream, LibSodium.SecureMemory<byte>)
  fullName.vb: LibSodium.SecretStream.Encrypt(System.IO.Stream, System.IO.Stream, LibSodium.SecureMemory(Of Byte))
  nameWithType: SecretStream.Encrypt(Stream, Stream, SecureMemory<byte>)
  nameWithType.vb: SecretStream.Encrypt(Stream, Stream, SecureMemory(Of Byte))
- uid: LibSodium.SecretStream.Encrypt(System.IO.Stream,System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name: Encrypt(Stream, Stream, ReadOnlySpan<byte>)
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_Encrypt_System_IO_Stream_System_IO_Stream_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecretStream.Encrypt(System.IO.Stream,System.IO.Stream,System.ReadOnlySpan{System.Byte})
  name.vb: Encrypt(Stream, Stream, ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecretStream.Encrypt(System.IO.Stream, System.IO.Stream, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecretStream.Encrypt(System.IO.Stream, System.IO.Stream, System.ReadOnlySpan(Of Byte))
  nameWithType: SecretStream.Encrypt(Stream, Stream, ReadOnlySpan<byte>)
  nameWithType.vb: SecretStream.Encrypt(Stream, Stream, ReadOnlySpan(Of Byte))
- uid: LibSodium.SecretStream.Encrypt*
  name: Encrypt
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_Encrypt_
  commentId: Overload:LibSodium.SecretStream.Encrypt
  isSpec: "True"
  fullName: LibSodium.SecretStream.Encrypt
  nameWithType: SecretStream.Encrypt
- uid: LibSodium.SecretStream.EncryptAsync(System.IO.Stream,System.IO.Stream,LibSodium.SecureMemory{System.Byte},System.Threading.CancellationToken)
  name: EncryptAsync(Stream, Stream, SecureMemory<byte>, CancellationToken)
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_EncryptAsync_System_IO_Stream_System_IO_Stream_LibSodium_SecureMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.SecretStream.EncryptAsync(System.IO.Stream,System.IO.Stream,LibSodium.SecureMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: EncryptAsync(Stream, Stream, SecureMemory(Of Byte), CancellationToken)
  fullName: LibSodium.SecretStream.EncryptAsync(System.IO.Stream, System.IO.Stream, LibSodium.SecureMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.SecretStream.EncryptAsync(System.IO.Stream, System.IO.Stream, LibSodium.SecureMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: SecretStream.EncryptAsync(Stream, Stream, SecureMemory<byte>, CancellationToken)
  nameWithType.vb: SecretStream.EncryptAsync(Stream, Stream, SecureMemory(Of Byte), CancellationToken)
- uid: LibSodium.SecretStream.EncryptAsync(System.IO.Stream,System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: EncryptAsync(Stream, Stream, ReadOnlyMemory<byte>, CancellationToken)
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_EncryptAsync_System_IO_Stream_System_IO_Stream_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:LibSodium.SecretStream.EncryptAsync(System.IO.Stream,System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: EncryptAsync(Stream, Stream, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: LibSodium.SecretStream.EncryptAsync(System.IO.Stream, System.IO.Stream, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: LibSodium.SecretStream.EncryptAsync(System.IO.Stream, System.IO.Stream, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: SecretStream.EncryptAsync(Stream, Stream, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: SecretStream.EncryptAsync(Stream, Stream, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: LibSodium.SecretStream.EncryptAsync*
  name: EncryptAsync
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_EncryptAsync_
  commentId: Overload:LibSodium.SecretStream.EncryptAsync
  isSpec: "True"
  fullName: LibSodium.SecretStream.EncryptAsync
  nameWithType: SecretStream.EncryptAsync
- uid: LibSodium.SecretStream.PlainChunkSize
  name: PlainChunkSize
  href: api/LibSodium.SecretStream.html#LibSodium_SecretStream_PlainChunkSize
  commentId: F:LibSodium.SecretStream.PlainChunkSize
  fullName: LibSodium.SecretStream.PlainChunkSize
  nameWithType: SecretStream.PlainChunkSize
- uid: LibSodium.SecureBigUnsignedInteger
  name: SecureBigUnsignedInteger
  href: api/LibSodium.SecureBigUnsignedInteger.html
  commentId: T:LibSodium.SecureBigUnsignedInteger
  fullName: LibSodium.SecureBigUnsignedInteger
  nameWithType: SecureBigUnsignedInteger
- uid: LibSodium.SecureBigUnsignedInteger.Add(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Add(Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_Add_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecureBigUnsignedInteger.Add(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Add(Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecureBigUnsignedInteger.Add(System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecureBigUnsignedInteger.Add(System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: SecureBigUnsignedInteger.Add(Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: SecureBigUnsignedInteger.Add(Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.SecureBigUnsignedInteger.Add*
  name: Add
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_Add_
  commentId: Overload:LibSodium.SecureBigUnsignedInteger.Add
  isSpec: "True"
  fullName: LibSodium.SecureBigUnsignedInteger.Add
  nameWithType: SecureBigUnsignedInteger.Add
- uid: LibSodium.SecureBigUnsignedInteger.Compare(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Compare(ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_Compare_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecureBigUnsignedInteger.Compare(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Compare(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecureBigUnsignedInteger.Compare(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecureBigUnsignedInteger.Compare(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: SecureBigUnsignedInteger.Compare(ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: SecureBigUnsignedInteger.Compare(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.SecureBigUnsignedInteger.Compare*
  name: Compare
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_Compare_
  commentId: Overload:LibSodium.SecureBigUnsignedInteger.Compare
  isSpec: "True"
  fullName: LibSodium.SecureBigUnsignedInteger.Compare
  nameWithType: SecureBigUnsignedInteger.Compare
- uid: LibSodium.SecureBigUnsignedInteger.Equals(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Equals(ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_Equals_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecureBigUnsignedInteger.Equals(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Equals(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecureBigUnsignedInteger.Equals(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecureBigUnsignedInteger.Equals(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: SecureBigUnsignedInteger.Equals(ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: SecureBigUnsignedInteger.Equals(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.SecureBigUnsignedInteger.Equals*
  name: Equals
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_Equals_
  commentId: Overload:LibSodium.SecureBigUnsignedInteger.Equals
  isSpec: "True"
  fullName: LibSodium.SecureBigUnsignedInteger.Equals
  nameWithType: SecureBigUnsignedInteger.Equals
- uid: LibSodium.SecureBigUnsignedInteger.Increment(System.Span{System.Byte})
  name: Increment(Span<byte>)
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_Increment_System_Span_System_Byte__
  commentId: M:LibSodium.SecureBigUnsignedInteger.Increment(System.Span{System.Byte})
  name.vb: Increment(Span(Of Byte))
  fullName: LibSodium.SecureBigUnsignedInteger.Increment(System.Span<byte>)
  fullName.vb: LibSodium.SecureBigUnsignedInteger.Increment(System.Span(Of Byte))
  nameWithType: SecureBigUnsignedInteger.Increment(Span<byte>)
  nameWithType.vb: SecureBigUnsignedInteger.Increment(Span(Of Byte))
- uid: LibSodium.SecureBigUnsignedInteger.Increment(System.Span{System.Byte},System.UInt64)
  name: Increment(Span<byte>, ulong)
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_Increment_System_Span_System_Byte__System_UInt64_
  commentId: M:LibSodium.SecureBigUnsignedInteger.Increment(System.Span{System.Byte},System.UInt64)
  name.vb: Increment(Span(Of Byte), ULong)
  fullName: LibSodium.SecureBigUnsignedInteger.Increment(System.Span<byte>, ulong)
  fullName.vb: LibSodium.SecureBigUnsignedInteger.Increment(System.Span(Of Byte), ULong)
  nameWithType: SecureBigUnsignedInteger.Increment(Span<byte>, ulong)
  nameWithType.vb: SecureBigUnsignedInteger.Increment(Span(Of Byte), ULong)
- uid: LibSodium.SecureBigUnsignedInteger.Increment*
  name: Increment
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_Increment_
  commentId: Overload:LibSodium.SecureBigUnsignedInteger.Increment
  isSpec: "True"
  fullName: LibSodium.SecureBigUnsignedInteger.Increment
  nameWithType: SecureBigUnsignedInteger.Increment
- uid: LibSodium.SecureBigUnsignedInteger.IsZero(System.ReadOnlySpan{System.Byte})
  name: IsZero(ReadOnlySpan<byte>)
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_IsZero_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecureBigUnsignedInteger.IsZero(System.ReadOnlySpan{System.Byte})
  name.vb: IsZero(ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecureBigUnsignedInteger.IsZero(System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecureBigUnsignedInteger.IsZero(System.ReadOnlySpan(Of Byte))
  nameWithType: SecureBigUnsignedInteger.IsZero(ReadOnlySpan<byte>)
  nameWithType.vb: SecureBigUnsignedInteger.IsZero(ReadOnlySpan(Of Byte))
- uid: LibSodium.SecureBigUnsignedInteger.IsZero*
  name: IsZero
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_IsZero_
  commentId: Overload:LibSodium.SecureBigUnsignedInteger.IsZero
  isSpec: "True"
  fullName: LibSodium.SecureBigUnsignedInteger.IsZero
  nameWithType: SecureBigUnsignedInteger.IsZero
- uid: LibSodium.SecureBigUnsignedInteger.Subtract(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Subtract(Span<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_Subtract_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecureBigUnsignedInteger.Subtract(System.Span{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Subtract(Span(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecureBigUnsignedInteger.Subtract(System.Span<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecureBigUnsignedInteger.Subtract(System.Span(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: SecureBigUnsignedInteger.Subtract(Span<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: SecureBigUnsignedInteger.Subtract(Span(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.SecureBigUnsignedInteger.Subtract*
  name: Subtract
  href: api/LibSodium.SecureBigUnsignedInteger.html#LibSodium_SecureBigUnsignedInteger_Subtract_
  commentId: Overload:LibSodium.SecureBigUnsignedInteger.Subtract
  isSpec: "True"
  fullName: LibSodium.SecureBigUnsignedInteger.Subtract
  nameWithType: SecureBigUnsignedInteger.Subtract
- uid: LibSodium.SecureMemory
  name: SecureMemory
  href: api/LibSodium.SecureMemory.html
  commentId: T:LibSodium.SecureMemory
  fullName: LibSodium.SecureMemory
  nameWithType: SecureMemory
- uid: LibSodium.SecureMemory.Create*
  name: Create
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_Create_
  commentId: Overload:LibSodium.SecureMemory.Create
  isSpec: "True"
  fullName: LibSodium.SecureMemory.Create
  nameWithType: SecureMemory.Create
- uid: LibSodium.SecureMemory.Create``1(System.Int32)
  name: Create<T>(int)
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_Create__1_System_Int32_
  commentId: M:LibSodium.SecureMemory.Create``1(System.Int32)
  name.vb: Create(Of T)(Integer)
  fullName: LibSodium.SecureMemory.Create<T>(int)
  fullName.vb: LibSodium.SecureMemory.Create(Of T)(Integer)
  nameWithType: SecureMemory.Create<T>(int)
  nameWithType.vb: SecureMemory.Create(Of T)(Integer)
- uid: LibSodium.SecureMemory.Equals(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Equals(ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_Equals_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecureMemory.Equals(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Equals(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecureMemory.Equals(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecureMemory.Equals(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: SecureMemory.Equals(ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: SecureMemory.Equals(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.SecureMemory.Equals*
  name: Equals
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_Equals_
  commentId: Overload:LibSodium.SecureMemory.Equals
  isSpec: "True"
  fullName: LibSodium.SecureMemory.Equals
  nameWithType: SecureMemory.Equals
- uid: LibSodium.SecureMemory.IsZero(System.ReadOnlySpan{System.Byte})
  name: IsZero(ReadOnlySpan<byte>)
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_IsZero_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecureMemory.IsZero(System.ReadOnlySpan{System.Byte})
  name.vb: IsZero(ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecureMemory.IsZero(System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecureMemory.IsZero(System.ReadOnlySpan(Of Byte))
  nameWithType: SecureMemory.IsZero(ReadOnlySpan<byte>)
  nameWithType.vb: SecureMemory.IsZero(ReadOnlySpan(Of Byte))
- uid: LibSodium.SecureMemory.IsZero*
  name: IsZero
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_IsZero_
  commentId: Overload:LibSodium.SecureMemory.IsZero
  isSpec: "True"
  fullName: LibSodium.SecureMemory.IsZero
  nameWithType: SecureMemory.IsZero
- uid: LibSodium.SecureMemory.IsZero``1(System.ReadOnlySpan{``0})
  name: IsZero<T>(ReadOnlySpan<T>)
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_IsZero__1_System_ReadOnlySpan___0__
  commentId: M:LibSodium.SecureMemory.IsZero``1(System.ReadOnlySpan{``0})
  name.vb: IsZero(Of T)(ReadOnlySpan(Of T))
  fullName: LibSodium.SecureMemory.IsZero<T>(System.ReadOnlySpan<T>)
  fullName.vb: LibSodium.SecureMemory.IsZero(Of T)(System.ReadOnlySpan(Of T))
  nameWithType: SecureMemory.IsZero<T>(ReadOnlySpan<T>)
  nameWithType.vb: SecureMemory.IsZero(Of T)(ReadOnlySpan(Of T))
- uid: LibSodium.SecureMemory.IsZero``1(``0[])
  name: IsZero<T>(T[])
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_IsZero__1___0___
  commentId: M:LibSodium.SecureMemory.IsZero``1(``0[])
  name.vb: IsZero(Of T)(T())
  fullName: LibSodium.SecureMemory.IsZero<T>(T[])
  fullName.vb: LibSodium.SecureMemory.IsZero(Of T)(T())
  nameWithType: SecureMemory.IsZero<T>(T[])
  nameWithType.vb: SecureMemory.IsZero(Of T)(T())
- uid: LibSodium.SecureMemory.MemLock(System.ReadOnlySpan{System.Byte})
  name: MemLock(ReadOnlySpan<byte>)
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemLock_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecureMemory.MemLock(System.ReadOnlySpan{System.Byte})
  name.vb: MemLock(ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecureMemory.MemLock(System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecureMemory.MemLock(System.ReadOnlySpan(Of Byte))
  nameWithType: SecureMemory.MemLock(ReadOnlySpan<byte>)
  nameWithType.vb: SecureMemory.MemLock(ReadOnlySpan(Of Byte))
- uid: LibSodium.SecureMemory.MemLock*
  name: MemLock
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemLock_
  commentId: Overload:LibSodium.SecureMemory.MemLock
  isSpec: "True"
  fullName: LibSodium.SecureMemory.MemLock
  nameWithType: SecureMemory.MemLock
- uid: LibSodium.SecureMemory.MemLock``1(System.ReadOnlySpan{``0})
  name: MemLock<T>(ReadOnlySpan<T>)
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemLock__1_System_ReadOnlySpan___0__
  commentId: M:LibSodium.SecureMemory.MemLock``1(System.ReadOnlySpan{``0})
  name.vb: MemLock(Of T)(ReadOnlySpan(Of T))
  fullName: LibSodium.SecureMemory.MemLock<T>(System.ReadOnlySpan<T>)
  fullName.vb: LibSodium.SecureMemory.MemLock(Of T)(System.ReadOnlySpan(Of T))
  nameWithType: SecureMemory.MemLock<T>(ReadOnlySpan<T>)
  nameWithType.vb: SecureMemory.MemLock(Of T)(ReadOnlySpan(Of T))
- uid: LibSodium.SecureMemory.MemUnlock(System.ReadOnlySpan{System.Byte})
  name: MemUnlock(ReadOnlySpan<byte>)
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemUnlock_System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.SecureMemory.MemUnlock(System.ReadOnlySpan{System.Byte})
  name.vb: MemUnlock(ReadOnlySpan(Of Byte))
  fullName: LibSodium.SecureMemory.MemUnlock(System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.SecureMemory.MemUnlock(System.ReadOnlySpan(Of Byte))
  nameWithType: SecureMemory.MemUnlock(ReadOnlySpan<byte>)
  nameWithType.vb: SecureMemory.MemUnlock(ReadOnlySpan(Of Byte))
- uid: LibSodium.SecureMemory.MemUnlock*
  name: MemUnlock
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemUnlock_
  commentId: Overload:LibSodium.SecureMemory.MemUnlock
  isSpec: "True"
  fullName: LibSodium.SecureMemory.MemUnlock
  nameWithType: SecureMemory.MemUnlock
- uid: LibSodium.SecureMemory.MemUnlock``1(System.ReadOnlySpan{``0})
  name: MemUnlock<T>(ReadOnlySpan<T>)
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemUnlock__1_System_ReadOnlySpan___0__
  commentId: M:LibSodium.SecureMemory.MemUnlock``1(System.ReadOnlySpan{``0})
  name.vb: MemUnlock(Of T)(ReadOnlySpan(Of T))
  fullName: LibSodium.SecureMemory.MemUnlock<T>(System.ReadOnlySpan<T>)
  fullName.vb: LibSodium.SecureMemory.MemUnlock(Of T)(System.ReadOnlySpan(Of T))
  nameWithType: SecureMemory.MemUnlock<T>(ReadOnlySpan<T>)
  nameWithType.vb: SecureMemory.MemUnlock(Of T)(ReadOnlySpan(Of T))
- uid: LibSodium.SecureMemory.MemZero(System.Byte[])
  name: MemZero(byte[])
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemZero_System_Byte___
  commentId: M:LibSodium.SecureMemory.MemZero(System.Byte[])
  name.vb: MemZero(Byte())
  fullName: LibSodium.SecureMemory.MemZero(byte[])
  fullName.vb: LibSodium.SecureMemory.MemZero(Byte())
  nameWithType: SecureMemory.MemZero(byte[])
  nameWithType.vb: SecureMemory.MemZero(Byte())
- uid: LibSodium.SecureMemory.MemZero(System.Span{System.Byte})
  name: MemZero(Span<byte>)
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemZero_System_Span_System_Byte__
  commentId: M:LibSodium.SecureMemory.MemZero(System.Span{System.Byte})
  name.vb: MemZero(Span(Of Byte))
  fullName: LibSodium.SecureMemory.MemZero(System.Span<byte>)
  fullName.vb: LibSodium.SecureMemory.MemZero(System.Span(Of Byte))
  nameWithType: SecureMemory.MemZero(Span<byte>)
  nameWithType.vb: SecureMemory.MemZero(Span(Of Byte))
- uid: LibSodium.SecureMemory.MemZero*
  name: MemZero
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemZero_
  commentId: Overload:LibSodium.SecureMemory.MemZero
  isSpec: "True"
  fullName: LibSodium.SecureMemory.MemZero
  nameWithType: SecureMemory.MemZero
- uid: LibSodium.SecureMemory.MemZero``1(System.Span{``0})
  name: MemZero<T>(Span<T>)
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemZero__1_System_Span___0__
  commentId: M:LibSodium.SecureMemory.MemZero``1(System.Span{``0})
  name.vb: MemZero(Of T)(Span(Of T))
  fullName: LibSodium.SecureMemory.MemZero<T>(System.Span<T>)
  fullName.vb: LibSodium.SecureMemory.MemZero(Of T)(System.Span(Of T))
  nameWithType: SecureMemory.MemZero<T>(Span<T>)
  nameWithType.vb: SecureMemory.MemZero(Of T)(Span(Of T))
- uid: LibSodium.SecureMemory.MemZero``1(``0@)
  name: MemZero<T>(ref T)
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemZero__1___0__
  commentId: M:LibSodium.SecureMemory.MemZero``1(``0@)
  name.vb: MemZero(Of T)(T)
  fullName: LibSodium.SecureMemory.MemZero<T>(ref T)
  fullName.vb: LibSodium.SecureMemory.MemZero(Of T)(T)
  nameWithType: SecureMemory.MemZero<T>(ref T)
  nameWithType.vb: SecureMemory.MemZero(Of T)(T)
- uid: LibSodium.SecureMemory.MemZero``1(``0[])
  name: MemZero<T>(T[])
  href: api/LibSodium.SecureMemory.html#LibSodium_SecureMemory_MemZero__1___0___
  commentId: M:LibSodium.SecureMemory.MemZero``1(``0[])
  name.vb: MemZero(Of T)(T())
  fullName: LibSodium.SecureMemory.MemZero<T>(T[])
  fullName.vb: LibSodium.SecureMemory.MemZero(Of T)(T())
  nameWithType: SecureMemory.MemZero<T>(T[])
  nameWithType.vb: SecureMemory.MemZero(Of T)(T())
- uid: LibSodium.SecureMemory`1
  name: SecureMemory<T>
  href: api/LibSodium.SecureMemory-1.html
  commentId: T:LibSodium.SecureMemory`1
  name.vb: SecureMemory(Of T)
  fullName: LibSodium.SecureMemory<T>
  fullName.vb: LibSodium.SecureMemory(Of T)
  nameWithType: SecureMemory<T>
  nameWithType.vb: SecureMemory(Of T)
- uid: LibSodium.SecureMemory`1.#ctor(System.Int32)
  name: SecureMemory(int)
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1__ctor_System_Int32_
  commentId: M:LibSodium.SecureMemory`1.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: LibSodium.SecureMemory<T>.SecureMemory(int)
  fullName.vb: LibSodium.SecureMemory(Of T).New(Integer)
  nameWithType: SecureMemory<T>.SecureMemory(int)
  nameWithType.vb: SecureMemory(Of T).New(Integer)
- uid: LibSodium.SecureMemory`1.#ctor*
  name: SecureMemory
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1__ctor_
  commentId: Overload:LibSodium.SecureMemory`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: LibSodium.SecureMemory<T>.SecureMemory
  fullName.vb: LibSodium.SecureMemory(Of T).New
  nameWithType: SecureMemory<T>.SecureMemory
  nameWithType.vb: SecureMemory(Of T).New
- uid: LibSodium.SecureMemory`1.AsMemory
  name: AsMemory()
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_AsMemory
  commentId: M:LibSodium.SecureMemory`1.AsMemory
  fullName: LibSodium.SecureMemory<T>.AsMemory()
  fullName.vb: LibSodium.SecureMemory(Of T).AsMemory()
  nameWithType: SecureMemory<T>.AsMemory()
  nameWithType.vb: SecureMemory(Of T).AsMemory()
- uid: LibSodium.SecureMemory`1.AsMemory*
  name: AsMemory
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_AsMemory_
  commentId: Overload:LibSodium.SecureMemory`1.AsMemory
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.AsMemory
  fullName.vb: LibSodium.SecureMemory(Of T).AsMemory
  nameWithType: SecureMemory<T>.AsMemory
  nameWithType.vb: SecureMemory(Of T).AsMemory
- uid: LibSodium.SecureMemory`1.AsReadOnlyMemory
  name: AsReadOnlyMemory()
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_AsReadOnlyMemory
  commentId: M:LibSodium.SecureMemory`1.AsReadOnlyMemory
  fullName: LibSodium.SecureMemory<T>.AsReadOnlyMemory()
  fullName.vb: LibSodium.SecureMemory(Of T).AsReadOnlyMemory()
  nameWithType: SecureMemory<T>.AsReadOnlyMemory()
  nameWithType.vb: SecureMemory(Of T).AsReadOnlyMemory()
- uid: LibSodium.SecureMemory`1.AsReadOnlyMemory*
  name: AsReadOnlyMemory
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_AsReadOnlyMemory_
  commentId: Overload:LibSodium.SecureMemory`1.AsReadOnlyMemory
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.AsReadOnlyMemory
  fullName.vb: LibSodium.SecureMemory(Of T).AsReadOnlyMemory
  nameWithType: SecureMemory<T>.AsReadOnlyMemory
  nameWithType.vb: SecureMemory(Of T).AsReadOnlyMemory
- uid: LibSodium.SecureMemory`1.AsReadOnlySpan
  name: AsReadOnlySpan()
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_AsReadOnlySpan
  commentId: M:LibSodium.SecureMemory`1.AsReadOnlySpan
  fullName: LibSodium.SecureMemory<T>.AsReadOnlySpan()
  fullName.vb: LibSodium.SecureMemory(Of T).AsReadOnlySpan()
  nameWithType: SecureMemory<T>.AsReadOnlySpan()
  nameWithType.vb: SecureMemory(Of T).AsReadOnlySpan()
- uid: LibSodium.SecureMemory`1.AsReadOnlySpan*
  name: AsReadOnlySpan
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_AsReadOnlySpan_
  commentId: Overload:LibSodium.SecureMemory`1.AsReadOnlySpan
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.AsReadOnlySpan
  fullName.vb: LibSodium.SecureMemory(Of T).AsReadOnlySpan
  nameWithType: SecureMemory<T>.AsReadOnlySpan
  nameWithType.vb: SecureMemory(Of T).AsReadOnlySpan
- uid: LibSodium.SecureMemory`1.AsSpan
  name: AsSpan()
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_AsSpan
  commentId: M:LibSodium.SecureMemory`1.AsSpan
  fullName: LibSodium.SecureMemory<T>.AsSpan()
  fullName.vb: LibSodium.SecureMemory(Of T).AsSpan()
  nameWithType: SecureMemory<T>.AsSpan()
  nameWithType.vb: SecureMemory(Of T).AsSpan()
- uid: LibSodium.SecureMemory`1.AsSpan*
  name: AsSpan
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_AsSpan_
  commentId: Overload:LibSodium.SecureMemory`1.AsSpan
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.AsSpan
  fullName.vb: LibSodium.SecureMemory(Of T).AsSpan
  nameWithType: SecureMemory<T>.AsSpan
  nameWithType.vb: SecureMemory(Of T).AsSpan
- uid: LibSodium.SecureMemory`1.Dispose
  name: Dispose()
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_Dispose
  commentId: M:LibSodium.SecureMemory`1.Dispose
  fullName: LibSodium.SecureMemory<T>.Dispose()
  fullName.vb: LibSodium.SecureMemory(Of T).Dispose()
  nameWithType: SecureMemory<T>.Dispose()
  nameWithType.vb: SecureMemory(Of T).Dispose()
- uid: LibSodium.SecureMemory`1.Dispose*
  name: Dispose
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_Dispose_
  commentId: Overload:LibSodium.SecureMemory`1.Dispose
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.Dispose
  fullName.vb: LibSodium.SecureMemory(Of T).Dispose
  nameWithType: SecureMemory<T>.Dispose
  nameWithType.vb: SecureMemory(Of T).Dispose
- uid: LibSodium.SecureMemory`1.Finalize
  name: ~SecureMemory()
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_Finalize
  commentId: M:LibSodium.SecureMemory`1.Finalize
  name.vb: ''
  fullName: LibSodium.SecureMemory<T>.~SecureMemory()
  fullName.vb: ''
  nameWithType: SecureMemory<T>.~SecureMemory()
  nameWithType.vb: ''
- uid: LibSodium.SecureMemory`1.Finalize*
  name: ~SecureMemory
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_Finalize_
  commentId: Overload:LibSodium.SecureMemory`1.Finalize
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.~SecureMemory
  nameWithType: SecureMemory<T>.~SecureMemory
- uid: LibSodium.SecureMemory`1.IsDisposed
  name: IsDisposed
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_IsDisposed
  commentId: P:LibSodium.SecureMemory`1.IsDisposed
  fullName: LibSodium.SecureMemory<T>.IsDisposed
  fullName.vb: LibSodium.SecureMemory(Of T).IsDisposed
  nameWithType: SecureMemory<T>.IsDisposed
  nameWithType.vb: SecureMemory(Of T).IsDisposed
- uid: LibSodium.SecureMemory`1.IsDisposed*
  name: IsDisposed
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_IsDisposed_
  commentId: Overload:LibSodium.SecureMemory`1.IsDisposed
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.IsDisposed
  fullName.vb: LibSodium.SecureMemory(Of T).IsDisposed
  nameWithType: SecureMemory<T>.IsDisposed
  nameWithType.vb: SecureMemory(Of T).IsDisposed
- uid: LibSodium.SecureMemory`1.IsReadOnly
  name: IsReadOnly
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_IsReadOnly
  commentId: P:LibSodium.SecureMemory`1.IsReadOnly
  fullName: LibSodium.SecureMemory<T>.IsReadOnly
  fullName.vb: LibSodium.SecureMemory(Of T).IsReadOnly
  nameWithType: SecureMemory<T>.IsReadOnly
  nameWithType.vb: SecureMemory(Of T).IsReadOnly
- uid: LibSodium.SecureMemory`1.IsReadOnly*
  name: IsReadOnly
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_IsReadOnly_
  commentId: Overload:LibSodium.SecureMemory`1.IsReadOnly
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.IsReadOnly
  fullName.vb: LibSodium.SecureMemory(Of T).IsReadOnly
  nameWithType: SecureMemory<T>.IsReadOnly
  nameWithType.vb: SecureMemory(Of T).IsReadOnly
- uid: LibSodium.SecureMemory`1.Length
  name: Length
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_Length
  commentId: P:LibSodium.SecureMemory`1.Length
  fullName: LibSodium.SecureMemory<T>.Length
  fullName.vb: LibSodium.SecureMemory(Of T).Length
  nameWithType: SecureMemory<T>.Length
  nameWithType.vb: SecureMemory(Of T).Length
- uid: LibSodium.SecureMemory`1.Length*
  name: Length
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_Length_
  commentId: Overload:LibSodium.SecureMemory`1.Length
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.Length
  fullName.vb: LibSodium.SecureMemory(Of T).Length
  nameWithType: SecureMemory<T>.Length
  nameWithType.vb: SecureMemory(Of T).Length
- uid: LibSodium.SecureMemory`1.MemZero
  name: MemZero()
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_MemZero
  commentId: M:LibSodium.SecureMemory`1.MemZero
  fullName: LibSodium.SecureMemory<T>.MemZero()
  fullName.vb: LibSodium.SecureMemory(Of T).MemZero()
  nameWithType: SecureMemory<T>.MemZero()
  nameWithType.vb: SecureMemory(Of T).MemZero()
- uid: LibSodium.SecureMemory`1.MemZero*
  name: MemZero
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_MemZero_
  commentId: Overload:LibSodium.SecureMemory`1.MemZero
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.MemZero
  fullName.vb: LibSodium.SecureMemory(Of T).MemZero
  nameWithType: SecureMemory<T>.MemZero
  nameWithType.vb: SecureMemory(Of T).MemZero
- uid: LibSodium.SecureMemory`1.ProtectReadOnly
  name: ProtectReadOnly()
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_ProtectReadOnly
  commentId: M:LibSodium.SecureMemory`1.ProtectReadOnly
  fullName: LibSodium.SecureMemory<T>.ProtectReadOnly()
  fullName.vb: LibSodium.SecureMemory(Of T).ProtectReadOnly()
  nameWithType: SecureMemory<T>.ProtectReadOnly()
  nameWithType.vb: SecureMemory(Of T).ProtectReadOnly()
- uid: LibSodium.SecureMemory`1.ProtectReadOnly*
  name: ProtectReadOnly
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_ProtectReadOnly_
  commentId: Overload:LibSodium.SecureMemory`1.ProtectReadOnly
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.ProtectReadOnly
  fullName.vb: LibSodium.SecureMemory(Of T).ProtectReadOnly
  nameWithType: SecureMemory<T>.ProtectReadOnly
  nameWithType.vb: SecureMemory(Of T).ProtectReadOnly
- uid: LibSodium.SecureMemory`1.ProtectReadWrite
  name: ProtectReadWrite()
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_ProtectReadWrite
  commentId: M:LibSodium.SecureMemory`1.ProtectReadWrite
  fullName: LibSodium.SecureMemory<T>.ProtectReadWrite()
  fullName.vb: LibSodium.SecureMemory(Of T).ProtectReadWrite()
  nameWithType: SecureMemory<T>.ProtectReadWrite()
  nameWithType.vb: SecureMemory(Of T).ProtectReadWrite()
- uid: LibSodium.SecureMemory`1.ProtectReadWrite*
  name: ProtectReadWrite
  href: api/LibSodium.SecureMemory-1.html#LibSodium_SecureMemory_1_ProtectReadWrite_
  commentId: Overload:LibSodium.SecureMemory`1.ProtectReadWrite
  isSpec: "True"
  fullName: LibSodium.SecureMemory<T>.ProtectReadWrite
  fullName.vb: LibSodium.SecureMemory(Of T).ProtectReadWrite
  nameWithType: SecureMemory<T>.ProtectReadWrite
  nameWithType.vb: SecureMemory(Of T).ProtectReadWrite
- uid: LibSodium.SecurePadding
  name: SecurePadding
  href: api/LibSodium.SecurePadding.html
  commentId: T:LibSodium.SecurePadding
  fullName: LibSodium.SecurePadding
  nameWithType: SecurePadding
- uid: LibSodium.SecurePadding.Pad(System.Span{System.Byte},System.Int32,System.Int32)
  name: Pad(Span<byte>, int, int)
  href: api/LibSodium.SecurePadding.html#LibSodium_SecurePadding_Pad_System_Span_System_Byte__System_Int32_System_Int32_
  commentId: M:LibSodium.SecurePadding.Pad(System.Span{System.Byte},System.Int32,System.Int32)
  name.vb: Pad(Span(Of Byte), Integer, Integer)
  fullName: LibSodium.SecurePadding.Pad(System.Span<byte>, int, int)
  fullName.vb: LibSodium.SecurePadding.Pad(System.Span(Of Byte), Integer, Integer)
  nameWithType: SecurePadding.Pad(Span<byte>, int, int)
  nameWithType.vb: SecurePadding.Pad(Span(Of Byte), Integer, Integer)
- uid: LibSodium.SecurePadding.Pad*
  name: Pad
  href: api/LibSodium.SecurePadding.html#LibSodium_SecurePadding_Pad_
  commentId: Overload:LibSodium.SecurePadding.Pad
  isSpec: "True"
  fullName: LibSodium.SecurePadding.Pad
  nameWithType: SecurePadding.Pad
- uid: LibSodium.SecurePadding.Unpad(System.Span{System.Byte},System.Int32)
  name: Unpad(Span<byte>, int)
  href: api/LibSodium.SecurePadding.html#LibSodium_SecurePadding_Unpad_System_Span_System_Byte__System_Int32_
  commentId: M:LibSodium.SecurePadding.Unpad(System.Span{System.Byte},System.Int32)
  name.vb: Unpad(Span(Of Byte), Integer)
  fullName: LibSodium.SecurePadding.Unpad(System.Span<byte>, int)
  fullName.vb: LibSodium.SecurePadding.Unpad(System.Span(Of Byte), Integer)
  nameWithType: SecurePadding.Unpad(Span<byte>, int)
  nameWithType.vb: SecurePadding.Unpad(Span(Of Byte), Integer)
- uid: LibSodium.SecurePadding.Unpad*
  name: Unpad
  href: api/LibSodium.SecurePadding.html#LibSodium_SecurePadding_Unpad_
  commentId: Overload:LibSodium.SecurePadding.Unpad
  isSpec: "True"
  fullName: LibSodium.SecurePadding.Unpad
  nameWithType: SecurePadding.Unpad
- uid: LibSodium.UnmanagedMemorySpanHolder`1
  name: UnmanagedMemorySpanHolder<T>
  href: api/LibSodium.UnmanagedMemorySpanHolder-1.html
  commentId: T:LibSodium.UnmanagedMemorySpanHolder`1
  name.vb: UnmanagedMemorySpanHolder(Of T)
  fullName: LibSodium.UnmanagedMemorySpanHolder<T>
  fullName.vb: LibSodium.UnmanagedMemorySpanHolder(Of T)
  nameWithType: UnmanagedMemorySpanHolder<T>
  nameWithType.vb: UnmanagedMemorySpanHolder(Of T)
- uid: LibSodium.UnmanagedMemorySpanHolder`1.#ctor(System.ReadOnlySpan{`0})
  name: UnmanagedMemorySpanHolder(ReadOnlySpan<T>)
  href: api/LibSodium.UnmanagedMemorySpanHolder-1.html#LibSodium_UnmanagedMemorySpanHolder_1__ctor_System_ReadOnlySpan__0__
  commentId: M:LibSodium.UnmanagedMemorySpanHolder`1.#ctor(System.ReadOnlySpan{`0})
  name.vb: New(ReadOnlySpan(Of T))
  fullName: LibSodium.UnmanagedMemorySpanHolder<T>.UnmanagedMemorySpanHolder(System.ReadOnlySpan<T>)
  fullName.vb: LibSodium.UnmanagedMemorySpanHolder(Of T).New(System.ReadOnlySpan(Of T))
  nameWithType: UnmanagedMemorySpanHolder<T>.UnmanagedMemorySpanHolder(ReadOnlySpan<T>)
  nameWithType.vb: UnmanagedMemorySpanHolder(Of T).New(ReadOnlySpan(Of T))
- uid: LibSodium.UnmanagedMemorySpanHolder`1.#ctor(System.Span{`0})
  name: UnmanagedMemorySpanHolder(Span<T>)
  href: api/LibSodium.UnmanagedMemorySpanHolder-1.html#LibSodium_UnmanagedMemorySpanHolder_1__ctor_System_Span__0__
  commentId: M:LibSodium.UnmanagedMemorySpanHolder`1.#ctor(System.Span{`0})
  name.vb: New(Span(Of T))
  fullName: LibSodium.UnmanagedMemorySpanHolder<T>.UnmanagedMemorySpanHolder(System.Span<T>)
  fullName.vb: LibSodium.UnmanagedMemorySpanHolder(Of T).New(System.Span(Of T))
  nameWithType: UnmanagedMemorySpanHolder<T>.UnmanagedMemorySpanHolder(Span<T>)
  nameWithType.vb: UnmanagedMemorySpanHolder(Of T).New(Span(Of T))
- uid: LibSodium.UnmanagedMemorySpanHolder`1.#ctor*
  name: UnmanagedMemorySpanHolder
  href: api/LibSodium.UnmanagedMemorySpanHolder-1.html#LibSodium_UnmanagedMemorySpanHolder_1__ctor_
  commentId: Overload:LibSodium.UnmanagedMemorySpanHolder`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: LibSodium.UnmanagedMemorySpanHolder<T>.UnmanagedMemorySpanHolder
  fullName.vb: LibSodium.UnmanagedMemorySpanHolder(Of T).New
  nameWithType: UnmanagedMemorySpanHolder<T>.UnmanagedMemorySpanHolder
  nameWithType.vb: UnmanagedMemorySpanHolder(Of T).New
- uid: LibSodium.UnmanagedMemorySpanHolder`1.GetOriginalReadOnlySpan
  name: GetOriginalReadOnlySpan()
  href: api/LibSodium.UnmanagedMemorySpanHolder-1.html#LibSodium_UnmanagedMemorySpanHolder_1_GetOriginalReadOnlySpan
  commentId: M:LibSodium.UnmanagedMemorySpanHolder`1.GetOriginalReadOnlySpan
  fullName: LibSodium.UnmanagedMemorySpanHolder<T>.GetOriginalReadOnlySpan()
  fullName.vb: LibSodium.UnmanagedMemorySpanHolder(Of T).GetOriginalReadOnlySpan()
  nameWithType: UnmanagedMemorySpanHolder<T>.GetOriginalReadOnlySpan()
  nameWithType.vb: UnmanagedMemorySpanHolder(Of T).GetOriginalReadOnlySpan()
- uid: LibSodium.UnmanagedMemorySpanHolder`1.GetOriginalReadOnlySpan*
  name: GetOriginalReadOnlySpan
  href: api/LibSodium.UnmanagedMemorySpanHolder-1.html#LibSodium_UnmanagedMemorySpanHolder_1_GetOriginalReadOnlySpan_
  commentId: Overload:LibSodium.UnmanagedMemorySpanHolder`1.GetOriginalReadOnlySpan
  isSpec: "True"
  fullName: LibSodium.UnmanagedMemorySpanHolder<T>.GetOriginalReadOnlySpan
  fullName.vb: LibSodium.UnmanagedMemorySpanHolder(Of T).GetOriginalReadOnlySpan
  nameWithType: UnmanagedMemorySpanHolder<T>.GetOriginalReadOnlySpan
  nameWithType.vb: UnmanagedMemorySpanHolder(Of T).GetOriginalReadOnlySpan
- uid: LibSodium.UnmanagedMemorySpanHolder`1.GetOriginalSpan
  name: GetOriginalSpan()
  href: api/LibSodium.UnmanagedMemorySpanHolder-1.html#LibSodium_UnmanagedMemorySpanHolder_1_GetOriginalSpan
  commentId: M:LibSodium.UnmanagedMemorySpanHolder`1.GetOriginalSpan
  fullName: LibSodium.UnmanagedMemorySpanHolder<T>.GetOriginalSpan()
  fullName.vb: LibSodium.UnmanagedMemorySpanHolder(Of T).GetOriginalSpan()
  nameWithType: UnmanagedMemorySpanHolder<T>.GetOriginalSpan()
  nameWithType.vb: UnmanagedMemorySpanHolder(Of T).GetOriginalSpan()
- uid: LibSodium.UnmanagedMemorySpanHolder`1.GetOriginalSpan*
  name: GetOriginalSpan
  href: api/LibSodium.UnmanagedMemorySpanHolder-1.html#LibSodium_UnmanagedMemorySpanHolder_1_GetOriginalSpan_
  commentId: Overload:LibSodium.UnmanagedMemorySpanHolder`1.GetOriginalSpan
  isSpec: "True"
  fullName: LibSodium.UnmanagedMemorySpanHolder<T>.GetOriginalSpan
  fullName.vb: LibSodium.UnmanagedMemorySpanHolder(Of T).GetOriginalSpan
  nameWithType: UnmanagedMemorySpanHolder<T>.GetOriginalSpan
  nameWithType.vb: UnmanagedMemorySpanHolder(Of T).GetOriginalSpan
- uid: LibSodium.XChaCha20Poly1305
  name: XChaCha20Poly1305
  href: api/LibSodium.XChaCha20Poly1305.html
  commentId: T:LibSodium.XChaCha20Poly1305
  fullName: LibSodium.XChaCha20Poly1305
  nameWithType: XChaCha20Poly1305
- uid: LibSodium.XChaCha20Poly1305.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.XChaCha20Poly1305.html#LibSodium_XChaCha20Poly1305_Decrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.XChaCha20Poly1305.Decrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.XChaCha20Poly1305.Decrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.XChaCha20Poly1305.Decrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: XChaCha20Poly1305.Decrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: XChaCha20Poly1305.Decrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.XChaCha20Poly1305.Decrypt*
  name: Decrypt
  href: api/LibSodium.XChaCha20Poly1305.html#LibSodium_XChaCha20Poly1305_Decrypt_
  commentId: Overload:LibSodium.XChaCha20Poly1305.Decrypt
  isSpec: "True"
  fullName: LibSodium.XChaCha20Poly1305.Decrypt
  nameWithType: XChaCha20Poly1305.Decrypt
- uid: LibSodium.XChaCha20Poly1305.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/LibSodium.XChaCha20Poly1305.html#LibSodium_XChaCha20Poly1305_Encrypt_System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:LibSodium.XChaCha20Poly1305.Encrypt(System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: LibSodium.XChaCha20Poly1305.Encrypt(System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: LibSodium.XChaCha20Poly1305.Encrypt(System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: XChaCha20Poly1305.Encrypt(Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: XChaCha20Poly1305.Encrypt(Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: LibSodium.XChaCha20Poly1305.Encrypt*
  name: Encrypt
  href: api/LibSodium.XChaCha20Poly1305.html#LibSodium_XChaCha20Poly1305_Encrypt_
  commentId: Overload:LibSodium.XChaCha20Poly1305.Encrypt
  isSpec: "True"
  fullName: LibSodium.XChaCha20Poly1305.Encrypt
  nameWithType: XChaCha20Poly1305.Encrypt
- uid: LibSodium.XChaCha20Poly1305.KeyLen
  name: KeyLen
  href: api/LibSodium.XChaCha20Poly1305.html#LibSodium_XChaCha20Poly1305_KeyLen
  commentId: P:LibSodium.XChaCha20Poly1305.KeyLen
  fullName: LibSodium.XChaCha20Poly1305.KeyLen
  nameWithType: XChaCha20Poly1305.KeyLen
- uid: LibSodium.XChaCha20Poly1305.KeyLen*
  name: KeyLen
  href: api/LibSodium.XChaCha20Poly1305.html#LibSodium_XChaCha20Poly1305_KeyLen_
  commentId: Overload:LibSodium.XChaCha20Poly1305.KeyLen
  isSpec: "True"
  fullName: LibSodium.XChaCha20Poly1305.KeyLen
  nameWithType: XChaCha20Poly1305.KeyLen
- uid: LibSodium.XChaCha20Poly1305.MacLen
  name: MacLen
  href: api/LibSodium.XChaCha20Poly1305.html#LibSodium_XChaCha20Poly1305_MacLen
  commentId: P:LibSodium.XChaCha20Poly1305.MacLen
  fullName: LibSodium.XChaCha20Poly1305.MacLen
  nameWithType: XChaCha20Poly1305.MacLen
- uid: LibSodium.XChaCha20Poly1305.MacLen*
  name: MacLen
  href: api/LibSodium.XChaCha20Poly1305.html#LibSodium_XChaCha20Poly1305_MacLen_
  commentId: Overload:LibSodium.XChaCha20Poly1305.MacLen
  isSpec: "True"
  fullName: LibSodium.XChaCha20Poly1305.MacLen
  nameWithType: XChaCha20Poly1305.MacLen
- uid: LibSodium.XChaCha20Poly1305.NonceLen
  name: NonceLen
  href: api/LibSodium.XChaCha20Poly1305.html#LibSodium_XChaCha20Poly1305_NonceLen
  commentId: P:LibSodium.XChaCha20Poly1305.NonceLen
  fullName: LibSodium.XChaCha20Poly1305.NonceLen
  nameWithType: XChaCha20Poly1305.NonceLen
- uid: LibSodium.XChaCha20Poly1305.NonceLen*
  name: NonceLen
  href: api/LibSodium.XChaCha20Poly1305.html#LibSodium_XChaCha20Poly1305_NonceLen_
  commentId: Overload:LibSodium.XChaCha20Poly1305.NonceLen
  isSpec: "True"
  fullName: LibSodium.XChaCha20Poly1305.NonceLen
  nameWithType: XChaCha20Poly1305.NonceLen
